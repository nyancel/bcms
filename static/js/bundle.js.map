{
  "version": 3,
  "sources": ["../../ts/src/user/user_local.ts", "../../ts/src/user/user_api.ts", "../../ts/src/user/user_header.ts", "../../ts/src/user/signin_page.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["import * as user_api from \"./user_api\";\r\n\r\nexport type UserStorageData = {\r\n    user: user_api.UserResponse,\r\n    token: user_api.TokenResponse\r\n}\r\n\r\nconst USER_TOKEN_KEY: string = \"BCMS_USERTS_LOCALTOKEN\";\r\nconst USER_DATA_KEY: string = \"BCMS_USERTS_LOCALUSER\";\r\n\r\nexport function get_local_user_data() {\r\n    let token_string = localStorage.getItem(USER_TOKEN_KEY);\r\n    let user_string = localStorage.getItem(USER_DATA_KEY)\r\n    if (!token_string || !user_string) {\r\n        return null;\r\n    }\r\n\r\n    let token = JSON.parse(token_string);\r\n    let user = JSON.parse(user_string);\r\n    if (!token || !user) {\r\n        return null;\r\n    }\r\n\r\n    let userData: UserStorageData = {\r\n        token: token,\r\n        user: user\r\n    }\r\n\r\n    return userData;\r\n}\r\n\r\nexport function clear_local_user_data() {\r\n    localStorage.removeItem(USER_DATA_KEY);\r\n    localStorage.removeItem(USER_TOKEN_KEY);\r\n    return true;\r\n}\r\n\r\nexport function save_user_data_to_local(userdata: UserStorageData) {\r\n    let token = JSON.stringify(userdata.token);\r\n    let data = JSON.stringify(userdata.user);\r\n    localStorage.setItem(USER_TOKEN_KEY, token);\r\n    localStorage.setItem(USER_DATA_KEY, data);\r\n    return true;\r\n}\r\n", "\r\ntype Response = {\r\n    data: any,\r\n    message: string,\r\n    time: number,\r\n}\r\n\r\nexport type TokenResponse = {\r\n    id: string,\r\n    user_id: string,\r\n    created_at: number,\r\n    expires_at: number,\r\n}\r\n\r\nexport type UserResponse = {\r\n    id: string,\r\n    firstname: string,\r\n    lastname: string,\r\n    email: string,\r\n    last_edited: number,\r\n    created_at: number,\r\n}\r\n\r\nexport type RightsResponse = {\r\n    user_id: string,\r\n    can_post_draft: boolean,\r\n    can_approve_draft: boolean,\r\n    can_publish_article: boolean,\r\n    can_delete_article: boolean,\r\n    can_post_media: boolean,\r\n    can_update_media: boolean,\r\n    can_assign_journalist: boolean,\r\n    can_assign_editorial: boolean,\r\n    can_assign_admin: boolean,\r\n    can_delete_other_user: boolean,\r\n    can_change_other_email: boolean,\r\n    can_change_other_password: boolean,\r\n    can_change_other_details: boolean,\r\n    can_submit_event: boolean,\r\n}\r\n\r\nexport type LoginRequest = {\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\nexport type RegisterRequest = {\r\n    email: string,\r\n    password: string,\r\n    firstname: string,\r\n    lastname: string,\r\n}\r\n\r\nexport type EditRightsRequest = {\r\n    // meta\r\n    auth_token: string,\r\n    user_id: string,\r\n    // rights\r\n    can_post_draft?: boolean,\r\n    can_approve_draft?: boolean,\r\n    can_read_all_drafts?: boolean,\r\n    can_publish_article?: boolean,\r\n    can_delete_article?: boolean,\r\n    can_post_media?: boolean,\r\n    can_update_media?: boolean,\r\n    can_assign_journalist?: boolean,\r\n    can_assign_editorial?: boolean,\r\n    can_assign_admin?: boolean,\r\n    can_delete_other_user?: boolean,\r\n    can_change_other_email?: boolean,\r\n    can_change_other_password?: boolean,\r\n    can_change_other_details?: boolean,\r\n    can_edit_user_rights?: boolean,\r\n    can_submit_event?: boolean,\r\n}\r\n\r\nexport type EditUserRequest = {\r\n    auth_token: string,\r\n    password: string,\r\n    firstname: string,\r\n    lastname: string,\r\n    new_password: string,\r\n    new_email: string,\r\n}\r\n\r\nasync function req(endpoint: string, payload: any) {\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n    });\r\n\r\n    let json = await response.json();\r\n    return { status_code: response.status, body: json as Response };\r\n}\r\n\r\n\r\nexport async function login(request: LoginRequest) {\r\n    let res = await req(\"/user/login\", request);\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let token = res.body.data as TokenResponse;\r\n    return token;\r\n}\r\n\r\nexport async function logout(auth_token: string) {\r\n    let res = await req(\"/user/logout\", { auth_token });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    return true;\r\n}\r\n\r\nexport async function register(request: RegisterRequest) {\r\n    let res = await req(\"/user/register\", request);\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let user = res.body.data as UserResponse;\r\n    return user;\r\n}\r\n\r\nexport async function edit_user_rights(request: EditRightsRequest) {\r\n    let res = await req(\"/user/edit_user_rights\", request);\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let rights = res.body.data as RightsResponse;\r\n    return rights;\r\n}\r\n\r\nexport async function who(auth_token: string) {\r\n    let res = await req(\"/user/who\", { auth_token });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let user = res.body.data as UserResponse;\r\n    return user;\r\n}\r\n\r\nexport async function rights(user_id: string) {\r\n    let res = await req(\"/user/rights\", { user_id });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let rights = res.body.data as RightsResponse;\r\n    return rights;\r\n}\r\n\r\nexport async function list_users(auth_token: string) {\r\n    let res = await req(\"/user/list_users\", { auth_token });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let users = res.body.data as UserResponse[];\r\n    return users;\r\n}\r\n\r\nexport async function show_user(user_id: string) {\r\n    let res = await req(\"/user/show_user\", { user_id });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let user = res.body.data as UserResponse;\r\n    return user;\r\n}\r\n\r\nexport async function edit_user(request: EditUserRequest) {\r\n    let res = await req(\"/user/edit_user\", request);\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let user = res.body.data as UserResponse;\r\n    return user;\r\n}\r\n\r\nexport async function delete_user(auth_token: string, password: string) {\r\n    let res = await req(\"/user/delete_user\", { auth_token, password });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    return true;\r\n}\r\n\r\nexport async function refresh_token(auth_token: string) {\r\n    let res = await req(\"/user/refresh_token\", { auth_token });\r\n    if (res.status_code != 200) {\r\n        throw new Error(res.body.message)\r\n    }\r\n    let token = res.body.data as TokenResponse;\r\n    return token;\r\n}\r\n", "import * as user_local from \"./user_local\";\r\nimport * as user_api from \"./user_api\";\r\n\r\ntype UserHtmlElements = {\r\n    login_template: HTMLTemplateElement,\r\n    profile_template: HTMLTemplateElement,\r\n    details_container: HTMLElement,\r\n}\r\n\r\nfunction get_html_elements() {\r\n    let login_template = document.querySelector(\".user-details-login-template\") as HTMLTemplateElement | null;\r\n    let profile_template = document.querySelector(\".user-details-profile-template\") as HTMLTemplateElement | null;\r\n    let details_container = document.querySelector(\".user-details-container\") as HTMLElement | null;\r\n\r\n    if (\r\n        !login_template ||\r\n        !profile_template ||\r\n        !details_container\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let elements: UserHtmlElements = {\r\n        login_template: login_template,\r\n        profile_template: profile_template,\r\n        details_container: details_container,\r\n    }\r\n    return elements;\r\n}\r\n\r\nfunction get_profile_elements(profile_template_clone: DocumentFragment) {\r\n    let firstname_element = profile_template_clone.querySelector(\"#user-profile-first-name\") as HTMLElement | null;\r\n    let lastname_element = profile_template_clone.querySelector(\"#user-profile-last-name\") as HTMLElement | null;\r\n    let logout_button = profile_template_clone.querySelector(\"#user-profile-logout-button\") as HTMLElement | null;\r\n\r\n    if (!firstname_element || !lastname_element || !logout_button) {\r\n        throw new Error(\"lastname_element not found\");\r\n    }\r\n\r\n    return { firstname_element, lastname_element, logout_button };\r\n}\r\n\r\n// api coms functions - stuff that talks to the server\r\nfunction logout() {\r\n    let userdata = user_local.get_local_user_data();\r\n    if (!userdata) {\r\n        throw new Error(\"No local user-data\");\r\n    }\r\n\r\n    user_api.logout(userdata.token.id);\r\n    user_local.clear_local_user_data();\r\n\r\n    // reload the user state etc.\r\n    init();\r\n}\r\n// }\r\n\r\nfunction render_user(userdata: user_local.UserStorageData, elements: UserHtmlElements) {\r\n\r\n    elements.details_container.innerHTML = \"\";\r\n\r\n\r\n    let clone = elements.profile_template.cloneNode(true) as HTMLTemplateElement;\r\n    let profile_template = clone.content;\r\n    let profile_elements = get_profile_elements(profile_template);\r\n\r\n\r\n    profile_elements.firstname_element.innerHTML = userdata.user.firstname;\r\n    profile_elements.lastname_element.innerHTML = userdata.user.lastname;\r\n    profile_elements.logout_button.onclick = () => logout();\r\n\r\n    elements.details_container.appendChild(profile_template);\r\n    return;\r\n}\r\n\r\nfunction render_login(elements: UserHtmlElements) {\r\n    let clone = elements.login_template.cloneNode(true) as HTMLTemplateElement;\r\n    elements.details_container.innerHTML = \"\";\r\n    elements.details_container.appendChild(clone.content);\r\n}\r\n\r\nexport async function init() {\r\n\r\n    let userdata = user_local.get_local_user_data();\r\n    let html_elements = get_html_elements();\r\n    if (!html_elements) {\r\n        throw new Error(\"html elements not loaded\");\r\n    }\r\n\r\n    if (!userdata) {\r\n        render_login(html_elements);\r\n        return;\r\n    }\r\n\r\n    render_user(userdata, html_elements);\r\n    return;\r\n}", "import * as user_local from \"./user_local\";\r\nimport * as user_api from \"./user_api\";\r\n\r\n\r\ntype SigninHtmlInputs = {\r\n    registration: {\r\n        first_name: HTMLInputElement,\r\n        last_name: HTMLInputElement,\r\n        email: HTMLInputElement,\r\n        password: HTMLInputElement,\r\n        repeat_password: HTMLInputElement,\r\n        submit: HTMLButtonElement,\r\n    },\r\n    signin: {\r\n        email: HTMLInputElement,\r\n        password: HTMLInputElement,\r\n        submit: HTMLButtonElement,\r\n    }\r\n}\r\n\r\nfunction get_input_fields() {\r\n    let registration_first_name = document.querySelector(\"#user-register-first-name-input\") as HTMLInputElement | null;\r\n    let registration_last_name = document.querySelector(\"#user-register-last-name-input\") as HTMLInputElement | null;\r\n    let registration_email = document.querySelector(\"#user-register-email-input\") as HTMLInputElement | null;\r\n    let registration_password = document.querySelector(\"#user-register-password-input\") as HTMLInputElement | null;\r\n    let registration_repeat_password = document.querySelector(\"#user-register-password-repeat-input\") as HTMLInputElement | null;\r\n    let registration_submit = document.querySelector(\"#user-register-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    let signin_email = document.querySelector(\"#user-signin-email-input\") as HTMLInputElement | null;\r\n    let signin_password = document.querySelector(\"#user-signin-password-input\") as HTMLInputElement | null;\r\n    let signin_submit = document.querySelector(\"#user-signin-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !registration_first_name ||\r\n        !registration_last_name ||\r\n        !registration_email ||\r\n        !registration_password ||\r\n        !registration_repeat_password ||\r\n        !registration_submit ||\r\n        !signin_email ||\r\n        !signin_password ||\r\n        !signin_submit\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let inputs: SigninHtmlInputs = {\r\n        registration: {\r\n            email: registration_email,\r\n            first_name: registration_first_name,\r\n            last_name: registration_last_name,\r\n            password: registration_password,\r\n            repeat_password: registration_repeat_password,\r\n            submit: registration_submit\r\n        },\r\n        signin: {\r\n            email: signin_email,\r\n            password: signin_password,\r\n            submit: signin_submit\r\n        }\r\n    }\r\n\r\n    return inputs\r\n}\r\n\r\n\r\nfunction enable_register_submit_button(is_valid: boolean, reason: string | undefined, inputs: SigninHtmlInputs) {\r\n    if (!is_valid) {\r\n        inputs.registration.submit.innerHTML = reason ?? \"invalid registration-data\";\r\n        inputs.registration.submit.classList.toggle(\"bg-green-600\", false);\r\n        inputs.registration.submit.classList.toggle(\"bg-gray-600\", true);\r\n        return;\r\n    }\r\n\r\n    inputs.registration.submit.innerHTML = \"Register\";\r\n    inputs.registration.submit.classList.toggle(\"bg-gray-600\", false);\r\n    inputs.registration.submit.classList.toggle(\"bg-green-600\", true);\r\n}\r\n\r\nfunction is_valid_inputs(inputs: SigninHtmlInputs) {\r\n    let valid: boolean = true;\r\n    let reason: string = \"\";\r\n\r\n    if (inputs.registration.password.value != inputs.registration.repeat_password.value) {\r\n        valid = false;\r\n        reason = \"passwords dont match\";\r\n    }\r\n\r\n    if (!inputs.registration.first_name.value) {\r\n        valid = false;\r\n        reason = \"missing first name\";\r\n    }\r\n\r\n    if (!inputs.registration.email.value) {\r\n        valid = false;\r\n        reason = \"missing email\";\r\n    }\r\n\r\n    if (!inputs.registration.last_name.value) {\r\n        valid = false;\r\n        reason = \"missing last name\";\r\n    }\r\n\r\n    if (!inputs.registration.password.value) {\r\n        valid = false;\r\n        reason = \"missing password\";\r\n    }\r\n\r\n    return {\r\n        valid,\r\n        reason\r\n    };\r\n}\r\n\r\nfunction submit_registration(inputs: SigninHtmlInputs) {\r\n    let { valid, reason } = is_valid_inputs(inputs);\r\n    if (!valid) {\r\n        alert(`could not submit registration beacuse ${reason}`);\r\n        return;\r\n    }\r\n\r\n    const register_and_signin = async () => {\r\n        let registration_request: user_api.RegisterRequest = {\r\n            email: inputs.registration.email.value,\r\n            password: inputs.registration.password.value,\r\n            firstname: inputs.registration.first_name.value,\r\n            lastname: inputs.registration.last_name.value,\r\n        }\r\n\r\n        // bro i hate this shit wtf\r\n        let registration_response;\r\n        try {\r\n            registration_response = await user_api.register(registration_request);\r\n        }\r\n        catch (err) {\r\n            alert(err);\r\n            return;\r\n        }\r\n\r\n        let login_request: user_api.LoginRequest = {\r\n            email: registration_request.email,\r\n            password: registration_request.password\r\n        }\r\n\r\n        // again, i really really hate this\r\n        let login_response;\r\n        try {\r\n            login_response = await user_api.login(login_request);\r\n        }\r\n        catch (err) {\r\n            alert(err);\r\n            return;\r\n        }\r\n\r\n\r\n        let userdata: user_local.UserStorageData = {\r\n            token: login_response,\r\n            user: registration_response,\r\n        }\r\n\r\n        user_local.save_user_data_to_local(userdata);\r\n        window.location.href = \"/\"; // redirect user to home\r\n    };\r\n\r\n    register_and_signin();\r\n\r\n}\r\n\r\nfunction on_input_change(inputs: SigninHtmlInputs) {\r\n    let { valid, reason } = is_valid_inputs(inputs);\r\n    enable_register_submit_button(valid, reason, inputs);\r\n}\r\n\r\nexport function init() {\r\n    let inputs = get_input_fields();\r\n    if (!inputs) {\r\n        throw new Error(\"inputs not initialized\");\r\n    }\r\n\r\n    // hook up validation for registration form;\r\n    inputs.registration.email.oninput = () => on_input_change(inputs);\r\n    inputs.registration.first_name.oninput = () => on_input_change(inputs);\r\n    inputs.registration.last_name.oninput = () => on_input_change(inputs);\r\n    inputs.registration.password.oninput = () => on_input_change(inputs);\r\n    inputs.registration.repeat_password.oninput = () => on_input_change(inputs);\r\n\r\n    // hook up submit\r\n    inputs.registration.submit.onclick = () => submit_registration(inputs);\r\n\r\n    // initial call just to set defaults\r\n    on_input_change(inputs);\r\n}\r\n", "// import gallery_popup_main from \"./gallery_popup\";\r\n// import gallery_main from \"./gallery\"\r\n// import index_main from \"./index\"\r\n// import view_main from \"./view\"\r\nimport * as user_header from \"./user/user_header\";\r\nimport * as sigin_page from \"./user/signin_page\";\r\n// import { user_page_main } from \"./user/user_page\";\r\n// import draft_view_main from \"./editor/draft_page\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        receive_data: (data: string) => void;\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", (_) => {\r\n    // global init\r\n    user_header.init();\r\n\r\n    // page based init\r\n    switch (window.location.pathname) {\r\n        // case \"/editor\":\r\n        //     let url_params = new URLSearchParams(window.location.search);\r\n        //     let draft_id = url_params.get(\"draft-id\");\r\n        //     if (draft_id == null) {\r\n        //         console.log(\"no draft chosen\")\r\n        //         draft_view_main();\r\n        //         break;\r\n        //     }\r\n        //     // render editor for specific draft\r\n        //     break;\r\n\r\n        // case \"/gallery-popup\":\r\n        //     gallery_popup_main();\r\n        //     break;\r\n\r\n        // case \"/gallery\":\r\n        //     gallery_main();\r\n        //     break;\r\n\r\n        // case \"/view\":\r\n        //     view_main();\r\n        //     break;\r\n\r\n        // case \"/\":\r\n        //     index_main();\r\n        //     break;\r\n\r\n        case \"/signin\":\r\n            sigin_page.init();\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n});"],
  "mappings": "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",
  "names": ["USER_TOKEN_KEY", "USER_DATA_KEY", "get_local_user_data", "token_string", "user_string", "token", "user", "clear_local_user_data", "save_user_data_to_local", "userdata", "data", "req", "endpoint", "payload", "response", "json", "login", "request", "res", "logout", "auth_token", "register", "get_html_elements", "login_template", "profile_template", "details_container", "get_profile_elements", "profile_template_clone", "firstname_element", "lastname_element", "logout_button", "logout", "userdata", "get_local_user_data", "clear_local_user_data", "init", "render_user", "elements", "profile_elements", "render_login", "clone", "html_elements", "get_input_fields", "registration_first_name", "registration_last_name", "registration_email", "registration_password", "registration_repeat_password", "registration_submit", "signin_email", "signin_password", "signin_submit", "enable_register_submit_button", "is_valid", "reason", "inputs", "is_valid_inputs", "valid", "submit_registration", "registration_request", "registration_response", "register", "err", "login_request", "login_response", "login", "save_user_data_to_local", "on_input_change", "init", "_", "init"]
}
