{
  "version": 3,
  "sources": ["../../ts/src/user/user_local.ts", "../../ts/src/user/user_api.ts", "../../ts/src/user/user_header.ts", "../../ts/src/user/signin_page.ts", "../../ts/src/article/article_api.ts", "../../ts/src/editor/draft_page.ts", "../../ts/src/media/media_api.ts", "../../ts/src/media/media_test.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["import * as user_api from \"./user_api\";\n\nexport type UserStorageData = {\n    user: user_api.UserResponse,\n    token: user_api.TokenResponse\n}\n\nconst USER_TOKEN_KEY: string = \"BCMS_USERTS_LOCALTOKEN\";\nconst USER_DATA_KEY: string = \"BCMS_USERTS_LOCALUSER\";\n\nexport function get_local_user_data() {\n    let token_string = localStorage.getItem(USER_TOKEN_KEY);\n    let user_string = localStorage.getItem(USER_DATA_KEY)\n    if (!token_string || !user_string) {\n        return null;\n    }\n\n    let token = JSON.parse(token_string);\n    let user = JSON.parse(user_string);\n    if (!token || !user) {\n        return null;\n    }\n\n    let userData: UserStorageData = {\n        token: token,\n        user: user\n    }\n\n    return userData;\n}\n\nexport function clear_local_user_data() {\n    localStorage.removeItem(USER_DATA_KEY);\n    localStorage.removeItem(USER_TOKEN_KEY);\n    return true;\n}\n\nexport function save_user_data_to_local(userdata: UserStorageData) {\n    let token = JSON.stringify(userdata.token);\n    let data = JSON.stringify(userdata.user);\n    localStorage.setItem(USER_TOKEN_KEY, token);\n    localStorage.setItem(USER_DATA_KEY, data);\n    return true;\n}\n", "\ntype Response = {\n    data: any,\n    message: string,\n    time: number,\n}\n\nexport type TokenResponse = {\n    id: string,\n    user_id: string,\n    created_at: number,\n    expires_at: number,\n}\n\nexport type UserResponse = {\n    id: string,\n    firstname: string,\n    lastname: string,\n    email: string,\n    last_edited: number,\n    created_at: number,\n}\n\nexport type RightsResponse = {\n    user_id: string,\n    can_post_draft: boolean,\n    can_approve_draft: boolean,\n    can_publish_article: boolean,\n    can_delete_article: boolean,\n    can_post_media: boolean,\n    can_update_media: boolean,\n    can_assign_journalist: boolean,\n    can_assign_editorial: boolean,\n    can_assign_admin: boolean,\n    can_delete_other_user: boolean,\n    can_change_other_email: boolean,\n    can_change_other_password: boolean,\n    can_change_other_details: boolean,\n    can_submit_event: boolean,\n    can_edit_article: boolean,\n}\n\nexport type LoginRequest = {\n    email: string,\n    password: string,\n}\n\nexport type RegisterRequest = {\n    email: string,\n    password: string,\n    firstname: string,\n    lastname: string,\n}\n\nexport type EditRightsRequest = {\n    // meta\n    auth_token: string,\n    user_id: string,\n    // rights\n    can_post_draft?: boolean,\n    can_approve_draft?: boolean,\n    can_read_all_drafts?: boolean,\n    can_publish_article?: boolean,\n    can_delete_article?: boolean,\n    can_post_media?: boolean,\n    can_update_media?: boolean,\n    can_assign_journalist?: boolean,\n    can_assign_editorial?: boolean,\n    can_assign_admin?: boolean,\n    can_delete_other_user?: boolean,\n    can_change_other_email?: boolean,\n    can_change_other_password?: boolean,\n    can_change_other_details?: boolean,\n    can_edit_user_rights?: boolean,\n    can_submit_event?: boolean,\n}\n\nexport type EditUserRequest = {\n    auth_token: string,\n    password: string,\n    firstname: string,\n    lastname: string,\n    new_password: string,\n    new_email: string,\n}\n\nasync function req(endpoint: string, payload: any) {\n    let response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n    });\n\n    let json = await response.json();\n    return { status_code: response.status, body: json as Response };\n}\n\n\nexport async function login(request: LoginRequest) {\n    let res = await req(\"/user/login\", request);\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let token = res.body.data as TokenResponse;\n    return token;\n}\n\nexport async function logout(auth_token: string) {\n    let res = await req(\"/user/logout\", { auth_token });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    return true;\n}\n\nexport async function register(request: RegisterRequest) {\n    let res = await req(\"/user/register\", request);\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let user = res.body.data as UserResponse;\n    return user;\n}\n\nexport async function edit_user_rights(request: EditRightsRequest) {\n    let res = await req(\"/user/edit_user_rights\", request);\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let rights = res.body.data as RightsResponse;\n    return rights;\n}\n\nexport async function who(auth_token: string) {\n    let res = await req(\"/user/who\", { auth_token });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let user = res.body.data as UserResponse;\n    return user;\n}\n\nexport async function rights(user_id: string) {\n    let res = await req(\"/user/rights\", { user_id });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let rights = res.body.data as RightsResponse;\n    return rights;\n}\n\nexport async function list_users(auth_token: string) {\n    let res = await req(\"/user/list_users\", { auth_token });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let users = res.body.data as UserResponse[];\n    return users;\n}\n\nexport async function show_user(user_id: string) {\n    let res = await req(\"/user/show_user\", { user_id });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let user = res.body.data as UserResponse;\n    return user;\n}\n\nexport async function edit_user(request: EditUserRequest) {\n    let res = await req(\"/user/edit_user\", request);\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let user = res.body.data as UserResponse;\n    return user;\n}\n\nexport async function delete_user(auth_token: string, password: string) {\n    let res = await req(\"/user/delete_user\", { auth_token, password });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    return true;\n}\n\nexport async function refresh_token(auth_token: string) {\n    let res = await req(\"/user/refresh_token\", { auth_token });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let token = res.body.data as TokenResponse;\n    return token;\n}\n", "import * as user_local from \"./user_local\";\nimport * as user_api from \"./user_api\";\n\ntype UserHtmlElements = {\n    login_template: HTMLTemplateElement,\n    profile_template: HTMLTemplateElement,\n    details_container: HTMLElement,\n}\n\nfunction get_html_elements() {\n    let login_template = document.querySelector(\".user-details-login-template\") as HTMLTemplateElement | null;\n    let profile_template = document.querySelector(\".user-details-profile-template\") as HTMLTemplateElement | null;\n    let details_container = document.querySelector(\".user-details-container\") as HTMLElement | null;\n\n    if (!login_template || !profile_template || !details_container) {\n        return null;\n    }\n    let elements: UserHtmlElements = { login_template, profile_template, details_container, }\n    return elements;\n}\n\nfunction get_profile_elements(profile_template_clone: DocumentFragment) {\n    let firstname_element = profile_template_clone.querySelector(\"#user-profile-first-name\") as HTMLElement | null;\n    let lastname_element = profile_template_clone.querySelector(\"#user-profile-last-name\") as HTMLElement | null;\n    let logout_button = profile_template_clone.querySelector(\"#user-profile-logout-button\") as HTMLElement | null;\n\n    if (!firstname_element || !lastname_element || !logout_button) {\n        throw new Error(\"lastname_element not found\");\n    }\n    return { firstname_element, lastname_element, logout_button };\n}\n\n// api coms functions - stuff that talks to the server\nfunction logout() {\n    let userdata = user_local.get_local_user_data();\n    if (!userdata) {\n        throw new Error(\"No local user-data\");\n    }\n\n    user_api.logout(userdata.token.id);\n    user_local.clear_local_user_data();\n\n    // reload the user state etc.\n    init();\n}\n// }\n\nfunction render_user(userdata: user_local.UserStorageData, elements: UserHtmlElements) {\n\n    elements.details_container.innerHTML = \"\";\n\n\n    let clone = elements.profile_template.cloneNode(true) as HTMLTemplateElement;\n    let profile_template = clone.content;\n    let profile_elements = get_profile_elements(profile_template);\n\n\n    profile_elements.firstname_element.innerHTML = userdata.user.firstname;\n    profile_elements.lastname_element.innerHTML = userdata.user.lastname;\n    profile_elements.logout_button.onclick = () => logout();\n\n    elements.details_container.appendChild(profile_template);\n    return;\n}\n\nfunction render_login(elements: UserHtmlElements) {\n    let clone = elements.login_template.cloneNode(true) as HTMLTemplateElement;\n    elements.details_container.innerHTML = \"\";\n    elements.details_container.appendChild(clone.content);\n}\n\nexport async function init() {\n\n    let userdata = user_local.get_local_user_data();\n    let html_elements = get_html_elements();\n    if (!html_elements) {\n        throw new Error(\"html elements not loaded\");\n    }\n\n    if (!userdata) {\n        render_login(html_elements);\n        return;\n    }\n\n    render_user(userdata, html_elements);\n    return;\n}", "import * as user_local from \"./user_local\";\nimport * as user_api from \"./user_api\";\n\n\ntype SigninHtmlInputs = {\n    registration: {\n        first_name: HTMLInputElement,\n        last_name: HTMLInputElement,\n        email: HTMLInputElement,\n        password: HTMLInputElement,\n        repeat_password: HTMLInputElement,\n        submit: HTMLButtonElement,\n    },\n    signin: {\n        email: HTMLInputElement,\n        password: HTMLInputElement,\n        submit: HTMLButtonElement,\n    }\n}\n\nfunction get_input_fields() {\n    let registration_first_name = document.querySelector(\"#user-register-first-name-input\") as HTMLInputElement | null;\n    let registration_last_name = document.querySelector(\"#user-register-last-name-input\") as HTMLInputElement | null;\n    let registration_email = document.querySelector(\"#user-register-email-input\") as HTMLInputElement | null;\n    let registration_password = document.querySelector(\"#user-register-password-input\") as HTMLInputElement | null;\n    let registration_repeat_password = document.querySelector(\"#user-register-password-repeat-input\") as HTMLInputElement | null;\n    let registration_submit = document.querySelector(\"#user-register-submitt-button\") as HTMLButtonElement | null;\n\n    let signin_email = document.querySelector(\"#user-signin-email-input\") as HTMLInputElement | null;\n    let signin_password = document.querySelector(\"#user-signin-password-input\") as HTMLInputElement | null;\n    let signin_submit = document.querySelector(\"#user-signin-submitt-button\") as HTMLButtonElement | null;\n\n    if (\n        !registration_first_name ||\n        !registration_last_name ||\n        !registration_email ||\n        !registration_password ||\n        !registration_repeat_password ||\n        !registration_submit ||\n        !signin_email ||\n        !signin_password ||\n        !signin_submit\n    ) {\n        return null;\n    }\n\n    let inputs: SigninHtmlInputs = {\n        registration: {\n            email: registration_email,\n            first_name: registration_first_name,\n            last_name: registration_last_name,\n            password: registration_password,\n            repeat_password: registration_repeat_password,\n            submit: registration_submit\n        },\n        signin: {\n            email: signin_email,\n            password: signin_password,\n            submit: signin_submit\n        }\n    }\n\n    return inputs\n}\n\n\nfunction enable_register_submit_button(is_valid: boolean, reason: string | undefined, inputs: SigninHtmlInputs) {\n    if (!is_valid) {\n        inputs.registration.submit.innerHTML = reason ?? \"invalid registration-data\";\n        inputs.registration.submit.classList.toggle(\"bg-green-600\", false);\n        inputs.registration.submit.classList.toggle(\"bg-gray-600\", true);\n        return;\n    }\n\n    inputs.registration.submit.innerHTML = \"Register\";\n    inputs.registration.submit.classList.toggle(\"bg-gray-600\", false);\n    inputs.registration.submit.classList.toggle(\"bg-green-600\", true);\n}\n\nfunction enable_signin_submit_button(is_valid: boolean, reason: string | undefined, inputs: SigninHtmlInputs) {\n    if (!is_valid) {\n        inputs.signin.submit.innerHTML = reason ?? \"invalid registration-data\";\n        inputs.signin.submit.classList.toggle(\"bg-blue-200\", false);\n        inputs.signin.submit.classList.toggle(\"text-white\", true);\n        inputs.signin.submit.classList.toggle(\"bg-gray-600\", true);\n        return;\n    }\n\n    inputs.signin.submit.innerHTML = \"Sign in\";\n    inputs.signin.submit.classList.toggle(\"bg-gray-600\", false);\n    inputs.signin.submit.classList.toggle(\"text-white\", false);\n    inputs.signin.submit.classList.toggle(\"bg-blue-200\", true);\n}\n\nfunction is_valid_registration_inputs(inputs: SigninHtmlInputs) {\n    let valid: boolean = true;\n    let reason: string = \"\";\n\n    if (inputs.registration.password.value != inputs.registration.repeat_password.value) {\n        valid = false;\n        reason = \"passwords dont match\";\n    }\n\n    if (!inputs.registration.first_name.value) {\n        valid = false;\n        reason = \"missing first name\";\n    }\n\n    if (!inputs.registration.email.value) {\n        valid = false;\n        reason = \"missing email\";\n    }\n\n    if (!inputs.registration.last_name.value) {\n        valid = false;\n        reason = \"missing last name\";\n    }\n\n    if (!inputs.registration.password.value) {\n        valid = false;\n        reason = \"missing password\";\n    }\n\n    return {\n        valid,\n        reason\n    };\n}\n\nfunction is_valid_signin_inputs(inputs: SigninHtmlInputs) {\n    let valid: boolean = true;\n    let reason: string = \"\";\n\n    if (!inputs.signin.password.value) {\n        valid = false;\n        reason = \"Please enter your password\";\n    }\n\n    if (!inputs.signin.email.value) {\n        valid = false;\n        reason = \"Please enter your email\";\n    }\n\n    return {\n        valid,\n        reason\n    };\n}\n\nfunction submit_signin(inputs: SigninHtmlInputs) {\n\n    const send_signin = async () => {\n        let login_request: user_api.LoginRequest = {\n            email: inputs.signin.email.value,\n            password: inputs.signin.password.value\n        }\n\n        // again, i really really hate this\n        let login_response;\n        try {\n            login_response = await user_api.login(login_request);\n        }\n        catch (err) {\n            alert(err);\n            return;\n        }\n\n        // also really hate this part\n        let user;\n        try {\n            user = await user_api.who(login_response.id);\n        }\n        catch (err) {\n            alert(err);\n            return;\n        }\n\n        let userdata: user_local.UserStorageData = {\n            token: login_response,\n            user: user,\n        }\n        user_local.save_user_data_to_local(userdata);\n        window.location.href = \"/\"; // redirect user to home\n    }\n    send_signin();\n}\n\nfunction submit_registration(inputs: SigninHtmlInputs) {\n    let { valid, reason } = is_valid_registration_inputs(inputs);\n    if (!valid) {\n        alert(`could not submit registration beacuse ${reason}`);\n        return;\n    }\n\n    const register_and_signin = async () => {\n        let registration_request: user_api.RegisterRequest = {\n            email: inputs.registration.email.value,\n            password: inputs.registration.password.value,\n            firstname: inputs.registration.first_name.value,\n            lastname: inputs.registration.last_name.value,\n        }\n\n        // bro i hate this shit wtf\n        let registration_response;\n        try {\n            registration_response = await user_api.register(registration_request);\n        }\n        catch (err) {\n            alert(err);\n            return;\n        }\n\n        let login_request: user_api.LoginRequest = {\n            email: registration_request.email,\n            password: registration_request.password\n        }\n\n        // again, i really really hate this\n        let login_response;\n        try {\n            login_response = await user_api.login(login_request);\n        }\n        catch (err) {\n            alert(err);\n            return;\n        }\n\n\n        let userdata: user_local.UserStorageData = {\n            token: login_response,\n            user: registration_response,\n        }\n\n        user_local.save_user_data_to_local(userdata);\n        window.location.href = \"/\"; // redirect user to home\n    };\n\n    register_and_signin();\n\n}\n\nfunction on_registration_input_change(inputs: SigninHtmlInputs) {\n    let { valid, reason } = is_valid_registration_inputs(inputs);\n    enable_register_submit_button(valid, reason, inputs);\n}\n\nfunction on_signin_input_change(inputs: SigninHtmlInputs) {\n    let { valid, reason } = is_valid_signin_inputs(inputs);\n    enable_signin_submit_button(valid, reason, inputs);\n}\n\nexport function init() {\n    let inputs = get_input_fields();\n    if (!inputs) {\n        throw new Error(\"inputs not initialized\");\n    }\n\n    // hook up validation for registration form;\n    inputs.registration.email.oninput = () => on_registration_input_change(inputs);\n    inputs.registration.first_name.oninput = () => on_registration_input_change(inputs);\n    inputs.registration.last_name.oninput = () => on_registration_input_change(inputs);\n    inputs.registration.password.oninput = () => on_registration_input_change(inputs);\n    inputs.registration.repeat_password.oninput = () => on_registration_input_change(inputs);\n\n    // hook up login inputs\n    inputs.signin.email.oninput = () => on_signin_input_change(inputs);\n    inputs.signin.password.oninput = () => on_signin_input_change(inputs);\n\n    // hook up submits\n    inputs.registration.submit.onclick = () => submit_registration(inputs);\n    inputs.signin.submit.onclick = () => submit_signin(inputs);\n\n    // initial call just to set defaults\n    on_registration_input_change(inputs);\n    on_signin_input_change(inputs);\n}\n", "\ntype Response = {\n    data: any,\n    message: string,\n    time: number,\n}\n\nexport enum ArticleItemTypeEnum {\n    paragraph,\n    image,\n    heading\n}\n\nexport type ArticleTextItem = {\n    type: ArticleItemTypeEnum.heading | ArticleItemTypeEnum.paragraph,\n    text: string,\n    index: number,\n}\n\nexport type ArticleMediaItem = {\n    type: ArticleItemTypeEnum.image,\n    alt_text: string,\n    src_id: string | undefined,\n    index: number,\n}\n\nexport type Article = {\n    id: string,\n    title: string,\n    body: Array<ArticleTextItem | ArticleMediaItem>,\n    desc: string,\n    user_id: string,\n    timestamp: number,\n    update_timestamp: number,\n    accepted_id: string,\n    isAccepted: boolean,\n    isListed: boolean,\n    isDraft: boolean,\n    isDeleted: boolean,\n}\n\nexport type ArticleSummary = {\n    id: string,\n    title: string,\n    desc: string,\n    user_id: string,\n    image: string,\n}\n\nexport type PostArticleRequest = {\n    title: string,\n    body: Array<ArticleTextItem | ArticleMediaItem>,\n    desc: string,\n    auth_token: string,\n}\n\nasync function req(endpoint: string, payload: any) {\n    let response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n    });\n\n    let json = await response.json();\n    return { status_code: response.status, body: json as Response };\n}\n\nexport async function list_all_articles(auth_token: string) {\n    let res = await req(\"/article/list_all_articles\", { auth_token });\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let articles = res.body.data as ArticleSummary[];\n    return articles;\n}\n\nexport async function post_new_article(request: PostArticleRequest) {\n    let res = await req(\"/article/post_article\", request);\n    if (res.status_code != 200) {\n        throw new Error(res.body.message)\n    }\n    let article = res.body.data as Article;\n    return article;\n}\n", "import * as user_local from \"../user/user_local\";\nimport * as article_api from \"../article/article_api\";\n\ntype DraftHtmlElements = {\n    draft_preview_template: HTMLTemplateElement,\n    editor_app_view: HTMLElement;\n    draft_controlls_template: HTMLTemplateElement;\n    draft_controlls: HTMLElement;\n    new_draft_button: HTMLButtonElement;\n    draft_render_list: HTMLOListElement;\n}\n\ntype DraftTemplateElements = {\n    delete_draft_button: HTMLButtonElement;\n    edit_draft_button: HTMLButtonElement;\n    draft_render_title: HTMLHeadingElement;\n    draft_render_description: HTMLParagraphElement;\n}\n\nfunction get_draft_template_elements(entry: DocumentFragment) {\n    let delete_draft_button = entry.querySelector(\".delete-draft-button\") as HTMLButtonElement | null;\n    let edit_draft_button = entry.querySelector(\".edit-draft-button\") as HTMLButtonElement | null;\n    let draft_render_title = entry.querySelector(\".draft-render-title\") as HTMLHeadingElement | null;\n    let draft_render_description = entry.querySelector(\".draft-render-description\") as HTMLParagraphElement | null;\n\n    if (\n        !delete_draft_button ||\n        !edit_draft_button ||\n        !draft_render_title ||\n        !draft_render_description\n    ) { return null; }\n\n    let elements: DraftTemplateElements = {\n        delete_draft_button,\n        edit_draft_button,\n        draft_render_title,\n        draft_render_description\n    }\n    return elements;\n}\n\nfunction init_all_html_elements() {\n    // fetch static items and templates\n    let draft_preview_template = document.getElementById(\"draft-preview-template\") as HTMLTemplateElement | null;\n    let editor_app_view = document.getElementById(\"editor-app-view\") as HTMLTemplateElement | null;\n    let draft_controlls_template = document.getElementById(\"draft-controlls-template\") as HTMLTemplateElement | null;\n\n    if (\n        !draft_preview_template ||\n        !editor_app_view ||\n        !draft_controlls_template\n    ) { return null; }\n\n    // get and instantiate inner controlls\n    let clone = draft_controlls_template.cloneNode(true) as HTMLTemplateElement;\n    let entry = clone.content;\n    let draft_controlls = entry.querySelector(\".draft-controlls\") as HTMLElement | null;\n    let new_draft_button = entry.querySelector(\".new-draft-button\") as HTMLButtonElement | null;\n    let draft_render_list = entry.querySelector(\".draft-render-list\") as HTMLOListElement | null;\n\n    if (\n        !draft_controlls ||\n        !new_draft_button ||\n        !draft_render_list\n    ) {\n        console.log(\"controlls not found\")\n        return null;\n    }\n\n    // insert into dom\n    editor_app_view.innerHTML = \"\";\n    editor_app_view.appendChild(entry);\n\n    let elements: DraftHtmlElements = {\n        draft_preview_template,\n        editor_app_view,\n        draft_controlls_template,\n        draft_controlls,\n        new_draft_button,\n        draft_render_list\n    }\n    return elements;\n}\n\nfunction render_drafts(html_elements: DraftHtmlElements, all_drafts: editor_core.DraftArticleData[]) {\n    html_elements.draft_render_list.innerHTML = \"\";\n    for (let index = 0; index < all_drafts.length; index++) {\n        let clone = html_elements.draft_preview_template.cloneNode(true) as HTMLTemplateElement;\n        let entry = clone.content;\n        let entry_elements = get_draft_template_elements(entry);\n        if (!entry_elements) {\n            throw new Error(\"could not instantiate draft template elements\");\n        }\n\n        entry_elements.draft_render_title.innerText = all_drafts[index].title;\n        entry_elements.draft_render_description.innerText = all_drafts[index].description;\n        html_elements.draft_render_list.appendChild(entry);\n    }\n}\n\nasync function load_all_drafts(user: user_local.UserStorageData) {\n    let all_drafts = await article_api.list_all_articles(user.token.id);\n    if (all_drafts.length > 0) {\n        all_drafts = all_drafts.filter((a) => a.user_id == user.user.id);\n    }\n    return all_drafts;\n}\n\nasync function new_empty_draft(user: user_local.UserStorageData) {\n    let post_request_data: article_api.PostArticleRequest = {\n        auth_token: user.token.id,\n        body: [],\n        desc: \"New draft\",\n        title: \"New draft\",\n    }\n    let article = await article_api.post_new_article(post_request_data);\n    return article;\n}\n\nasync function delete_draft(draft_id: string, user: user_local.UserStorageData) {\n    console.log(\"Not implemented yet\");\n}\n\nfunction render_draft_list(drafts: article_api.ArticleSummary[], html_elements: DraftHtmlElements, user: user_local.UserStorageData) {\n    let app_view = html_elements.editor_app_view;\n\n    drafts.forEach((draft) => {\n        let template_clone = html_elements.draft_preview_template.cloneNode(true) as HTMLTemplateElement;\n        let content = template_clone.content;\n        let template_elements = get_draft_template_elements(content);\n        if (!template_elements) {\n            throw new Error(\"could not instantiate draft template\");\n        }\n        template_elements.draft_render_title.innerHTML = draft.title;\n        template_elements.draft_render_description.innerHTML = draft.desc;\n        template_elements.edit_draft_button.onclick = () => {\n            window.location.href = `/editor?article-id=${draft.id}`;\n        }\n        template_elements.delete_draft_button.onclick = () => {\n            delete_draft(draft.id, user)\n        }\n        app_view.appendChild(content);\n    })\n}\n\nexport default async function main() {\n    let user = user_local.get_local_user_data();\n    if (!user) {\n        throw new Error(\"User not logged in\");\n    }\n\n    let html_elements = init_all_html_elements();\n    if (!html_elements) {\n        throw new Error(\"Draft items not found, cant render page\");\n    }\n\n    let all_drafts = await load_all_drafts(user);\n    console.log(all_drafts);\n\n    if (all_drafts.length > 0) {\n        render_draft_list(all_drafts, html_elements, user);\n    }\n\n\n    html_elements.new_draft_button.onclick = async () => {\n        let new_draft = await new_empty_draft(user);\n        window.location.href = `/editor?article-id=${new_draft.id}`\n    }\n}", "\ntype Response = {\n    data: any,\n    message: string,\n    time: number,\n}\n\nexport type MediaParent = {\n    id: string\n    uploader_user_id: string,\n    filename: string,\n    file_extention: string,\n    file_mimetype: string,\n    file_hash: string,\n    alt_text: string,\n    content_type: string,\n    creation_time: number,\n    is_unlisted: boolean,\n    unlisted_state_update_time: number,\n    is_deleted: boolean,\n    deleted_state_update_time: number,\n}\n\nexport type MediaInstance = {\n    instance_id: string,\n    parent_id: string,\n    x_dimension: number,\n    y_dimension: number,\n}\n\nexport type MediaJointParentInstances = {\n    parent: MediaParent,\n    instances: Array<MediaInstance>,\n}\n\n\n\nexport type MediaMetadata = {\n    alt_text?: string,\n    filename?: string,\n    is_unlisted?: boolean,\n    is_deleted?: boolean,\n}\n\n\nexport type MediaUploadRequest = {\n    auth_token: string,\n    files: Array<File>,\n}\n\nexport type MediaUpdateRequest = {\n    auth_token: string,\n    media_ID: string,\n    metadata: MediaMetadata,\n}\n\nexport type MediaFetchRequest = {\n    auth_token: string,\n    media_ID: string,\n}\n\n\nasync function make_post_request(endpoint: string, body: any) {\n    let request = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify( body ),\n    });\n\n    return {\n        status_code: request.status,\n        body: await request.json() as Response\n    }\n}\n\nexport async function upload_media(request_data: MediaUploadRequest) {\n    let formdata = new FormData()\n\n    formdata.append(\"auth_token\", request_data.auth_token)\n    request_data.files.forEach((file) => {\n        formdata.append(\"media\", file)\n    })\n\n    let request = await fetch(\"/media/upload_media\", {\n        method: \"POST\",\n        body: formdata,\n    })\n\n    if (request.status != 200) {\n        let request_json = await request.json() as Response\n        throw new Error(request_json.message)\n    }\n\n    return await request.json() as Response\n}\n\nexport async function update_media_metadata(request_data: MediaUpdateRequest) {\n    let response = await make_post_request(\n        \"/media/update_media_metadata\",\n        request_data\n    )\n\n    if (response.status_code != 200) {\n        throw new Error(response.body.message)\n    }\n\n    return response.body.data as MediaParent\n}\n\nexport async function fetch_media_full(request_data: MediaFetchRequest) {\n    let response = await make_post_request(\n        \"/media/fetch_media_full\",\n        request_data\n    )\n\n    if (response.status_code != 200) {\n        throw new Error(response.body.message)\n    }\n\n    return response.body.data as MediaJointParentInstances\n}\n\nexport async function fetch_all_media_metadata() {}\n\nexport async function fetch_media_instance() {}", "import { isStringLiteral } from \"typescript\";\nimport { get_local_user_data } from \"../user/user_local\";\nimport { update_media_metadata, MediaUpdateRequest, MediaMetadata, fetch_media_full, MediaFetchRequest } from \"./media_api\";\n\nlet auth_token = get_local_user_data()?.token.id as string\nif (typeof auth_token != \"string\") {\n    auth_token = \"missing\"\n} \nconst media_ID = \"muG523y5o1tR-17290772079567983\"\nasync function get_largest_instance_id() {return (await test_fetch_media_full()).instances[0].instance_id}\n\nexport async function twig_test_function() {\n    // await test_update_metadata()\n    await test_fetch_media_full()\n    console.log(await get_largest_instance_id())\n}\n\nasync function test_fetch_media_full() {\n    const media_request: MediaFetchRequest = {\n        auth_token,\n        media_ID\n    }\n\n    return await fetch_media_full(media_request)\n}\n\nasync function test_update_metadata() {\n    let metadata: MediaMetadata = {\n        alt_text: \"cool comic\",\n        is_unlisted: false,\n    }\n    \n    let media_request: MediaUpdateRequest = {\n        auth_token,\n        media_ID,\n        metadata \n    }\n\n    console.log(await update_media_metadata(media_request));\n}", "// import gallery_popup_main from \"./gallery_popup\";\n// import gallery_main from \"./gallery\"\n// import index_main from \"./index\"\n// import view_main from \"./view\"\nimport * as user_header from \"./user/user_header\";\nimport * as sigin_page from \"./user/signin_page\";\nimport * as draft_page from \"./editor/draft_page\";\nimport * as media_test_endpoint from \"./media/media_test\";\n// import { user_page_main } from \"./user/user_page\";\n// import draft_view_main from \"./editor/draft_page\";\n\ndeclare global {\n    interface Window {\n        receive_data: (data: string) => void;\n    }\n}\n\nwindow.addEventListener(\"load\", (_) => {\n    // global init\n    user_header.init();\n\n    // page based init\n    switch (window.location.pathname) {\n        case \"/editor\":\n            let url_params = new URLSearchParams(window.location.search);\n            let draft_id = url_params.get(\"draft-id\");\n            if (draft_id == null) {\n                draft_page.default();\n                break;\n            }\n            // render editor for specific draft\n            break;\n\n        // case \"/gallery-popup\":\n        //     gallery_popup_main();\n        //     break;\n\n        // case \"/gallery\":\n        //     gallery_main();\n        //     break;\n\n        // case \"/view\":\n        //     view_main();\n        //     break;\n\n        // case \"/\":\n        //     index_main();\n        //     break;\n\n        case \"/signin\":\n            sigin_page.init();\n            break;\n        \n        // endpoint for testing media function via frontend\n        // ask if you can remove if this still exists in december 2024 or something\n        case \"/media/media_test\":\n            media_test_endpoint.twig_test_function()\n            break;\n\n        default:\n            break;\n    }\n});"],
  "mappings": "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",
  "names": ["USER_TOKEN_KEY", "USER_DATA_KEY", "get_local_user_data", "token_string", "user_string", "token", "user", "clear_local_user_data", "save_user_data_to_local", "userdata", "data", "req", "endpoint", "payload", "response", "json", "login", "request", "res", "logout", "auth_token", "register", "who", "auth_token", "res", "req", "get_html_elements", "login_template", "profile_template", "details_container", "get_profile_elements", "profile_template_clone", "firstname_element", "lastname_element", "logout_button", "logout", "userdata", "get_local_user_data", "clear_local_user_data", "init", "render_user", "elements", "profile_elements", "render_login", "clone", "html_elements", "get_input_fields", "registration_first_name", "registration_last_name", "registration_email", "registration_password", "registration_repeat_password", "registration_submit", "signin_email", "signin_password", "signin_submit", "enable_register_submit_button", "is_valid", "reason", "inputs", "enable_signin_submit_button", "is_valid_registration_inputs", "valid", "is_valid_signin_inputs", "submit_signin", "login_request", "login_response", "login", "err", "user", "who", "save_user_data_to_local", "submit_registration", "registration_request", "registration_response", "register", "on_registration_input_change", "on_signin_input_change", "init", "req", "endpoint", "payload", "response", "json", "list_all_articles", "auth_token", "res", "post_new_article", "request", "get_draft_template_elements", "entry", "delete_draft_button", "edit_draft_button", "draft_render_title", "draft_render_description", "init_all_html_elements", "draft_preview_template", "editor_app_view", "draft_controlls_template", "draft_controlls", "new_draft_button", "draft_render_list", "load_all_drafts", "user", "all_drafts", "list_all_articles", "a", "new_empty_draft", "post_request_data", "post_new_article", "delete_draft", "draft_id", "render_draft_list", "drafts", "html_elements", "app_view", "draft", "content", "template_elements", "get_draft_template_elements", "main", "get_local_user_data", "init_all_html_elements", "new_draft", "make_post_request", "endpoint", "body", "request", "fetch_media_full", "request_data", "response", "make_post_request", "auth_token", "get_local_user_data", "media_ID", "get_largest_instance_id", "test_fetch_media_full", "twig_test_function", "fetch_media_full", "_", "init", "main", "twig_test_function"]
}
