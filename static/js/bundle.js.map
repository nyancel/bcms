{
  "version": 3,
  "sources": ["../../ts/src/util.ts", "../../ts/src/user/webapi.ts", "../../ts/src/user/user_core.ts", "../../ts/src/editor.ts", "../../ts/src/gallery_popup.ts", "../../ts/src/gallery.ts", "../../ts/src/index.ts", "../../ts/src/view.ts", "../../ts/src/user/user_header.ts", "../../ts/src/user/user_page.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["import * as user_core from \"./user/user_core\";\r\n\r\n// globals\r\nconst CACHE_KEY = \"utilts-cache-stroage-key\";\r\n\r\n// internal functions\r\nfunction save_cache_to_local(cache: UtilCacheItem[]) {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(cache));\r\n}\r\n\r\nasync function create_response(resp: Response) {\r\n    let json = await resp.json();\r\n\r\n}\r\n\r\nfunction load_local_cache() {\r\n    let local = localStorage.getItem(CACHE_KEY);\r\n    if (!local) {\r\n        return null;\r\n    }\r\n    let cache = JSON.parse(local) as UtilCacheItem[];\r\n    if (!cache) {\r\n        throw new Error(\"cache cant be parsed\");\r\n    }\r\n    return cache\r\n}\r\n\r\nfunction cache_get(key: string) {\r\n    // load up the cache\r\n    let cache = load_local_cache();\r\n    if (!cache) {\r\n        return null; // cache might not exist\r\n    }\r\n\r\n    // remove stale keys\r\n    for (let index = 0; index < cache.length; index++) {\r\n        if (cache[index].expires_at < time()) {\r\n            cache.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // save any changes\r\n    save_cache_to_local(cache);\r\n\r\n    // find the item\r\n    for (let index = 0; index < cache.length; index++) {\r\n        if (cache[index].key == key) {\r\n            return cache[index].item;\r\n        }\r\n    }\r\n\r\n    // if no match, return the item\r\n    return null;\r\n}\r\n\r\nfunction cache_add(key: string, value: string, lifetime: number = 3600) {\r\n    let cache = load_local_cache();\r\n    if (!cache) {\r\n        cache = [];\r\n    }\r\n\r\n    let c: UtilCacheItem = {\r\n        key: key,\r\n        item: value,\r\n        expires_at: time() + lifetime, // valid for one hour\r\n    };\r\n\r\n    cache.push(c);\r\n    console.log(c);\r\n    save_cache_to_local(cache);\r\n}\r\n\r\n\r\nexport function time() {\r\n    let d = new Date();\r\n    let current_time = d.getTime() / 1000;\r\n    return current_time;\r\n}\r\n\r\n\r\nexport async function post_json(endpoint: string, data: any) {\r\n    let user_data = user_core.get_local_user_data();\r\n    if (user_data) {\r\n        data.auth_token = user_data.token.id;\r\n    }\r\n\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    let response_json = await response.json();\r\n    return response_json;\r\n}\r\n\r\nexport async function post_formdata(endpoint: string, data: FormData) {\r\n    // add our token if we have one\r\n    let user_data = user_core.get_local_user_data();\r\n    if (user_data) {\r\n        data.append(\"auth_token\", user_data?.token.id);\r\n    }\r\n\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        body: data,\r\n    });\r\n    console.log(response)\r\n\r\n    let json_response = await response.json();\r\n    console.log(json_response);\r\n    return json_response;\r\n}\r\n\r\nexport async function get_smallest_res_from_src(image_id: string, min_width: number) {\r\n    console.log(\"getting smallest item from res\")\r\n    // check the cache first\r\n    let key = `util_get_media_src_by_width-${image_id}-${min_width}`;\r\n    let cached_value = cache_get(key);\r\n    if (cached_value) {\r\n        return cached_value;\r\n    }\r\n\r\n    let image_metadata = await post_json(\"/media/fetch_media\", {\r\n        media_ID: image_id,\r\n    });\r\n\r\n\r\n    let min = Math.pow(min_width, 2);\r\n\r\n    let resolutions = await Promise.all(\r\n        image_metadata.instances.map((res: { instance_id: string, x_dimension: number, y_dimension: number }) => {\r\n            return {\r\n                id: res.instance_id,\r\n                resolution: res.x_dimension * res.y_dimension,\r\n            };\r\n        })\r\n    );\r\n\r\n    // by default pick the highest res, then loop over and select the lowest\r\n    // res that is acceptable for the display.\r\n    resolutions = resolutions.sort((a, b) => a.resolution - b.resolution);\r\n    let instance_id = resolutions[resolutions.length - 1].id;\r\n    for (let r of resolutions) {\r\n        if (r.resolution > min) {\r\n            instance_id = r.id;\r\n            break; // break once the first image res satisfies our condition\r\n        }\r\n    }\r\n\r\n    // format target url\r\n    let target_url = `/media/fetch_media_instance?instance_ID=${instance_id}`;\r\n    // populate cache before returning\r\n    cache_add(key, target_url);\r\n    return target_url;\r\n}", "export type UserApiResponse = {\r\n    time: number,\r\n    message: string,\r\n    data: any,\r\n    success: number,\r\n    status_code: number\r\n}\r\n\r\nexport type UserTokenData = {\r\n    id: string,\r\n    user_id: string,\r\n    created_at: number,\r\n    expires_at: number,\r\n}\r\n\r\nexport type UserData = {\r\n    id: string,\r\n    firstname: string,\r\n    lastname: string,\r\n    email: string,\r\n    last_edited: number,\r\n    created_at: number,\r\n}\r\n\r\nexport type UserRights = {\r\n    can_post_draft: boolean,\r\n    can_approve_draft: boolean,\r\n    can_publish_article: boolean,\r\n    can_delete_article: boolean,\r\n    can_post_media: boolean,\r\n    can_update_media: boolean,\r\n    can_assign_journalist: boolean,\r\n    can_assign_editorial: boolean,\r\n    can_assign_admin: boolean,\r\n    can_delete_other_user: boolean,\r\n    can_change_other_email: boolean,\r\n    can_change_other_password: boolean,\r\n    can_change_other_details: boolean,\r\n    can_submit_event: boolean,\r\n}\r\n\r\n\r\nasync function post_json(endpoint: string, data: Object) {\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    let status_code = response.status;\r\n    let json = await response.json();\r\n    let result: UserApiResponse = {\r\n        time: json.time,\r\n        message: json.message,\r\n        data: json.data, // why data twice? i dont know...\r\n        success: json.success,\r\n        status_code: status_code,\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport async function login(email: string, password: string) {\r\n    let login_data = { email, password }\r\n    let response = await post_json(\"/user/login\", login_data);\r\n    if (response.success == 0) {\r\n        return { response };\r\n    }\r\n    let token = response.data as UserTokenData;\r\n    return { response, token };\r\n}\r\n\r\nexport async function logout(auth_token: string) {\r\n    let logout_data = { auth_token }\r\n    let response = await post_json(\"/user/login\", logout_data);\r\n    return { response };\r\n}\r\n\r\nexport async function register(email: string, password: string, firstname: string, lastname: string) {\r\n    let register_data = { email, password, firstname, lastname }\r\n    let response = await post_json(\"user/register\", register_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let userdata = response.data as UserData;\r\n    return { response, userdata }\r\n}\r\n\r\nexport async function edit_rights(new_rights: UserRights, auth_token: string) {\r\n    let request_data = { ...new_rights, auth_token };\r\n    let response = await post_json(\"user/edit_user_rights\", request_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let userdata = response.data as UserRights;\r\n    return { response, userdata }\r\n}\r\n\r\nexport async function who(auth_token: string) {\r\n    let token_data = { auth_token }\r\n    let response = await post_json(\"/user/who\", token_data);\r\n    console.log(response);\r\n    if (response.success == 0) {\r\n        throw new Error(response.message);\r\n    }\r\n    let userdata = response.data as UserData;\r\n    console.log(userdata);\r\n    return { response, userdata };\r\n}\r\n\r\nexport async function get_rights(user_id: string) {\r\n    let user_data = { user_id }\r\n    let response = await post_json(\"/user/rights\", user_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let token = response.data as UserTokenData;\r\n    return { response, token };\r\n}\r\n\r\nexport async function list_users() {\r\n    let response = await post_json(\"/user/list_users\", {});\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let token = response.data as UserData[];\r\n    return { response, token };\r\n}\r\n\r\nexport async function show_user(user_id: string) {\r\n    let user_data = { user_id }\r\n    let response = await post_json(\"/user/show_user\", user_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let token = response.data as UserData;\r\n    return { response, token };\r\n}\r\n\r\nexport async function edit_user_details(\r\n    auth_token: string,\r\n    password: string,\r\n    new_password: string | null = null,\r\n    firstname: string | null = null,\r\n    lastname: string | null = null,\r\n    new_email: string | null = null,\r\n) {\r\n    let request_data = {\r\n        auth_token,\r\n        password,\r\n        new_password,\r\n        firstname,\r\n        lastname,\r\n        new_email\r\n    };\r\n    let response = await post_json(\"/user/edit_user\", request_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let token = response.data as UserData;\r\n    return { response, token };\r\n}\r\n\r\nexport async function delete_user(auth_token: string, password: string) {\r\n    let request_data = { auth_token, password, };\r\n    let response = await post_json(\"/user/edit_user\", request_data);\r\n    return { response };\r\n}\r\n\r\nexport async function refresh_token(auth_token: string) {\r\n    let request_data = { auth_token };\r\n    let response = await post_json(\"/user/edit_user\", request_data);\r\n    if (response.success == 0) {\r\n        return { response }\r\n    }\r\n    let token = response.data as UserTokenData;\r\n    return { response, token };\r\n}\r\n\r\nexport async function testing_admin_credentials() {\r\n    let response = await post_json(\"/user/admin_test_creds\", {});\r\n    if (response.success == 0) {\r\n        throw new Error(response.message);\r\n    }\r\n    let admin = response.data as UserTokenData;\r\n    return { response, admin };\r\n}", "\r\nimport * as util from \"../util\";\r\nimport * as api from \"./webapi\";\r\n\r\nexport type UserStorageData = {\r\n    user: api.UserData,\r\n    token: api.UserTokenData,\r\n}\r\n\r\nconst USER_TOKEN_KEY: string = \"BCMS_USERTS_LOCALTOKEN\";\r\nconst USER_DATA_KEY: string = \"BCMS_USERTS_LOCALUSER\";\r\n\r\n// core functions\r\nexport function get_local_user_data() {\r\n    let token_string = localStorage.getItem(USER_TOKEN_KEY);\r\n    let user_string = localStorage.getItem(USER_DATA_KEY)\r\n    if (!token_string || !user_string) {\r\n        return null;\r\n    }\r\n\r\n    let token = JSON.parse(token_string);\r\n    let user = JSON.parse(user_string);\r\n    if (!token || !user) {\r\n        return null;\r\n    }\r\n\r\n    let userData: UserStorageData = {\r\n        token: token,\r\n        user: user\r\n    }\r\n\r\n    return userData;\r\n}\r\n\r\nexport function clear_local_user_data() {\r\n    localStorage.removeItem(USER_DATA_KEY);\r\n    localStorage.removeItem(USER_TOKEN_KEY);\r\n    return true;\r\n}\r\n\r\nexport function save_user_data_to_local(userdata: UserStorageData) {\r\n    let token = JSON.stringify(userdata.token);\r\n    let data = JSON.stringify(userdata.user);\r\n    localStorage.setItem(USER_TOKEN_KEY, token);\r\n    localStorage.setItem(USER_DATA_KEY, data);\r\n    return true;\r\n}\r\n\r\nexport async function revalidate_token() {\r\n    let user_data = get_local_user_data();\r\n    if (!user_data) {\r\n        return null;\r\n    }\r\n\r\n    // check if current token is expired\r\n    if (util.time() > user_data.token.expires_at) {\r\n        clear_local_user_data();\r\n        return null;\r\n    }\r\n\r\n    // refresh if less then 10 minutes left of the token\r\n    if ((util.time() + 600) > user_data.token.expires_at) {\r\n        let token = await api.refresh_token(user_data.token.id);\r\n        if (!token.token) {\r\n            throw new Error(token.response.message);\r\n        }\r\n\r\n        user_data.token = token.token;\r\n        save_user_data_to_local(user_data);\r\n    }\r\n\r\n    // validate the current user token\r\n    let user = await api.who(user_data.token.id);\r\n    if (!user.userdata) {\r\n        throw new Error(user.response.message);\r\n    }\r\n\r\n    if (user.userdata.id != user_data.token.user_id) {\r\n        clear_local_user_data();\r\n        throw new Error(\"aquired invalid token\");\r\n    }\r\n\r\n    user_data.user = user.userdata;\r\n    save_user_data_to_local(user_data);\r\n    return user_data.token;\r\n}\r\n\r\nexport async function get_admin_credenitals() {\r\n    let admin_creds = await api.testing_admin_credentials();\r\n    console.log(admin_creds);\r\n    if (!admin_creds.admin) {\r\n        throw new Error(admin_creds.response.message);\r\n    }\r\n\r\n    let admin_data = await api.who(admin_creds.admin.id);\r\n    console.log(admin_data);\r\n    if (!admin_data.userdata) {\r\n        throw new Error(admin_data.response.message);\r\n    }\r\n\r\n    let user_data: UserStorageData = {\r\n        token: admin_creds.admin,\r\n        user: admin_data.userdata,\r\n    }\r\n\r\n    save_user_data_to_local(user_data);\r\n    return user_data;\r\n}\r\n", "import * as user_core from \"./user/user_core\";\r\nimport { time, post_formdata, get_smallest_res_from_src } from \"./util\";\r\n\r\n// constant values\r\nconst LOCAL_ARTICLE_STORAGE_KEY = \"editor-ts-local-article\";\r\n\r\n// internal storage functions\r\nfunction load_local_article() {\r\n    let article_string = localStorage.getItem(LOCAL_ARTICLE_STORAGE_KEY);\r\n    if (!article_string) {\r\n        return null;\r\n    }\r\n\r\n    let article: ArticleData = JSON.parse(article_string);\r\n    if (!article) {\r\n        throw new Error(\"could not parse the local article, you fucked up somehow\");\r\n    }\r\n    return article;\r\n}\r\n\r\nfunction save_article_to_local(article: ArticleData) {\r\n    let article_dump = JSON.stringify(article);\r\n    localStorage.setItem(LOCAL_ARTICLE_STORAGE_KEY, article_dump);\r\n}\r\n\r\nfunction clear_local_article() {\r\n    localStorage.removeItem(LOCAL_ARTICLE_STORAGE_KEY);\r\n}\r\n\r\n// internal init functions;\r\nfunction init_empty_article() {\r\n    let user_data = user_core.get_local_user_data();\r\n    if (!user_data) {\r\n        throw new Error(\"no user data found, not logged in\");\r\n    }\r\n\r\n    let article: ArticleData = {\r\n        author_id: user_data.user.id,\r\n        content: [],\r\n        description: \"\",\r\n        last_changed: time(),\r\n        id: undefined,\r\n        title: \"\",\r\n    };\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\nfunction get_controll_buttons() {\r\n    let log_button = document.getElementById(\"log-article\") as HTMLButtonElement | null;\r\n    let add_paragraph_button = document.getElementById(\"add-paragraph\") as HTMLButtonElement | null;\r\n    let add_image_button = document.getElementById(\"add-image\") as HTMLButtonElement | null;\r\n    let add_heading_button = document.getElementById(\"add-heading\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !log_button ||\r\n        !add_paragraph_button ||\r\n        !add_image_button ||\r\n        !add_heading_button\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let controll_buttons: ArticleEditorControllButtons = {\r\n        log_button,\r\n        add_paragraph_button,\r\n        add_image_button,\r\n        add_heading_button\r\n    }\r\n\r\n    return controll_buttons;\r\n}\r\n\r\nfunction get_templates() {\r\n    let paragraph_templte = document.getElementById(\"article-paragraph-template\") as HTMLTemplateElement | null;\r\n    let image_templte = document.getElementById(\"article-image-template\") as HTMLTemplateElement | null;\r\n    let heading_templte = document.getElementById(\"article-heading-template\") as HTMLTemplateElement | null;\r\n\r\n    if (\r\n        !paragraph_templte ||\r\n        !image_templte ||\r\n        !heading_templte\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let templates: ArticleHtmlTemplates = {\r\n        paragraph: paragraph_templte,\r\n        image: image_templte,\r\n        heading: heading_templte,\r\n    }\r\n\r\n    return templates;\r\n}\r\n\r\nfunction get_editor() {\r\n    return document.getElementById(\"editor-container\") as HTMLElement | null;\r\n}\r\n\r\n\r\n// editor image functions\r\nfunction set_image_from_gallery_popup(index: number) {\r\n    const popup = window.open(\r\n        \"/gallery-popup\",\r\n        \"popupWindow\",\r\n        \"width=600,height=400\"\r\n    );\r\n\r\n    window.receive_data = function (data: string) {\r\n        console.log(data);\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load artilce\");\r\n        }\r\n\r\n        let item = article.content[index];\r\n        if (item.type != ArticleItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        item.src_id = data;\r\n        save_article_to_local(article);\r\n        render_editor();\r\n    };\r\n}\r\n\r\nfunction set_image_from_file_upload(index: number) {\r\n    // select a file\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"png, jpg, jpeg\";\r\n    input.multiple = false;\r\n    input.onchange = async () => {\r\n\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load artilce\");\r\n        }\r\n\r\n        let media_item = article.content[index];\r\n        if (media_item.type != ArticleItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        // retrieve the selected file\r\n        let input_files = input.files;\r\n        if (!input_files) {\r\n            return;\r\n        }\r\n        let files = Array.from(input_files);\r\n        let file = files[0];\r\n        input.remove();\r\n\r\n        // upload the file to the gallery\r\n        let formdata = new FormData();\r\n        formdata.append(\"media\", file);\r\n        let image = await post_formdata(\"/media/upload_media\", formdata);\r\n        let image_id = image.data.results[0].key;\r\n        // set the item source\r\n        media_item.src_id = image_id;\r\n        article.last_changed = time();\r\n        save_article_to_local(article);\r\n        render_editor();\r\n\r\n    };\r\n    input.click();\r\n}\r\n\r\nfunction render_image(entry: HTMLElement, index: number, article: ArticleData) {\r\n    let display = entry.querySelector(\".image-display\") as HTMLImageElement | null;\r\n    if (!display) {\r\n        throw new Error(\"media-display not found\");\r\n    }\r\n\r\n    let media_item = article.content[index];\r\n    if (media_item.type != ArticleItemTypeEnum.image) {\r\n        throw new Error(\"item type is not image\");\r\n    }\r\n\r\n    // if src_id is undefined we have not yet chosen an image.\r\n    if (!media_item.src_id) {\r\n        display.classList.toggle(\"hidden\", true);\r\n        return;\r\n    }\r\n\r\n    // else image_id is defined and we render the image\r\n    const load = async () => {\r\n        let media_item = article.content[index];\r\n        if (media_item.type != ArticleItemTypeEnum.image) {\r\n            throw new Error(\"item type is not image\");\r\n        }\r\n        if (!media_item.src_id) {\r\n            throw new Error(\"src_id not found\");\r\n        }\r\n        display.src = await get_smallest_res_from_src(\r\n            media_item.src_id,\r\n            entry.clientWidth\r\n        );\r\n        display.classList.toggle(\"hidden\", false);\r\n    };\r\n    load();\r\n}\r\n\r\nfunction insert_template_in_editor(template: HTMLTemplateElement, editor: HTMLElement) {\r\n    console.log(template);\r\n\r\n    let entry = document.createElement(\"li\");\r\n    let clone = template.cloneNode(true) as HTMLTemplateElement | null;\r\n    if (!clone) {\r\n        throw new Error(\"could not clone template\");\r\n    }\r\n    let item = clone.content;\r\n\r\n    entry.appendChild(item);\r\n    editor.appendChild(entry);\r\n    return entry;\r\n}\r\n\r\nfunction editor_connect_paragraph(entry: HTMLElement, index: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    // init the text-area\r\n    let textarea = entry.querySelector(\".paragraph-input\") as HTMLTextAreaElement | null;\r\n    if (!textarea) {\r\n        throw new Error(\"Could not find textarea\");\r\n    }\r\n    let text_item = article.content[index];\r\n    if (text_item.type != ArticleItemTypeEnum.paragraph) {\r\n        throw new Error(\"Article item at index is not a paragraph\");\r\n    }\r\n    textarea.value = text_item.text;\r\n\r\n    // commit changes when they occur\r\n    textarea.onchange = () => {\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load article\");\r\n        }\r\n        let text_item = article.content[index];\r\n        if (text_item.type != ArticleItemTypeEnum.paragraph) {\r\n            throw new Error(\"Article item at index is not a paragraph\");\r\n        }\r\n        text_item.text = textarea.value;\r\n        save_article_to_local(article);\r\n    };\r\n}\r\n\r\nfunction editor_image_connect(entry: HTMLElement, index: number) {\r\n    // connect the alt-text and its relevant update\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    // init the image-item alt text\r\n    let image_item = article.content[index];\r\n    if (image_item.type != ArticleItemTypeEnum.image) {\r\n        throw new Error(\"Article item at index is not a image\");\r\n    }\r\n\r\n    let alt_text = entry.querySelector(\".image-alt-text-input\") as HTMLInputElement | null;\r\n    if (!alt_text) {\r\n        throw new Error(\"could not find alt_text element\");\r\n    }\r\n\r\n    alt_text.value = image_item.alt_text;\r\n\r\n    // commit alt text changes when they occurs\r\n    alt_text.onchange = () => {\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load article\");\r\n        }\r\n        let image_item = article.content[index];\r\n        if (image_item.type != ArticleItemTypeEnum.image) {\r\n            throw new Error(\"Article item at index is not a image\");\r\n        }\r\n        image_item.alt_text = alt_text.value;\r\n        save_article_to_local(article);\r\n    };\r\n\r\n    // connect the upload buttons\r\n    let image_select_button = entry.querySelector(\".image-gallery-select\") as HTMLElement | null;\r\n    let image_upload_button = entry.querySelector(\".image-gallery-upload\") as HTMLElement | null;\r\n\r\n    if (image_select_button) {\r\n        image_select_button.onclick = () => set_image_from_gallery_popup(index);\r\n    }\r\n\r\n    if (image_upload_button) {\r\n        image_upload_button.onclick = () => set_image_from_file_upload(index);\r\n    }\r\n}\r\n\r\nfunction editor_connect_generic(entry: HTMLElement, index: number) {\r\n    // generic delete\r\n    let delete_button = entry.querySelector(\".delete-button\") as HTMLElement | null;\r\n    if (delete_button) {\r\n        delete_button.onclick = () => {\r\n            article_delete_item(index);\r\n            render_editor();\r\n        };\r\n    }\r\n\r\n    // generic move up\r\n    let move_up_button = entry.querySelector(\".move-up-button\") as HTMLElement | null;\r\n    if (move_up_button) {\r\n        move_up_button.onclick = () => {\r\n            article_move_item(index, -1);\r\n            render_editor();\r\n        };\r\n    }\r\n\r\n    // generic move down\r\n    let move_down_button = entry.querySelector(\".move-down-button\") as HTMLElement | null;\r\n    if (move_down_button) {\r\n        move_down_button.onclick = () => {\r\n            article_move_item(index, 1);\r\n            render_editor();\r\n        };\r\n    }\r\n}\r\n\r\n// view functions\r\nfunction render_editor() {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    let y_pos = window.scrollY;\r\n    let editor = get_editor();\r\n    let templates = get_templates();\r\n\r\n    if (!editor) {\r\n        throw new Error(\"Editor is not initialized\");\r\n    }\r\n\r\n    if (!templates) {\r\n        throw new Error(\"templates did not load\");\r\n    }\r\n\r\n    editor.innerHTML = \"\";\r\n    let entry;\r\n\r\n    for (let index = 0; index < article.content.length; index++) {\r\n        switch (article.content[index].type) {\r\n            case ArticleItemTypeEnum.paragraph:\r\n                entry = insert_template_in_editor(templates.paragraph, editor);\r\n                editor_connect_paragraph(entry, index);\r\n                break;\r\n\r\n            case ArticleItemTypeEnum.image:\r\n                entry = insert_template_in_editor(templates.image, editor);\r\n                render_image(entry, index, article);\r\n                editor_image_connect(entry, index);\r\n                break;\r\n\r\n            case ArticleItemTypeEnum.heading:\r\n                entry = insert_template_in_editor(templates.heading, editor);\r\n                // editor_heading_connect(entry, index); TODO fix the editor heading connector\r\n                break;\r\n\r\n            // skip to next item if we dont have a template for the type\r\n            default:\r\n                console.log(\"Item type in editor-render is unknown, skipping\")\r\n                continue;\r\n        }\r\n        editor_connect_generic(entry, index);\r\n    }\r\n\r\n    save_article_to_local(article);\r\n\r\n    requestAnimationFrame(() => {\r\n        window.scrollTo(0, y_pos);\r\n    });\r\n}\r\n\r\n// article functions\r\nfunction article_add_item(item_type: ArticleItemTypeEnum) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load artilce\");\r\n    }\r\n\r\n    let length = article.content.length;\r\n    let new_item: ArticleTextItem | ArticleMediaItem;\r\n\r\n    switch (item_type) {\r\n        case ArticleItemTypeEnum.paragraph:\r\n        case ArticleItemTypeEnum.heading:\r\n            new_item = {\r\n                type: item_type,\r\n                text: \"\",\r\n                index: length\r\n            }\r\n            break;\r\n        case ArticleItemTypeEnum.image:\r\n            new_item = {\r\n                type: item_type,\r\n                alt_text: \"\",\r\n                index: length,\r\n                src_id: undefined,\r\n            }\r\n            break;\r\n    }\r\n\r\n    article.content.push(new_item);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    render_editor();\r\n}\r\n\r\nfunction article_delete_item(index: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    article.content.splice(index, 1);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\nfunction article_move_item(index: number, move_by: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    let target = index + move_by;\r\n    if (target < 0 || target >= article.content.length) {\r\n        throw new Error(\"target position is out of bounds\");\r\n    }\r\n    let [item_to_move] = article.content.splice(index, 1);\r\n    article.content.splice(target, 0, item_to_move);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\n\r\nexport default function main() {\r\n    let user_data = user_core.get_local_user_data();\r\n    if (!user_data) {\r\n        // redirect out of editor if not logged in\r\n        window.location.href = \"/\";\r\n        return;\r\n    }\r\n\r\n    // load or initalize the article;\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        article = init_empty_article();\r\n    }\r\n\r\n    let controll_buttons = get_controll_buttons();\r\n    if (!controll_buttons) {\r\n        throw new Error(\"controll buttons not initialized\");\r\n    }\r\n\r\n    controll_buttons.log_button.onclick = () => console.log(article);\r\n    // insertion buttons\r\n    controll_buttons.add_paragraph_button.onclick = () => article_add_item(ArticleItemTypeEnum.paragraph);\r\n    controll_buttons.add_image_button.onclick = () => article_add_item(ArticleItemTypeEnum.image);\r\n    controll_buttons.add_heading_button.onclick = () => article_add_item(ArticleItemTypeEnum.heading);\r\n\r\n    render_editor();\r\n}", "import { post_json, get_smallest_res_from_src } from \"./util\";\r\n\r\n\r\n\r\nfunction get_gallery_elements() {\r\n    let image_preview_template = document.getElementById(\"gallery-image-preview-template\") as HTMLElement | null;\r\n    let image_display = document.getElementById(\"gallery-image-display\") as HTMLElement | null;\r\n\r\n    if (!image_display || !image_preview_template) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        image_preview_template,\r\n        image_display\r\n    }\r\n}\r\n\r\n\r\nasync function get_all_media() {\r\n    let response = await post_json(\"/media/fetch_all_media_metadata\", {})\r\n    if (response.error) {\r\n        throw new Error(response.error);\r\n    }\r\n\r\n    let all_media: Media[] = response;\r\n\r\n    if (all_media.length > 1) {\r\n        all_media.sort((a: Media, b: Media) => b.creation_time - a.creation_time);\r\n    }\r\n    all_media = all_media.filter((m) => m && m.id)\r\n    return all_media as Media[]\r\n}\r\n\r\nexport default async function main() {\r\n    let html_elements = get_gallery_elements();\r\n    if (!html_elements) {\r\n        throw new Error(\"Gallery HTML elements not initialized\");\r\n    }\r\n\r\n    let all_media = await get_all_media();\r\n    let target_url_promises = all_media.map(async (m) => {\r\n        let target = await get_smallest_res_from_src(m.id, html_elements.image_display.clientWidth);\r\n        return { target, media: m };\r\n    })\r\n    let targets = await Promise.all(target_url_promises);\r\n\r\n    let entry_promises = targets.map((t) => {\r\n        let entry = document.createElement(\"li\");\r\n        let clone = html_elements.image_preview_template.cloneNode(true) as HTMLTemplateElement;\r\n        let clone_content = clone.content;\r\n\r\n        entry.appendChild(clone_content);\r\n        let img = entry.querySelector(\"img\") as HTMLImageElement | null;\r\n        if (!img) {\r\n            throw new Error(\"could not find image element, something went wrong\");\r\n        }\r\n        img.src = t.target;\r\n        return { entry, ...t };\r\n    })\r\n    let entries = await Promise.all(entry_promises);\r\n\r\n    entries.forEach((e) => {\r\n        e.entry.onclick = () => {\r\n            window.opener.receive_data(e.media.id);\r\n            window.close();\r\n        }\r\n    })\r\n\r\n    html_elements.image_display.innerHTML = \"\";\r\n    entries.forEach((e) => {\r\n        html_elements.image_display.appendChild(e.entry);\r\n    });\r\n}\r\n", "import { get_smallest_res_from_src, post_formdata, post_json } from \"./util\";\r\n\r\nfunction get_html_elements() {\r\n    let input_source = document.getElementById(\"image-upload-source\") as HTMLInputElement | null;\r\n    let image_preview_template = document.getElementById(\"gallery-image-preview-template\") as HTMLTemplateElement | null;\r\n    let image_display = document.getElementById(\"gallery-image-display\") as HTMLElement | null;\r\n    let upload_button = document.getElementById(\"upload-image-button\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !input_source ||\r\n        !image_preview_template ||\r\n        !image_display ||\r\n        !upload_button\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let elements: GalleryHtmlElements = {\r\n        input_source,\r\n        image_preview_template,\r\n        image_display,\r\n        upload_button\r\n    };\r\n    return elements;\r\n}\r\n\r\nasync function load_all_media(html_elements: GalleryHtmlElements) {\r\n    let response = await post_json(\"/media/fetch_all_media_metadata\", {});\r\n    console.log(response);\r\n    if (response.error) {\r\n        throw new Error(response.error);\r\n    }\r\n    if (response.success == 0) {\r\n        return null;\r\n        // should throw new Error(response.message);\r\n    }\r\n\r\n    let all_media = response as Media[];\r\n    console.log(all_media);\r\n    if (all_media.length <= 0) {\r\n        throw new Error(\"no media found\");\r\n    }\r\n    all_media = all_media.filter((media) => media && media.id);\r\n\r\n\r\n    let media_promises = all_media.map(async (media) => {\r\n        // generate the entries and assign relevant functions etc\r\n        let target_url = await get_smallest_res_from_src(\r\n            media.id,\r\n            html_elements.image_display.clientWidth\r\n        );\r\n        return {\r\n            media,\r\n            target_url\r\n        }\r\n    });\r\n    let media_with_targets = await Promise.all(media_promises);\r\n    if (media_with_targets.length > 1) {\r\n        media_with_targets.sort((a, b) => b.media.creation_time - a.media.creation_time);\r\n    }\r\n    return media_with_targets;\r\n}\r\n\r\nasync function upload_files(input_element: HTMLInputElement) {\r\n    let files = input_element.files;\r\n    if (!files) {\r\n        throw new Error(\"no files attached to input source\")\r\n    }\r\n\r\n    let formdata = new FormData();\r\n    for (let index = 0; index <= files.length; index++) {\r\n        formdata.append(\"media\", files[index]);\r\n    }\r\n\r\n    await post_formdata(\"/media/upload_media\", formdata);\r\n    main();\r\n    input_element.value = \"\";\r\n}\r\n\r\nasync function render_gallery(html_elements: GalleryHtmlElements) {\r\n    let all_media = await load_all_media(html_elements);\r\n    if (!all_media) {\r\n        html_elements.image_display.innerHTML = \"\";\r\n        return;\r\n    }\r\n\r\n    // create all the entries that should go in to the dom\r\n    let entry_promises = all_media.map((media) => {\r\n        let entry = document.createElement(\"li\");\r\n        let clone = html_elements.image_preview_template.cloneNode(true) as HTMLTemplateElement;\r\n        let clone_content = clone.content;\r\n        entry.append(clone_content);\r\n        let img_element = entry.querySelector(\"img\") as HTMLImageElement | null;\r\n        if (!img_element) {\r\n            throw new Error(\"could not find img element\")\r\n        }\r\n        img_element.src = media.target_url;\r\n        return { entry, media };\r\n    })\r\n    let entries = await Promise.all(entry_promises);\r\n\r\n    // hook up each remove-element button\r\n    entries.forEach((e) => {\r\n        let remove_media_button = e.entry.querySelector(\".remove-image-button\") as HTMLButtonElement | null;\r\n        if (!remove_media_button) {\r\n            throw new Error(\"could not find remove media button\")\r\n        }\r\n        remove_media_button.onclick = async () => {\r\n            await post_json(\"/media/update_media_metadata\", {\r\n                media_ID: e.media.media.id,\r\n                is_unlisted: true,\r\n            });\r\n            main();\r\n        };\r\n    })\r\n\r\n    html_elements.image_display.innerHTML = \"\";\r\n    entries.forEach((entry) => html_elements.image_display.appendChild(entry.entry));\r\n}\r\n\r\n// startup\r\nexport default function main() {\r\n    let html_elements = get_html_elements();\r\n    if (!html_elements) {\r\n        throw new Error(\"html_elements not loaded\");\r\n    }\r\n\r\n    html_elements.upload_button.onclick = () => upload_files(html_elements.input_source);\r\n\r\n    render_gallery(html_elements);\r\n}\r\n", "import { post_json, get_smallest_res_from_src } from \"./util\";\r\n// import { get_current_user_token_id } from \"./user\";\r\n\r\ntype Article = {\r\n    id: string,\r\n    title: string,\r\n    desc: string,\r\n    user_id: string,\r\n    image: Record<string, any>\r\n}\r\n\r\ntype ErrorResponse = {\r\n    error: string,\r\n}\r\n\r\nconst ARTICLE_TEMPLATE = document.querySelector(\"#list-article-template\") as HTMLTemplateElement | null;\r\nconst ARTICLE_DISPLAY = document.querySelector(\"#list-article-display\") as HTMLElement | null;\r\n\r\nexport default function main() {\r\n    list_all();\r\n\r\n}\r\n\r\nfunction render_articles(articles: Article[]) {\r\n    if (!ARTICLE_DISPLAY) {\r\n        throw new Error(\"Display list_article not found\");\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE) {\r\n        throw new Error(\"Template is not found\")\r\n    }\r\n\r\n    ARTICLE_DISPLAY.innerHTML = \"\"\r\n\r\n    for (let index = 0; index < articles.length; index++) {\r\n\r\n        // Generate from template\r\n        let clone = ARTICLE_TEMPLATE.cloneNode(true) as HTMLTemplateElement;\r\n        // Alt unntatt <template>\r\n        let entry = clone.content;\r\n        let render_title = entry.querySelector(\".list-article-title\") as HTMLElement | null;\r\n        if (!render_title) {\r\n            throw new Error(\"title not found\")\r\n        }\r\n        render_title.innerHTML = articles[index].title;\r\n\r\n\r\n        // TODO: fetch local images from server with get_smalest_res_from_src\r\n\r\n        // Render image if found in article\r\n        if (articles[index].image[\"src_id\"]) {\r\n\r\n            let render_image = entry.querySelector(\".list-article-image\") as HTMLImageElement | null;\r\n            let render_image_src = articles[index].image[\"src_id\"];\r\n\r\n            if (render_image) {\r\n                render_image.src = render_image_src;\r\n            }\r\n\r\n        }\r\n\r\n        let render_desc = entry.querySelector(\".list-article-desc\") as HTMLElement | null;\r\n        if (!render_desc) {\r\n            throw new Error(\"title not found\")\r\n        }\r\n        render_desc.innerHTML = articles[index].desc;\r\n\r\n        let render_user_id = entry.querySelector(\".list-article-user_id\") as HTMLElement | null;\r\n        if (!render_user_id) {\r\n            throw new Error(\"title not found\")\r\n        }\r\n        render_user_id.innerHTML = articles[index].user_id;\r\n\r\n        let entryElement = entry.querySelector(\".list-article-link\") as HTMLElement | null;\r\n        if (!entryElement) {\r\n            throw new Error(\"entry element not found\");\r\n        }\r\n        entryElement.onclick = () => {\r\n            window.location.href = `/view?article-id=${articles[index].id}`;\r\n        }\r\n\r\n        // Display faktiske artikkelen\r\n        ARTICLE_DISPLAY.appendChild(entry);\r\n    }\r\n}\r\n\r\nasync function list_all() {\r\n    let all_articles: Article[] | ErrorResponse = await post_json(\"/article/list_all_articles\", {});\r\n    if (\"error\" in all_articles) {\r\n        throw new Error(all_articles.error);\r\n    }\r\n\r\n    render_articles(all_articles);\r\n\r\n    window.setTimeout(() => { list_all(); }, 1000 * 60 * 10)\r\n}\r\n", "\r\nimport { post_json, time } from \"./util\";\r\n// Typescript\r\n\r\n// type ArticleTextItem = {\r\n//     type: string,\r\n//     content: string,\r\n// }\r\n\r\n// type ArticleImageItem = {\r\n//     type: string,\r\n//     src_id: string\r\n//     text: string\r\n// }\r\n\r\ntype Article = {\r\n    accepted_id: string,\r\n    body: Record<string, any>,\r\n    desc: string,\r\n    id: string,\r\n    isAccepted: boolean,\r\n    isDeleted: boolean,\r\n    isDraft: boolean,\r\n    isListed: boolean,\r\n    timestamp: number,\r\n    title: string,\r\n    update_timestamp: number,\r\n    user_id: string\r\n}\r\n\r\ntype ErrorResponse = {\r\n    error: string,\r\n}\r\n\r\nconst ARTICLE_DISPLAY = document.querySelector(\"#article-display\") as HTMLElement | null;\r\n\r\nconst ARTICLE_TEMPLATE_IMAGE = document.querySelector(\"#article-image\") as HTMLTemplateElement | null;\r\nconst ARTICLE_TEMPLATE_TITLE = document.querySelector(\"#article-title\") as HTMLTemplateElement | null;\r\nconst ARTICLE_TEMPLATE_METADATA = document.querySelector(\"#article-metadata\") as HTMLTemplateElement | null;\r\nconst ARTICLE_TEMPLATE_DESC = document.querySelector(\"#article-desc\") as HTMLTemplateElement | null;\r\nconst ARTICLE_TEMPLATE_TEXT = document.querySelector(\"#article-text\") as HTMLTemplateElement | null;\r\n\r\nexport default function main() {\r\n    // 1. Hente artikkelid fra urlen som view urlen g\u00E5r inn p\u00E5\r\n    let urlParam = new URLSearchParams(window.location.search);\r\n    let article_id = urlParam.get(\"article-id\");\r\n    if (article_id == null) {\r\n        throw new Error(\"Article not found!\");\r\n    }\r\n\r\n    get_article(article_id);\r\n}\r\n\r\nfunction render_article(article: Article) {\r\n\r\n    if (!ARTICLE_DISPLAY) {\r\n        throw new Error(\"Display_article not found\");\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE_IMAGE) {\r\n        throw new Error(\"Template IMAGE is not found\")\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE_TITLE) {\r\n        throw new Error(\"Template TITLE is not found\")\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE_METADATA) {\r\n        throw new Error(\"Template METADATA is not found\")\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE_DESC) {\r\n        throw new Error(\"Template DESC is not found\")\r\n    }\r\n\r\n    if (!ARTICLE_TEMPLATE_TEXT) {\r\n        throw new Error(\"Template TEXT is not found\")\r\n    }\r\n\r\n    ARTICLE_DISPLAY.innerHTML = \"\"\r\n\r\n    // Render title\r\n    let clone = ARTICLE_TEMPLATE_TITLE.cloneNode(true) as HTMLTemplateElement;\r\n    let entry = clone.content;\r\n    let render_title = entry.querySelector(\".article-title\") as HTMLElement | null;\r\n    if (!render_title) {\r\n        throw new Error(\"title not found\")\r\n    }\r\n    render_title.innerHTML = article.title;\r\n    ARTICLE_DISPLAY.append(entry);\r\n\r\n    // Render desc\r\n    clone = ARTICLE_TEMPLATE_DESC.cloneNode(true) as HTMLTemplateElement;\r\n    entry = clone.content;\r\n    let render_desc = entry.querySelector(\".article-desc\") as HTMLElement | null;\r\n    if (!render_desc) {\r\n        throw new Error(\"description not found!\");\r\n    }\r\n    render_desc.innerHTML = article.desc;\r\n    ARTICLE_DISPLAY.append(entry);\r\n\r\n    // Render metadata\r\n    clone = ARTICLE_TEMPLATE_METADATA.cloneNode(true) as HTMLTemplateElement;\r\n    entry = clone.content;\r\n\r\n    // Created timestamp\r\n    let render_timestamp = entry.querySelector(\".article-timestamp\") as HTMLElement | null;\r\n    if (!render_timestamp) {\r\n        throw new Error(\"created timestamp not found\")\r\n    }\r\n    let timestamp = new Date(0);\r\n    timestamp.setUTCSeconds(article.timestamp);\r\n    render_timestamp.innerHTML = `Skrevet: ${timestamp.toLocaleString()}`;\r\n\r\n    // update timestamp\r\n    let render_update_timestamp = entry.querySelector(\".article-update-timestamp\") as HTMLElement | null;\r\n    if (!render_update_timestamp) {\r\n        throw new Error(\"update timestamp not found\");\r\n    }\r\n    let update_timestamp = new Date(0);\r\n    update_timestamp.setUTCSeconds(article.update_timestamp);\r\n    render_update_timestamp.innerHTML = `Oppdatert: ${update_timestamp.toLocaleString()}`;\r\n\r\n    // Author\r\n    let render_author = entry.querySelector(\".article-author\") as HTMLElement | null;\r\n    if (!render_author) {\r\n        throw new Error(\"author not found\");\r\n    }\r\n    render_author.innerHTML = `Skrevet av ${article.user_id}`;\r\n    ARTICLE_DISPLAY.append(entry);\r\n\r\n\r\n    // Render body\r\n\r\n    // TODO sortere slik at index i body blir rett rekkef\u00F8lge\r\n    for (let index = 0; index < article.body.length; index++) {\r\n        switch (article.body[index].type) {\r\n            // TODO hente rett resolution av image\r\n            case \"image\":\r\n                clone = ARTICLE_TEMPLATE_IMAGE.cloneNode(true) as HTMLTemplateElement;\r\n                entry = clone.content;\r\n                let render_image = entry.querySelector(\".article-image\") as HTMLImageElement | null;\r\n                let render_image_src = article.body[index].src_id;\r\n\r\n                if (render_image) {\r\n                    render_image.src = render_image_src;\r\n                }\r\n                ARTICLE_DISPLAY.appendChild(entry);\r\n                break;\r\n            case \"paragraph\":\r\n                clone = ARTICLE_TEMPLATE_TEXT.cloneNode(true) as HTMLTemplateElement;\r\n                entry = clone.content;\r\n                let render_text = entry.querySelector(\".article-text\") as HTMLElement | null;\r\n                if (!render_text) {\r\n                    throw new Error(\"text not found\")\r\n                }\r\n                render_text.innerHTML = article.body[index].text;\r\n                ARTICLE_DISPLAY.appendChild(entry);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function get_article(article_id: string | null) {\r\n    // Post request til blueprint for \u00E5 hente artikkel json\r\n    let article: Article | ErrorResponse = await post_json(\"/article/get_article\", { \"id\": article_id });\r\n    if (\"error\" in article) {\r\n        throw new Error(article.error);\r\n    }\r\n\r\n    console.log(article)\r\n\r\n    render_article(article);\r\n}\r\n\r\n", "import * as util from \"../util\";\r\nimport * as core from \"./user_core\";\r\nimport * as api from \"./webapi\";\r\n\r\nfunction get_html_elements() {\r\n    let login_template = document.querySelector(\".user-details-login-template\") as HTMLTemplateElement | null;\r\n    let profile_template = document.querySelector(\".user-details-profile-template\") as HTMLTemplateElement | null;\r\n    let details_container = document.querySelector(\".user-details-container\") as HTMLElement | null;\r\n\r\n    if (\r\n        !login_template ||\r\n        !profile_template ||\r\n        !details_container\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let elements: UserHtmlElements = {\r\n        login_template: login_template,\r\n        profile_template: profile_template,\r\n        details_container: details_container,\r\n    }\r\n    return elements;\r\n}\r\n\r\n// api coms functions - stuff that talks to the server\r\nfunction logout() {\r\n    let userdata = core.get_local_user_data();\r\n    if (!userdata) {\r\n        throw new Error(\"No local user-data\");\r\n    }\r\n\r\n    api.logout(userdata.token.id);\r\n    core.clear_local_user_data();\r\n\r\n    // reload the user state etc.\r\n    user_header_main();\r\n}\r\n\r\nfunction render_user() {\r\n    let elements = get_html_elements();\r\n    if (!elements) {\r\n        throw new Error(\"could not load html elements\");\r\n    }\r\n\r\n    elements.details_container.innerHTML = \"\";\r\n    let userdata = core.get_local_user_data();\r\n    if (!userdata) {\r\n        let clone = elements.login_template.cloneNode(true) as HTMLTemplateElement;\r\n        elements.details_container.appendChild(clone.content);\r\n        return;\r\n    }\r\n\r\n    // VVV if we have some local userdata VVV\r\n    let clone = elements.profile_template.cloneNode(true) as HTMLTemplateElement;\r\n    let profile_template = clone.content;\r\n    let firstname_element = profile_template.querySelector(\"#user-profile-first-name\") as HTMLElement | null;\r\n    if (!firstname_element) {\r\n        throw new Error(\"fistname_element not found\");\r\n    }\r\n    firstname_element.innerHTML = userdata.user.firstname;\r\n\r\n    let lastname_element = profile_template.querySelector(\"#user-profile-last-name\") as HTMLElement | null;\r\n    if (!lastname_element) {\r\n        throw new Error(\"lastname_element not found\");\r\n    }\r\n    lastname_element.innerHTML = userdata.user.lastname;\r\n\r\n    let logout_button = profile_template.querySelector(\"#user-profile-logout-button\") as HTMLElement | null;\r\n    if (!logout_button) {\r\n        throw new Error(\"logout_button not found\");\r\n    }\r\n    logout_button.onclick = () => {\r\n        logout();\r\n    };\r\n\r\n    elements.details_container.appendChild(profile_template);\r\n    return;\r\n}\r\n\r\nexport async function user_header_main() {\r\n    // just for local testing\r\n    await core.get_admin_credenitals();\r\n\r\n    // user_revalidate_token();\r\n    render_user();\r\n}", "import * as core from \"./user_core\";\r\nimport * as api from \"./webapi\";\r\n\r\nfunction get_input_fields() {\r\n    let registration_first_name = document.querySelector(\"#user-register-first-name-input\") as HTMLInputElement | null;\r\n    let registration_last_name = document.querySelector(\"#user-register-last-name-input\") as HTMLInputElement | null;\r\n    let registration_email = document.querySelector(\"#user-register-email-input\") as HTMLInputElement | null;\r\n    let registration_password = document.querySelector(\"#user-register-password-input\") as HTMLInputElement | null;\r\n    let registration_repeat_password = document.querySelector(\"#user-register-password-repeat-input\") as HTMLInputElement | null;\r\n    let registration_submit = document.querySelector(\"#user-register-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    let signin_email = document.querySelector(\"#user-signin-email-input\") as HTMLInputElement | null;\r\n    let signin_password = document.querySelector(\"#user-signin-password-input\") as HTMLInputElement | null;\r\n    let signin_submit = document.querySelector(\"#user-signin-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !registration_first_name ||\r\n        !registration_last_name ||\r\n        !registration_email ||\r\n        !registration_password ||\r\n        !registration_repeat_password ||\r\n        !registration_submit ||\r\n        !signin_email ||\r\n        !signin_password ||\r\n        !signin_submit\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let inputs: UserSigninHtmlInputs = {\r\n        registration: {\r\n            email: registration_email,\r\n            first_name: registration_first_name,\r\n            last_name: registration_last_name,\r\n            password: registration_password,\r\n            repeat_password: registration_repeat_password,\r\n            submit: registration_submit\r\n        },\r\n        signin: {\r\n            email: signin_email,\r\n            password: signin_password,\r\n            submit: signin_submit\r\n        }\r\n    }\r\n\r\n    return inputs\r\n}\r\n\r\n\r\nfunction enable_register_submit_button(is_valid: boolean, reason: string | undefined) {\r\n    let inputs = get_input_fields();\r\n    if (!inputs) {\r\n        throw new Error(\"input fields not initialized\");\r\n    }\r\n\r\n    if (!is_valid) {\r\n        inputs.registration.submit.innerHTML = reason ?? \"invalid registration-data\";\r\n        inputs.registration.submit.classList.toggle(\"bg-green-600\", false);\r\n        inputs.registration.submit.classList.toggle(\"bg-gray-600\", true);\r\n        return;\r\n    }\r\n\r\n    inputs.registration.submit.innerHTML = \"Register\";\r\n    inputs.registration.submit.classList.toggle(\"bg-gray-600\", false);\r\n    inputs.registration.submit.classList.toggle(\"bg-green-600\", true);\r\n}\r\n\r\nfunction validate_registration_inputs(inputs: UserSigninHtmlInputs) {\r\n    let valid: boolean = true;\r\n    let reason: string = \"\";\r\n\r\n    if (inputs.registration.password.value != inputs.registration.repeat_password.value) {\r\n        valid = false;\r\n        reason = \"passwords dont match\";\r\n    }\r\n\r\n    if (!inputs.registration.first_name.value) {\r\n        valid = false;\r\n        reason = \"missing first name\";\r\n    }\r\n\r\n    if (!inputs.registration.email.value) {\r\n        valid = false;\r\n        reason = \"missing email\";\r\n    }\r\n\r\n    if (!inputs.registration.last_name.value) {\r\n        valid = false;\r\n        reason = \"missing last name\";\r\n    }\r\n\r\n    if (!inputs.registration.password.value) {\r\n        valid = false;\r\n        reason = \"missing password\";\r\n    }\r\n\r\n    return {\r\n        valid,\r\n        reason\r\n    };\r\n}\r\n\r\nfunction submit_registration(inputs: UserSigninHtmlInputs) {\r\n    if (!validate_registration_inputs(inputs).valid) {\r\n        throw new Error(\"inputs are not valid\");\r\n    }\r\n\r\n    const register_and_signin = async () => {\r\n        let inputs = get_input_fields();\r\n        if (!inputs) {\r\n            throw new Error(\"input fields not initialized\");\r\n        }\r\n        if (!validate_registration_inputs(inputs).valid) {\r\n            throw new Error(\"inputs are not valid\");\r\n        }\r\n\r\n        let registration_response = await api.register(\r\n            inputs.registration.email.value,\r\n            inputs.registration.password.value,\r\n            inputs.registration.first_name.value,\r\n            inputs.registration.last_name.value\r\n        )\r\n        if (!registration_response.userdata) {\r\n            throw new Error(registration_response.response.message);\r\n        }\r\n\r\n        let login_response = await api.login(\r\n            inputs.registration.email.value,\r\n            inputs.registration.password.value\r\n        );\r\n        if (!login_response.token) {\r\n            throw new Error(login_response.response.message);\r\n        }\r\n\r\n        let userdata: core.UserStorageData = {\r\n            token: login_response.token,\r\n            user: registration_response.userdata,\r\n        }\r\n\r\n        core.save_user_data_to_local(userdata);\r\n        window.location.href = \"/\";\r\n    };\r\n    register_and_signin();\r\n}\r\n\r\nfunction validate_registration_form(inputs: UserSigninHtmlInputs) {\r\n    let { valid, reason } = validate_registration_inputs(inputs);\r\n    enable_register_submit_button(valid, reason);\r\n}\r\n\r\nexport function user_page_main() {\r\n    let inputs = get_input_fields();\r\n    if (!inputs) {\r\n        throw new Error(\"inputs not initialized\");\r\n    }\r\n    // hook up validation for registration form;\r\n    inputs.registration.email.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.first_name.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.last_name.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.password.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.repeat_password.oninput = () => validate_registration_form(inputs);\r\n    // hook up submit\r\n    inputs.registration.submit.onclick = () => submit_registration(inputs);\r\n\r\n    // initial oowoo\r\n    validate_registration_form(inputs);\r\n}\r\n", "import editor_main from \"./editor\";\r\nimport gallery_popup_main from \"./gallery_popup\";\r\nimport gallery_main from \"./gallery\"\r\nimport index_main from \"./index\"\r\nimport view_main from \"./view\"\r\nimport { user_header_main } from \"./user/user_header\";\r\nimport { user_page_main } from \"./user/user_page\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        receive_data: (data: string) => void;\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", (event) => {\r\n    // global init\r\n    user_header_main();\r\n\r\n    // page based init\r\n    switch (window.location.pathname) {\r\n        case \"/editor\":\r\n            editor_main();\r\n            break;\r\n\r\n        case \"/gallery-popup\":\r\n            gallery_popup_main();\r\n            break;\r\n\r\n        case \"/gallery\":\r\n            gallery_main();\r\n            break;\r\n\r\n        case \"/view\":\r\n            view_main();\r\n            break;\r\n\r\n        case \"/signin\":\r\n            user_page_main();\r\n            break;\r\n\r\n        case \"/\":\r\n            index_main();\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n});"],
  "mappings": "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",
  "names": ["CACHE_KEY", "save_cache_to_local", "cache", "load_local_cache", "local", "CACHE_KEY", "cache", "cache_get", "key", "index", "time", "save_cache_to_local", "cache_add", "value", "lifetime", "c", "post_json", "endpoint", "data", "user_data", "get_local_user_data", "post_formdata", "response", "json_response", "get_smallest_res_from_src", "image_id", "min_width", "cached_value", "image_metadata", "min", "resolutions", "res", "a", "b", "instance_id", "r", "target_url", "post_json", "endpoint", "data", "response", "status_code", "json", "login", "email", "password", "token", "logout", "auth_token", "register", "firstname", "lastname", "userdata", "who", "auth_token", "response", "post_json", "userdata", "testing_admin_credentials", "response", "post_json", "admin", "USER_TOKEN_KEY", "USER_DATA_KEY", "get_local_user_data", "token_string", "user_string", "token", "user", "clear_local_user_data", "save_user_data_to_local", "userdata", "data", "get_admin_credenitals", "admin_creds", "testing_admin_credentials", "admin_data", "who", "user_data", "save_user_data_to_local", "LOCAL_ARTICLE_STORAGE_KEY", "load_local_article", "article_string", "article", "save_article_to_local", "article_dump", "init_empty_article", "user_data", "get_local_user_data", "article", "time", "save_article_to_local", "get_controll_buttons", "log_button", "add_paragraph_button", "add_image_button", "add_heading_button", "get_templates", "paragraph_templte", "image_templte", "heading_templte", "get_editor", "set_image_from_gallery_popup", "index", "popup", "data", "load_local_article", "item", "render_editor", "set_image_from_file_upload", "input", "media_item", "input_files", "file", "formdata", "image_id", "post_formdata", "render_image", "entry", "display", "get_smallest_res_from_src", "insert_template_in_editor", "template", "editor", "clone", "editor_connect_paragraph", "textarea", "text_item", "editor_image_connect", "image_item", "alt_text", "image_select_button", "image_upload_button", "editor_connect_generic", "delete_button", "article_delete_item", "move_up_button", "article_move_item", "move_down_button", "y_pos", "templates", "article_add_item", "item_type", "length", "new_item", "move_by", "target", "item_to_move", "main", "controll_buttons", "get_gallery_elements", "image_preview_template", "image_display", "get_all_media", "response", "post_json", "all_media", "a", "b", "m", "main", "html_elements", "target_url_promises", "get_smallest_res_from_src", "entry_promises", "t", "entry", "clone_content", "img", "entries", "e", "get_html_elements", "input_source", "image_preview_template", "image_display", "upload_button", "load_all_media", "html_elements", "response", "post_json", "all_media", "media", "media_promises", "target_url", "get_smallest_res_from_src", "media_with_targets", "a", "b", "upload_files", "input_element", "files", "formdata", "index", "post_formdata", "main", "render_gallery", "entry_promises", "entry", "clone_content", "img_element", "entries", "e", "remove_media_button", "ARTICLE_TEMPLATE", "ARTICLE_DISPLAY", "main", "list_all", "render_articles", "articles", "index", "entry", "render_title", "render_image", "render_image_src", "render_desc", "render_user_id", "entryElement", "all_articles", "post_json", "ARTICLE_DISPLAY", "ARTICLE_TEMPLATE_IMAGE", "ARTICLE_TEMPLATE_TITLE", "ARTICLE_TEMPLATE_METADATA", "ARTICLE_TEMPLATE_DESC", "ARTICLE_TEMPLATE_TEXT", "main", "article_id", "get_article", "render_article", "article", "clone", "entry", "render_title", "render_desc", "render_timestamp", "timestamp", "render_update_timestamp", "update_timestamp", "render_author", "index", "render_image", "render_image_src", "render_text", "post_json", "get_html_elements", "login_template", "profile_template", "details_container", "logout", "userdata", "get_local_user_data", "clear_local_user_data", "user_header_main", "render_user", "elements", "clone", "firstname_element", "lastname_element", "logout_button", "get_admin_credenitals", "get_input_fields", "registration_first_name", "registration_last_name", "registration_email", "registration_password", "registration_repeat_password", "registration_submit", "signin_email", "signin_password", "signin_submit", "enable_register_submit_button", "is_valid", "reason", "inputs", "validate_registration_inputs", "valid", "submit_registration", "registration_response", "register", "login_response", "login", "userdata", "save_user_data_to_local", "validate_registration_form", "user_page_main", "event", "user_header_main", "main", "user_page_main"]
}
