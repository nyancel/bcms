{
  "version": 3,
  "sources": ["../../ts/src/util.ts", "../../ts/src/editor.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["// typing\r\ntype CacheItem = {\r\n    key: string,\r\n    item: string,\r\n    expires_at: number\r\n}\r\n\r\n// globals\r\nlet CACHE: Array<CacheItem> = []; // cache for functions\r\nconst CACHE_KEY = \"C_CACHE_KEY\";\r\n\r\n// internal functions\r\nfunction save_cache_to_localstorage() {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(CACHE));\r\n}\r\n\r\nfunction load_cache_from_localstorage() {\r\n    let local = localStorage.getItem(CACHE_KEY);\r\n    if (!local) {\r\n        return;\r\n    }\r\n    let tmp = JSON.parse(local);\r\n    if (!tmp) {\r\n        return;\r\n    }\r\n    CACHE = JSON.parse(tmp);\r\n}\r\n\r\nfunction cache_get(key: string) {\r\n    // load up the cache\r\n    load_cache_from_localstorage();\r\n\r\n    // remove stale keys\r\n    for (let index = 0; index < CACHE.length; index++) {\r\n        if (CACHE[index].expires_at < time()) {\r\n            CACHE.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // save any changes\r\n    save_cache_to_localstorage();\r\n\r\n    // find the item\r\n    for (let index = 0; index < CACHE.length; index++) {\r\n        if (CACHE[index].key == key) {\r\n            return CACHE[index].item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction cache_add(key: string, value: string) {\r\n    load_cache_from_localstorage();\r\n    let c: CacheItem = {\r\n        key: key,\r\n        item: value,\r\n        expires_at: time() + 3600, // valid for one hour\r\n    };\r\n\r\n    CACHE.push(c);\r\n    console.log(c);\r\n    save_cache_to_localstorage();\r\n}\r\n\r\n// exposed functions\r\nexport function time() {\r\n    let d = new Date();\r\n    let current_time = d.getTime() / 1000;\r\n    return current_time;\r\n}\r\n\r\n\r\nexport async function fetch_json(endpoint: string, data: Object) {\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    let response_json = await response.json();\r\n    return response_json;\r\n}\r\n\r\nexport async function fetch_formdata(endpoint: string, data: FormData) {\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        body: data,\r\n    });\r\n\r\n    let json_response = await response.json();\r\n    return json_response;\r\n}\r\n\r\nexport async function get_smallest_res_from_src(image_id: string, min_width: number) {\r\n    // check the cache first\r\n    let key = `util_get_media_src_by_width${image_id}${min_width}`;\r\n    let cached_value = cache_get(key);\r\n    if (cached_value) {\r\n        console.log(\"cache hit\");\r\n        return cached_value;\r\n    }\r\n\r\n    let image_metadata = await fetch_json(\"/media/fetch_media\", {\r\n        media_ID: image_id,\r\n    });\r\n\r\n    let min = Math.pow(min_width, 2);\r\n\r\n    let resolutions = await Promise.all(\r\n        image_metadata.instances.map((res: { instance_id: string, x_dimension: number, y_dimension: number }) => {\r\n            return {\r\n                id: res.instance_id,\r\n                resolution: res.x_dimension * res.y_dimension,\r\n            };\r\n        })\r\n    );\r\n\r\n    // by default pick the highest res, then loop over and select the lowest\r\n    // res that is acceptable for the display.\r\n    resolutions = resolutions.sort((a, b) => a.resolution - b.resolution);\r\n    let instance_id = resolutions[resolutions.length - 1].id;\r\n    for (let r of resolutions) {\r\n        if (r.resolution > min) {\r\n            instance_id = r.id;\r\n            break; // break once the first image res satisfies our condition\r\n        }\r\n    }\r\n\r\n    // format target url\r\n    let target_url = `/media/fetch_media_instance?instance_ID=${instance_id}`;\r\n    // populate cache before returning\r\n    cache_add(key, target_url);\r\n    return target_url;\r\n}", "import { time } from \"./util\";\r\n\r\n// types and declerations\r\ndeclare global {\r\n    interface Window {\r\n        receive_data: (data: string) => void;\r\n    }\r\n}\r\n\r\nenum ItemTypeEnum {\r\n    paragraph,\r\n    image,\r\n    heading\r\n}\r\n\r\ntype TextItem = {\r\n    type: ItemTypeEnum.heading | ItemTypeEnum.paragraph,\r\n    text: string,\r\n    index: number,\r\n}\r\n\r\ntype MediaItem = {\r\n    type: ItemTypeEnum.image,\r\n    alt_text: string,\r\n    src_id: string | undefined,\r\n    index: number,\r\n}\r\n\r\ntype Article = {\r\n    id: undefined | number,\r\n    author_id: undefined | number;\r\n    last_changed: undefined | number;\r\n    content: Array<TextItem | MediaItem> | undefined;\r\n}\r\n\r\n// global constants\r\nconst ARTICLE: Article = {\r\n    id: undefined,\r\n    author_id: undefined,\r\n    last_changed: undefined,\r\n    content: [],\r\n};\r\n\r\nconst TEMPLATES = {\r\n    paragraph: document.getElementById(\"article-paragraph-template\"),\r\n    image: document.getElementById(\"article-paragraph-template\"),\r\n    heading: document.getElementById(\"article-heading-template\"),\r\n}\r\n\r\nconst EDITOR = document.getElementById(\"editor-container\");\r\n\r\n\r\n// editor image functions\r\nfunction editor_gallery_pop_up_select(index: number) {\r\n    const popup = window.open(\r\n        \"/gallery-popup\",\r\n        \"popupWindow\",\r\n        \"width=600,height=400\"\r\n    );\r\n\r\n    window.receive_data = function (data: string) {\r\n        if (!ARTICLE.content) {\r\n            return;\r\n        }\r\n\r\n        let item = ARTICLE.content[index];\r\n        if (item.type != ItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        item.src_id = data;\r\n        editor_generate_preview();\r\n    };\r\n}\r\n\r\nfunction editor_image_upload(index: number) {\r\n    // select a file\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"png, jpg, jpeg\";\r\n    input.multiple = false;\r\n    input.onchange = async () => {\r\n        if (!ARTICLE.content) {\r\n            return;\r\n        }\r\n        let media_item = ARTICLE.content[index];\r\n        if (media_item.type != ItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        // retrieve the selected file\r\n        let input_files = input.files;\r\n        if (!input_files) {\r\n            return;\r\n        }\r\n        let files = Array.from(input_files);\r\n        let file = files[0];\r\n        input.remove();\r\n\r\n        // upload the file to the gallery\r\n        let formdata = new FormData();\r\n        formdata.append(\"media\", file);\r\n        let image = await util_fetch_post_formdata(\"/media/upload_media\", formdata);\r\n        let image_id = image.data.results[0].key;\r\n        // set the item source\r\n        media_item.src_id = image_id;\r\n        ARTICLE.last_changed = time();\r\n        editor_generate_preview();\r\n    };\r\n    input.click();\r\n}\r\n\r\nfunction editor_image_render(entry: HTMLElement, index: number) {\r\n    let display = entry.querySelector(\".image-display\") as HTMLImageElement;\r\n    if (!display) {\r\n        throw new Error(\"media-display not found\");\r\n    }\r\n\r\n    if (!ARTICLE.content) {\r\n        throw new Error(\"article content not initialized\");\r\n    }\r\n\r\n    let media_item = ARTICLE.content[index];\r\n    if (media_item.type != ItemTypeEnum.image) {\r\n        throw new Error(\"item type is not image\");\r\n    }\r\n\r\n    // if src_id is undefined we have not yet chosen an image.\r\n    if (!media_item.src_id) {\r\n        display.classList.toggle(\"hidden\", true);\r\n        return;\r\n    }\r\n\r\n    // else image_id is defined and we render the image\r\n    const load = async () => {\r\n        if (!ARTICLE.content) {\r\n            throw new Error(\"article content not initialized\");\r\n        }\r\n        let media_item = ARTICLE.content[index];\r\n        if (media_item.type != ItemTypeEnum.image) {\r\n            throw new Error(\"item type is not image\");\r\n        }\r\n        display.src = await util_get_media_src_by_width(\r\n            media_item.src_id,\r\n            entry.clientWidth\r\n        );\r\n        display.classList.toggle(\"hidden\", false);\r\n    };\r\n    load();\r\n}\r\n\r\nfunction editor_insert_template(template: HTMLTemplateElement) {\r\n    if (!EDITOR) {\r\n        throw new Error(\"Editor has not been initalized\");\r\n    }\r\n\r\n    let entry = document.createElement(\"li\");\r\n    let clone = template.cloneNode(true) as HTMLTemplateElement;\r\n    let item = clone.content;\r\n\r\n    entry.appendChild(item);\r\n    EDITOR.appendChild(entry);\r\n    return entry;\r\n}\r\n\r\nfunction editor_connect_paragraph(entry, index) {\r\n    let textarea = entry.querySelector(\".paragraph-input\");\r\n    textarea.value = C_EDITOR_ARTICLE.content[index].text;\r\n    textarea.onchange = () => {\r\n        C_EDITOR_ARTICLE.content[index].text = textarea.value;\r\n    };\r\n}\r\n\r\nfunction editor_image_connect(entry, index) {\r\n    // connect the alt-text and its relevant update\r\n    let alt_text = entry.querySelector(\".image-alt-text-input\");\r\n    if (C_EDITOR_ARTICLE.content[index].alt_text) {\r\n        alt_text.value = C_EDITOR_ARTICLE.content[index].alt_text;\r\n    }\r\n    alt_text.onchange = () => {\r\n        C_EDITOR_ARTICLE.content[index].alt_text = alt_text.value;\r\n    };\r\n\r\n    // connect the upload buttons\r\n    let image_select_button = entry.querySelector(\".image-gallery-select\");\r\n    let image_upload_button = entry.querySelector(\".image-gallery-upload\");\r\n\r\n    image_upload_button.onclick = () => editor_image_upload(index);\r\n    image_select_button.onclick = () => editor_gallery_pop_up_select(index);\r\n}\r\n\r\nfunction editor_connect_generic(entry, index) {\r\n    // generic delete\r\n    let delete_button = entry.querySelector(\".delete-button\");\r\n    delete_button.onclick = () => {\r\n        remove_item_from_article(index);\r\n        editor_generate_preview();\r\n    };\r\n\r\n    // generic move up\r\n    let move_up_button = entry.querySelector(\".move-up-button\");\r\n    move_up_button.onclick = () => {\r\n        editor_move_item_up(index);\r\n        editor_generate_preview();\r\n    };\r\n\r\n    // generic move down\r\n    let move_down_button = entry.querySelector(\".move-down-button\");\r\n    move_down_button.onclick = () => {\r\n        editor_move_item_down(index);\r\n        editor_generate_preview();\r\n    };\r\n}\r\n\r\n// view functions\r\nfunction editor_generate_preview() {\r\n    let y_pos = window.scrollY;\r\n\r\n    C_EDITOR_CONTAINER.innerHTML = null;\r\n    let entry;\r\n\r\n    for (let index = 0; index < C_EDITOR_ARTICLE.content.length; index++) {\r\n        switch (C_EDITOR_ARTICLE.content[index].type) {\r\n            case \"paragraph\":\r\n                entry = editor_insert_template(C_EDITOR_PARAGRAPH_TEMPLATE);\r\n                editor_connect_paragraph(entry, index);\r\n                break;\r\n\r\n            case \"image\":\r\n                entry = editor_insert_template(C_EDITOR_IMAGE_TEMPLATE);\r\n                editor_image_render(entry, index);\r\n                editor_image_connect(entry, index);\r\n                break;\r\n\r\n            case \"heading\":\r\n                entry = editor_insert_template(C_EDITOR_HEADING_TEMPLATE);\r\n                editor_heading_connect(entry, index); // TODO fix the editor heading connector\r\n                break;\r\n\r\n            // skip to next item if we dont have a template for the type\r\n            default:\r\n                console.log(\"skipping, unkown type\");\r\n                console.log(C_EDITOR_ARTICLE.content[index]);\r\n                continue;\r\n        }\r\n        editor_connect_generic(entry, index);\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n        window.scrollTo(0, y_pos);\r\n    });\r\n}\r\n\r\n// article functions\r\nfunction editor_add_item(item_type: ItemTypeEnum) {\r\n\r\n    if (!ARTICLE.content) {\r\n        ARTICLE.content = [];\r\n    }\r\n\r\n    let length = ARTICLE.content.length;\r\n    let new_item: TextItem | MediaItem;\r\n\r\n    switch (item_type) {\r\n        case ItemTypeEnum.paragraph:\r\n        case ItemTypeEnum.heading:\r\n            new_item = {\r\n                type: item_type,\r\n                text: \"\",\r\n                index: length\r\n            }\r\n            break;\r\n        case ItemTypeEnum.image:\r\n            new_item = {\r\n                type: item_type,\r\n                alt_text: \"\",\r\n                index: length,\r\n                src_id: undefined,\r\n            }\r\n            break;\r\n    }\r\n\r\n    ARTICLE.content.push(new_item);\r\n    ARTICLE.last_changed = time();\r\n    editor_generate_preview();\r\n}\r\n\r\nfunction remove_item_from_article(index: number) {\r\n    ARTICLE.content?.splice(index, 1);\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_move_item_down(index_to_change: number) {\r\n    if (!ARTICLE.content) {\r\n        return;\r\n    }\r\n\r\n    if (index_to_change >= ARTICLE.content.length - 1) {\r\n        return;\r\n    }\r\n\r\n    let item = ARTICLE.content[index_to_change];\r\n    ARTICLE.content[index_to_change] = ARTICLE.content[index_to_change + 1];\r\n    ARTICLE.content[index_to_change + 1] = item;\r\n    // assign new indexes\r\n    ARTICLE.content[index_to_change].index = index_to_change;\r\n    ARTICLE.content[index_to_change + 1].index = index_to_change + 1;\r\n\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_move_item_up(index_to_change: number) {\r\n    if (!ARTICLE.content) {\r\n        return;\r\n    }\r\n\r\n    if (index_to_change < 1) {\r\n        return;\r\n    }\r\n    let item = ARTICLE.content[index_to_change];\r\n    ARTICLE.content[index_to_change] = ARTICLE.content[index_to_change - 1];\r\n    ARTICLE.content[index_to_change - 1] = item;\r\n    // assign new indexes\r\n    ARTICLE.content[index_to_change].index = index_to_change;\r\n    ARTICLE.content[index_to_change - 1].index = index_to_change - 1;\r\n\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_log_article() {\r\n    console.log(ARTICLE.content);\r\n}\r\n\r\nexport default function main() {\r\n    let log_button = document.getElementById(\"log-article\");\r\n    if (log_button) {\r\n        log_button.onclick = () => editor_log_article();\r\n    }\r\n\r\n    let add_paragraph_button = document.getElementById(\"add-paragraph\");\r\n    if (add_paragraph_button) {\r\n        add_paragraph_button.onclick = () => editor_add_item(ItemTypeEnum.paragraph);\r\n    }\r\n\r\n    let add_image_button = document.getElementById(\"add-image\");\r\n    if (add_image_button) {\r\n        add_image_button.onclick = () => editor_add_item(ItemTypeEnum.image);\r\n    }\r\n\r\n    let add_heading_button = document.getElementById(\"add-heading\");\r\n    if (add_heading_button) {\r\n        add_heading_button.onclick = () => editor_add_item(ItemTypeEnum.heading);\r\n    }\r\n}", "import editor_main from \"./editor\";\r\n\r\nwindow.addEventListener(\"load\", (event) => {\r\n    editor_main();\r\n});"],
  "mappings": "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",
  "names": ["time", "ARTICLE", "TEMPLATES", "EDITOR", "editor_gallery_pop_up_select", "index", "popup", "data", "item", "editor_generate_preview", "editor_image_upload", "input", "media_item", "input_files", "file", "formdata", "image_id", "time", "editor_image_render", "entry", "display", "editor_insert_template", "template", "editor_connect_paragraph", "textarea", "editor_image_connect", "alt_text", "image_select_button", "image_upload_button", "editor_connect_generic", "delete_button", "remove_item_from_article", "move_up_button", "editor_move_item_up", "move_down_button", "editor_move_item_down", "y_pos", "editor_add_item", "item_type", "length", "new_item", "index_to_change", "editor_log_article", "main", "log_button", "add_paragraph_button", "add_image_button", "add_heading_button", "event", "main"]
}
