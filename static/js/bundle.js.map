{
  "version": 3,
  "sources": ["../../ts/src/util.ts", "../../ts/src/user.ts", "../../ts/src/editor.ts", "../../ts/src/gallery_popup.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["import { get_local_user_data } from \"./user\";\r\n\r\n// globals\r\nconst CACHE_KEY = \"utilts-cache-stroage-key\";\r\n\r\n// internal functions\r\nfunction save_cache_to_local(cache: UtilCacheItem[]) {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(cache));\r\n}\r\n\r\nfunction load_local_cache() {\r\n    let local = localStorage.getItem(CACHE_KEY);\r\n    if (!local) {\r\n        return null;\r\n    }\r\n    let cache = JSON.parse(local) as UtilCacheItem[];\r\n    if (!cache) {\r\n        throw new Error(\"cache cant be parsed\");\r\n    }\r\n    return cache\r\n}\r\n\r\nfunction cache_get(key: string) {\r\n    // load up the cache\r\n    let cache = load_local_cache();\r\n    if (!cache) {\r\n        return null; // cache might not exist\r\n    }\r\n\r\n    // remove stale keys\r\n    for (let index = 0; index < cache.length; index++) {\r\n        if (cache[index].expires_at < time()) {\r\n            cache.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // save any changes\r\n    save_cache_to_local(cache);\r\n\r\n    // find the item\r\n    for (let index = 0; index < cache.length; index++) {\r\n        if (cache[index].key == key) {\r\n            return cache[index].item;\r\n        }\r\n    }\r\n\r\n    // if no match, return the item\r\n    return null;\r\n}\r\n\r\nfunction cache_add(key: string, value: string, lifetime: number = 3600) {\r\n    let cache = load_local_cache();\r\n    if (!cache) {\r\n        cache = [];\r\n    }\r\n\r\n    let c: UtilCacheItem = {\r\n        key: key,\r\n        item: value,\r\n        expires_at: time() + lifetime, // valid for one hour\r\n    };\r\n\r\n    cache.push(c);\r\n    console.log(c);\r\n    save_cache_to_local(cache);\r\n}\r\n\r\n\r\nexport function time() {\r\n    let d = new Date();\r\n    let current_time = d.getTime() / 1000;\r\n    return current_time;\r\n}\r\n\r\n\r\nexport async function post_json(endpoint: string, data: any) {\r\n    let user_data = get_local_user_data();\r\n    if (user_data) {\r\n        data.auth_token = user_data.token.id;\r\n    }\r\n\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    let response_json = await response.json();\r\n    return response_json;\r\n}\r\n\r\nexport async function post_formdata(endpoint: string, data: FormData) {\r\n    // add our token if we have one\r\n    let user_data = get_local_user_data();\r\n    if (user_data) {\r\n        data.append(\"auth_token\", user_data?.token.id);\r\n    }\r\n\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        body: data,\r\n    });\r\n    console.log(response)\r\n\r\n    let json_response = await response.json();\r\n    console.log(json_response);\r\n    return json_response;\r\n}\r\n\r\nexport async function get_smallest_res_from_src(image_id: string, min_width: number) {\r\n    console.log(\"getting smallest item from res\")\r\n    // check the cache first\r\n    let key = `util_get_media_src_by_width-${image_id}-${min_width}`;\r\n    let cached_value = cache_get(key);\r\n    if (cached_value) {\r\n        return cached_value;\r\n    }\r\n\r\n    let image_metadata = await post_json(\"/media/fetch_media\", {\r\n        media_ID: image_id,\r\n    });\r\n\r\n\r\n    let min = Math.pow(min_width, 2);\r\n\r\n    let resolutions = await Promise.all(\r\n        image_metadata.instances.map((res: { instance_id: string, x_dimension: number, y_dimension: number }) => {\r\n            return {\r\n                id: res.instance_id,\r\n                resolution: res.x_dimension * res.y_dimension,\r\n            };\r\n        })\r\n    );\r\n\r\n    // by default pick the highest res, then loop over and select the lowest\r\n    // res that is acceptable for the display.\r\n    resolutions = resolutions.sort((a, b) => a.resolution - b.resolution);\r\n    let instance_id = resolutions[resolutions.length - 1].id;\r\n    for (let r of resolutions) {\r\n        if (r.resolution > min) {\r\n            instance_id = r.id;\r\n            break; // break once the first image res satisfies our condition\r\n        }\r\n    }\r\n\r\n    // format target url\r\n    let target_url = `/media/fetch_media_instance?instance_ID=${instance_id}`;\r\n    // populate cache before returning\r\n    cache_add(key, target_url);\r\n    return target_url;\r\n}", "import { post_json, time } from \"./util\";\r\n\r\n\r\n\r\n// global constants\r\nconst USER_LOCAL_TOKEN_STORAGE_KEY = \"userts-local-user-token\";\r\nconst USER_LOCAL_DATA_STORAGE_KEY = \"userts-local-user-data\";\r\n\r\n// core functions\r\nexport function get_local_user_data() {\r\n    let token_string = localStorage.getItem(USER_LOCAL_TOKEN_STORAGE_KEY);\r\n    let user_string = localStorage.getItem(USER_LOCAL_DATA_STORAGE_KEY)\r\n    if (!token_string || !user_string) {\r\n        return null;\r\n    }\r\n\r\n    let token = JSON.parse(token_string);\r\n    let user = JSON.parse(user_string);\r\n    if (!token || !user) {\r\n        return null;\r\n    }\r\n\r\n    let userData: UserData = {\r\n        token: token,\r\n        user: user\r\n    }\r\n    return userData;\r\n}\r\n\r\nfunction clear_local_user_data() {\r\n    localStorage.removeItem(USER_LOCAL_DATA_STORAGE_KEY);\r\n    localStorage.removeItem(USER_LOCAL_TOKEN_STORAGE_KEY);\r\n}\r\n\r\nfunction save_user_data_to_local(userdata: UserData) {\r\n    let token = JSON.stringify(userdata.token);\r\n    let data = JSON.stringify(userdata.user);\r\n    localStorage.setItem(USER_LOCAL_TOKEN_STORAGE_KEY, token);\r\n    localStorage.setItem(USER_LOCAL_DATA_STORAGE_KEY, data);\r\n    return true;\r\n}\r\n\r\nfunction get_html_elements() {\r\n    let login_template = document.querySelector(\".user-details-login-template\") as HTMLTemplateElement | null;\r\n    let profile_template = document.querySelector(\".user-details-profile-template\") as HTMLTemplateElement | null;\r\n    let details_container = document.querySelector(\".user-details-container\") as HTMLElement | null;\r\n\r\n    if (\r\n        !login_template ||\r\n        !profile_template ||\r\n        !details_container\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let elements: UserHtmlElements = {\r\n        login_template: login_template,\r\n        profile_template: profile_template,\r\n        details_container: details_container,\r\n    }\r\n    return elements;\r\n}\r\n\r\nfunction get_input_fields() {\r\n    let registration_first_name = document.querySelector(\"#user-register-first-name-input\") as HTMLInputElement | null;\r\n    let registration_last_name = document.querySelector(\"#user-register-last-name-input\") as HTMLInputElement | null;\r\n    let registration_email = document.querySelector(\"#user-register-email-input\") as HTMLInputElement | null;\r\n    let registration_password = document.querySelector(\"#user-register-password-input\") as HTMLInputElement | null;\r\n    let registration_repeat_password = document.querySelector(\"#user-register-password-repeat-input\") as HTMLInputElement | null;\r\n    let registration_submit = document.querySelector(\"#user-register-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    let signin_email = document.querySelector(\"#user-signin-email-input\") as HTMLInputElement | null;\r\n    let signin_password = document.querySelector(\"#user-signin-password-input\") as HTMLInputElement | null;\r\n    let signin_submit = document.querySelector(\"#user-signin-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !registration_first_name ||\r\n        !registration_last_name ||\r\n        !registration_email ||\r\n        !registration_password ||\r\n        !registration_repeat_password ||\r\n        !registration_submit ||\r\n        !signin_email ||\r\n        !signin_password ||\r\n        !signin_submit\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let inputs: UserSigninHtmlInputs = {\r\n        registration: {\r\n            email: registration_email,\r\n            first_name: registration_first_name,\r\n            last_name: registration_last_name,\r\n            password: registration_password,\r\n            repeat_password: registration_repeat_password,\r\n            submit: registration_submit\r\n        },\r\n        signin: {\r\n            email: signin_email,\r\n            password: signin_password,\r\n            submit: signin_submit\r\n        }\r\n    }\r\n\r\n    return inputs\r\n}\r\n\r\n// api coms functions - stuff that talks to the server\r\nfunction logout() {\r\n    let userdata = get_local_user_data();\r\n    if (!userdata) {\r\n        throw new Error(\"No local user-data\");\r\n    }\r\n\r\n    // tell the server to clear the token, the clear local data;\r\n    post_json(\"/user/logout\", { user_token: userdata.token.id });\r\n    clear_local_user_data();\r\n\r\n    // reload the user state etc.\r\n    main();\r\n}\r\n\r\nfunction render_user() {\r\n    let elements = get_html_elements();\r\n    if (!elements) {\r\n        throw new Error(\"could not load html elements\");\r\n    }\r\n\r\n    elements.details_container.innerHTML = \"\";\r\n\r\n    let userdata = get_local_user_data();\r\n    if (!userdata) {\r\n        let clone = elements.login_template.cloneNode(true) as HTMLTemplateElement;\r\n        elements.details_container.appendChild(clone.content);\r\n        return;\r\n    }\r\n\r\n    let clone = elements.profile_template.cloneNode(true) as HTMLTemplateElement;\r\n    let profile_template = clone.content;\r\n    let firstname_element = profile_template.querySelector(\"#user-profile-first-name\") as HTMLElement | null;\r\n    if (!firstname_element) {\r\n        throw new Error(\"fistname_element not found\");\r\n    }\r\n    firstname_element.innerHTML = userdata.user.first_name;\r\n\r\n    let lastname_element = profile_template.querySelector(\"#user-profile-last-name\") as HTMLElement | null;\r\n    if (!lastname_element) {\r\n        throw new Error(\"lastname_element not found\");\r\n    }\r\n    lastname_element.innerHTML = userdata.user.last_name;\r\n\r\n    let logout_button = profile_template.querySelector(\"#user-profile-logout-button\") as HTMLElement | null;\r\n    if (!logout_button) {\r\n        throw new Error(\"logout_button not found\");\r\n    }\r\n    logout_button.onclick = () => {\r\n        logout();\r\n    };\r\n\r\n    elements.details_container.appendChild(profile_template);\r\n    return;\r\n}\r\n\r\nfunction enable_register_submit_button(is_valid: boolean, reason: string | undefined) {\r\n    let inputs = get_input_fields();\r\n    if (!inputs) {\r\n        throw new Error(\"input fields not initialized\");\r\n    }\r\n\r\n    if (!is_valid) {\r\n        inputs.registration.submit.innerHTML = reason ?? \"invalid registration-data\";\r\n        inputs.registration.submit.classList.toggle(\"bg-green-600\", false);\r\n        inputs.registration.submit.classList.toggle(\"bg-gray-600\", true);\r\n        return;\r\n    }\r\n\r\n    inputs.registration.submit.innerHTML = \"Register\";\r\n    inputs.registration.submit.classList.toggle(\"bg-gray-600\", false);\r\n    inputs.registration.submit.classList.toggle(\"bg-green-600\", true);\r\n}\r\n\r\nfunction validate_registration_inputs(inputs: UserSigninHtmlInputs) {\r\n    let valid: boolean = true;\r\n    let reason: string = \"\";\r\n\r\n    if (inputs.registration.password.value != inputs.registration.repeat_password.value) {\r\n        valid = false;\r\n        reason = \"passwords dont match\";\r\n    }\r\n\r\n    if (!inputs.registration.first_name.value) {\r\n        valid = false;\r\n        reason = \"missing first name\";\r\n    }\r\n\r\n    if (!inputs.registration.email.value) {\r\n        valid = false;\r\n        reason = \"missing email\";\r\n    }\r\n\r\n    if (!inputs.registration.last_name.value) {\r\n        valid = false;\r\n        reason = \"missing last name\";\r\n    }\r\n\r\n    if (!inputs.registration.password.value) {\r\n        valid = false;\r\n        reason = \"missing password\";\r\n    }\r\n\r\n    return {\r\n        valid,\r\n        reason\r\n    };\r\n}\r\n\r\nfunction submit_registration(inputs: UserSigninHtmlInputs) {\r\n    if (!validate_registration_inputs(inputs).valid) {\r\n        throw new Error(\"inputs are not valid\");\r\n    }\r\n\r\n    const register_and_signin = async () => {\r\n        let inputs = get_input_fields();\r\n        if (!inputs) {\r\n            throw new Error(\"input fields not initialized\");\r\n        }\r\n        if (!validate_registration_inputs(inputs).valid) {\r\n            throw new Error(\"inputs are not valid\");\r\n        }\r\n        const register_data = {\r\n            email: inputs.registration.email.value,\r\n            password: inputs.registration.password.value,\r\n            firstname: inputs.registration.first_name.value,\r\n            lastname: inputs.registration.last_name.value,\r\n        };\r\n\r\n        let register_response = await post_json(\"/user/register_new_user\", register_data)\r\n        if (register_response.error) {\r\n            throw new Error(register_response.error);\r\n        }\r\n\r\n        let login_data = {\r\n            email: register_data.email,\r\n            password: register_data.password,\r\n        };\r\n\r\n        let login_response = await post_json(\"/user/login\", login_data);\r\n        if (login_response.error) {\r\n            throw new Error(login_response.error);\r\n        }\r\n\r\n        let token = login_response;\r\n        let user = register_response;\r\n\r\n        let user_data: UserData = {\r\n            user,\r\n            token\r\n        }\r\n        save_user_data_to_local(user_data);\r\n        window.location.href = \"/\";\r\n    };\r\n    register_and_signin();\r\n}\r\n\r\nfunction validate_registration_form(inputs: UserSigninHtmlInputs) {\r\n    let { valid, reason } = validate_registration_inputs(inputs);\r\n    enable_register_submit_button(valid, reason);\r\n}\r\n\r\nfunction registration_init() {\r\n    let inputs = get_input_fields();\r\n    if (!inputs) {\r\n        throw new Error(\"inputs not initialized\");\r\n    }\r\n    // hook up validation for registration form;\r\n    inputs.registration.email.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.first_name.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.last_name.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.password.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.repeat_password.oninput = () => validate_registration_form(inputs);\r\n    inputs.registration.submit.onclick = () => submit_registration(inputs);\r\n    validate_registration_form(inputs);\r\n}\r\n\r\nasync function user_revalidate_token() {\r\n    let user_data = get_local_user_data();\r\n    if (!user_data) {\r\n        return null;\r\n    }\r\n\r\n    if (time() > user_data.token.expires_at) {\r\n        // token expired, re-render after clearing local data\r\n        clear_local_user_data();\r\n        main();\r\n        return;\r\n    }\r\n\r\n    // refresh if less then 10 minutes left of the token\r\n    if ((time() + 600) > user_data.token.expires_at) {\r\n        let new_token_response = await post_json(\"/user/refresh_token\", {\r\n            user_token: user_data.token.id,\r\n        });\r\n        if (new_token_response.error) {\r\n            throw new Error(new_token_response.error)\r\n        }\r\n        user_data.token = new_token_response;\r\n        save_user_data_to_local(user_data);\r\n    }\r\n\r\n    // validate the current user token\r\n    let validation_response = await post_json(\"/user/who\", {\r\n        user_token: user_data.token.id\r\n    });\r\n\r\n    if (validation_response.error) {\r\n        if (validation_response.error === \"token invalid\") {\r\n            // token invalid, re-render after clearing local data\r\n            clear_local_user_data();\r\n            main();\r\n            return;\r\n        }\r\n        else {\r\n            throw new Error(validation_response.error)\r\n        }\r\n    }\r\n\r\n    user_data.user = validation_response;\r\n    save_user_data_to_local(user_data);\r\n}\r\n\r\nasync function connect_admin_test_button() {\r\n    let admin_creds = await post_json(\"/user/admin_test_creds\", {}) as UserAuthToken;\r\n    let admin_data = await post_json(\"/user/who\", { user_token: admin_creds.id }) as User;\r\n    let user_data: UserData = {\r\n        token: admin_creds,\r\n        user: admin_data,\r\n    }\r\n    save_user_data_to_local(user_data);\r\n}\r\n\r\nexport default function main() {\r\n    // just for local testing\r\n    connect_admin_test_button();\r\n\r\n    // user_revalidate_token();\r\n    render_user();\r\n\r\n    // if signing call the other init as well for diff html dom stuff\r\n    if (window.location.pathname === \"/signin\") {\r\n        registration_init();\r\n    }\r\n}\r\n", "import { get_local_user_data } from \"./user\";\r\nimport { time, post_formdata, get_smallest_res_from_src } from \"./util\";\r\n\r\n// constant values\r\nconst LOCAL_ARTICLE_STORAGE_KEY = \"editor-ts-local-article\";\r\n\r\n// internal storage functions\r\nfunction load_local_article() {\r\n    let article_string = localStorage.getItem(LOCAL_ARTICLE_STORAGE_KEY);\r\n    if (!article_string) {\r\n        return null;\r\n    }\r\n\r\n    let article: ArticleData = JSON.parse(article_string);\r\n    if (!article) {\r\n        throw new Error(\"could not parse the local article, you fucked up somehow\");\r\n    }\r\n    return article;\r\n}\r\n\r\nfunction save_article_to_local(article: ArticleData) {\r\n    let article_dump = JSON.stringify(article);\r\n    localStorage.setItem(LOCAL_ARTICLE_STORAGE_KEY, article_dump);\r\n}\r\n\r\nfunction clear_local_article() {\r\n    localStorage.removeItem(LOCAL_ARTICLE_STORAGE_KEY);\r\n}\r\n\r\n// internal init functions;\r\nfunction init_empty_article() {\r\n    let user_data = get_local_user_data();\r\n    if (!user_data) {\r\n        throw new Error(\"no user data found, not logged in\");\r\n    }\r\n\r\n    let article: ArticleData = {\r\n        author_id: user_data.user.id,\r\n        content: [],\r\n        description: \"\",\r\n        last_changed: time(),\r\n        id: undefined,\r\n        title: \"\",\r\n    };\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\nfunction get_controll_buttons() {\r\n    let log_button = document.getElementById(\"log-article\") as HTMLButtonElement | null;\r\n    let add_paragraph_button = document.getElementById(\"add-paragraph\") as HTMLButtonElement | null;\r\n    let add_image_button = document.getElementById(\"add-image\") as HTMLButtonElement | null;\r\n    let add_heading_button = document.getElementById(\"add-heading\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !log_button ||\r\n        !add_paragraph_button ||\r\n        !add_image_button ||\r\n        !add_heading_button\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let controll_buttons: ArticleEditorControllButtons = {\r\n        log_button,\r\n        add_paragraph_button,\r\n        add_image_button,\r\n        add_heading_button\r\n    }\r\n\r\n    return controll_buttons;\r\n}\r\n\r\nfunction get_templates() {\r\n    let paragraph_templte = document.getElementById(\"article-paragraph-template\") as HTMLTemplateElement | null;\r\n    let image_templte = document.getElementById(\"article-image-template\") as HTMLTemplateElement | null;\r\n    let heading_templte = document.getElementById(\"article-heading-template\") as HTMLTemplateElement | null;\r\n\r\n    if (\r\n        !paragraph_templte ||\r\n        !image_templte ||\r\n        !heading_templte\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let templates: ArticleHtmlTemplates = {\r\n        paragraph: paragraph_templte,\r\n        image: image_templte,\r\n        heading: heading_templte,\r\n    }\r\n\r\n    return templates;\r\n}\r\n\r\nfunction get_editor() {\r\n    return document.getElementById(\"editor-container\") as HTMLElement | null;\r\n}\r\n\r\n\r\n// editor image functions\r\nfunction set_image_from_gallery_popup(index: number) {\r\n    const popup = window.open(\r\n        \"/gallery-popup\",\r\n        \"popupWindow\",\r\n        \"width=600,height=400\"\r\n    );\r\n\r\n    window.receive_data = function (data: string) {\r\n        console.log(data);\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load artilce\");\r\n        }\r\n\r\n        let item = article.content[index];\r\n        if (item.type != ArticleItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        item.src_id = data;\r\n        save_article_to_local(article);\r\n        render_editor();\r\n    };\r\n}\r\n\r\nfunction set_image_from_file_upload(index: number) {\r\n    // select a file\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"png, jpg, jpeg\";\r\n    input.multiple = false;\r\n    input.onchange = async () => {\r\n\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load artilce\");\r\n        }\r\n\r\n        let media_item = article.content[index];\r\n        if (media_item.type != ArticleItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        // retrieve the selected file\r\n        let input_files = input.files;\r\n        if (!input_files) {\r\n            return;\r\n        }\r\n        let files = Array.from(input_files);\r\n        let file = files[0];\r\n        input.remove();\r\n\r\n        // upload the file to the gallery\r\n        let formdata = new FormData();\r\n        formdata.append(\"media\", file);\r\n        let image = await post_formdata(\"/media/upload_media\", formdata);\r\n        let image_id = image.data.results[0].key;\r\n        // set the item source\r\n        media_item.src_id = image_id;\r\n        article.last_changed = time();\r\n        save_article_to_local(article);\r\n        render_editor();\r\n\r\n    };\r\n    input.click();\r\n}\r\n\r\nfunction render_image(entry: HTMLElement, index: number, article: ArticleData) {\r\n    let display = entry.querySelector(\".image-display\") as HTMLImageElement | null;\r\n    if (!display) {\r\n        throw new Error(\"media-display not found\");\r\n    }\r\n\r\n    let media_item = article.content[index];\r\n    if (media_item.type != ArticleItemTypeEnum.image) {\r\n        throw new Error(\"item type is not image\");\r\n    }\r\n\r\n    // if src_id is undefined we have not yet chosen an image.\r\n    if (!media_item.src_id) {\r\n        display.classList.toggle(\"hidden\", true);\r\n        return;\r\n    }\r\n\r\n    // else image_id is defined and we render the image\r\n    const load = async () => {\r\n        let media_item = article.content[index];\r\n        if (media_item.type != ArticleItemTypeEnum.image) {\r\n            throw new Error(\"item type is not image\");\r\n        }\r\n        if (!media_item.src_id) {\r\n            throw new Error(\"src_id not found\");\r\n        }\r\n        display.src = await get_smallest_res_from_src(\r\n            media_item.src_id,\r\n            entry.clientWidth\r\n        );\r\n        display.classList.toggle(\"hidden\", false);\r\n    };\r\n    load();\r\n}\r\n\r\nfunction insert_template_in_editor(template: HTMLTemplateElement, editor: HTMLElement) {\r\n    console.log(template);\r\n\r\n    let entry = document.createElement(\"li\");\r\n    let clone = template.cloneNode(true) as HTMLTemplateElement | null;\r\n    if (!clone) {\r\n        throw new Error(\"could not clone template\");\r\n    }\r\n    let item = clone.content;\r\n\r\n    entry.appendChild(item);\r\n    editor.appendChild(entry);\r\n    return entry;\r\n}\r\n\r\nfunction editor_connect_paragraph(entry: HTMLElement, index: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    // init the text-area\r\n    let textarea = entry.querySelector(\".paragraph-input\") as HTMLTextAreaElement | null;\r\n    if (!textarea) {\r\n        throw new Error(\"Could not find textarea\");\r\n    }\r\n    let text_item = article.content[index];\r\n    if (text_item.type != ArticleItemTypeEnum.paragraph) {\r\n        throw new Error(\"Article item at index is not a paragraph\");\r\n    }\r\n    textarea.value = text_item.text;\r\n\r\n    // commit changes when they occur\r\n    textarea.onchange = () => {\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load article\");\r\n        }\r\n        let text_item = article.content[index];\r\n        if (text_item.type != ArticleItemTypeEnum.paragraph) {\r\n            throw new Error(\"Article item at index is not a paragraph\");\r\n        }\r\n        text_item.text = textarea.value;\r\n        save_article_to_local(article);\r\n    };\r\n}\r\n\r\nfunction editor_image_connect(entry: HTMLElement, index: number) {\r\n    // connect the alt-text and its relevant update\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    // init the image-item alt text\r\n    let image_item = article.content[index];\r\n    if (image_item.type != ArticleItemTypeEnum.image) {\r\n        throw new Error(\"Article item at index is not a image\");\r\n    }\r\n\r\n    let alt_text = entry.querySelector(\".image-alt-text-input\") as HTMLInputElement | null;\r\n    if (!alt_text) {\r\n        throw new Error(\"could not find alt_text element\");\r\n    }\r\n\r\n    alt_text.value = image_item.alt_text;\r\n\r\n    // commit alt text changes when they occurs\r\n    alt_text.onchange = () => {\r\n        let article = load_local_article();\r\n        if (!article) {\r\n            throw new Error(\"could not load article\");\r\n        }\r\n        let image_item = article.content[index];\r\n        if (image_item.type != ArticleItemTypeEnum.image) {\r\n            throw new Error(\"Article item at index is not a image\");\r\n        }\r\n        image_item.alt_text = alt_text.value;\r\n        save_article_to_local(article);\r\n    };\r\n\r\n    // connect the upload buttons\r\n    let image_select_button = entry.querySelector(\".image-gallery-select\") as HTMLElement | null;\r\n    let image_upload_button = entry.querySelector(\".image-gallery-upload\") as HTMLElement | null;\r\n\r\n    if (image_select_button) {\r\n        image_select_button.onclick = () => set_image_from_gallery_popup(index);\r\n    }\r\n\r\n    if (image_upload_button) {\r\n        image_upload_button.onclick = () => set_image_from_file_upload(index);\r\n    }\r\n}\r\n\r\nfunction editor_connect_generic(entry: HTMLElement, index: number) {\r\n    // generic delete\r\n    let delete_button = entry.querySelector(\".delete-button\") as HTMLElement | null;\r\n    if (delete_button) {\r\n        delete_button.onclick = () => {\r\n            article_delete_item(index);\r\n            render_editor();\r\n        };\r\n    }\r\n\r\n    // generic move up\r\n    let move_up_button = entry.querySelector(\".move-up-button\") as HTMLElement | null;\r\n    if (move_up_button) {\r\n        move_up_button.onclick = () => {\r\n            article_move_item(index, -1);\r\n            render_editor();\r\n        };\r\n    }\r\n\r\n    // generic move down\r\n    let move_down_button = entry.querySelector(\".move-down-button\") as HTMLElement | null;\r\n    if (move_down_button) {\r\n        move_down_button.onclick = () => {\r\n            article_move_item(index, 1);\r\n            render_editor();\r\n        };\r\n    }\r\n}\r\n\r\n// view functions\r\nfunction render_editor() {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    let y_pos = window.scrollY;\r\n    let editor = get_editor();\r\n    let templates = get_templates();\r\n\r\n    if (!editor) {\r\n        throw new Error(\"Editor is not initialized\");\r\n    }\r\n\r\n    if (!templates) {\r\n        throw new Error(\"templates did not load\");\r\n    }\r\n\r\n    editor.innerHTML = \"\";\r\n    let entry;\r\n\r\n    for (let index = 0; index < article.content.length; index++) {\r\n        switch (article.content[index].type) {\r\n            case ArticleItemTypeEnum.paragraph:\r\n                entry = insert_template_in_editor(templates.paragraph, editor);\r\n                editor_connect_paragraph(entry, index);\r\n                break;\r\n\r\n            case ArticleItemTypeEnum.image:\r\n                entry = insert_template_in_editor(templates.image, editor);\r\n                render_image(entry, index, article);\r\n                editor_image_connect(entry, index);\r\n                break;\r\n\r\n            case ArticleItemTypeEnum.heading:\r\n                entry = insert_template_in_editor(templates.heading, editor);\r\n                // editor_heading_connect(entry, index); TODO fix the editor heading connector\r\n                break;\r\n\r\n            // skip to next item if we dont have a template for the type\r\n            default:\r\n                console.log(\"Item type in editor-render is unknown, skipping\")\r\n                continue;\r\n        }\r\n        editor_connect_generic(entry, index);\r\n    }\r\n\r\n    save_article_to_local(article);\r\n\r\n    requestAnimationFrame(() => {\r\n        window.scrollTo(0, y_pos);\r\n    });\r\n}\r\n\r\n// article functions\r\nfunction article_add_item(item_type: ArticleItemTypeEnum) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load artilce\");\r\n    }\r\n\r\n    let length = article.content.length;\r\n    let new_item: ArticleTextItem | ArticleMediaItem;\r\n\r\n    switch (item_type) {\r\n        case ArticleItemTypeEnum.paragraph:\r\n        case ArticleItemTypeEnum.heading:\r\n            new_item = {\r\n                type: item_type,\r\n                text: \"\",\r\n                index: length\r\n            }\r\n            break;\r\n        case ArticleItemTypeEnum.image:\r\n            new_item = {\r\n                type: item_type,\r\n                alt_text: \"\",\r\n                index: length,\r\n                src_id: undefined,\r\n            }\r\n            break;\r\n    }\r\n\r\n    article.content.push(new_item);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    render_editor();\r\n}\r\n\r\nfunction article_delete_item(index: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    article.content.splice(index, 1);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\nfunction article_move_item(index: number, move_by: number) {\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        throw new Error(\"could not load article\");\r\n    }\r\n\r\n    let target = index + move_by;\r\n    if (target < 0 || target >= article.content.length) {\r\n        throw new Error(\"target position is out of bounds\");\r\n    }\r\n    let [item_to_move] = article.content.splice(index, 1);\r\n    article.content.splice(target, 0, item_to_move);\r\n    article.last_changed = time();\r\n\r\n    save_article_to_local(article);\r\n    return article;\r\n}\r\n\r\n\r\nexport default function main() {\r\n    let user_data = get_local_user_data();\r\n    if (!user_data) {\r\n        // redirect out of editor if not logged in\r\n        window.location.href = \"/\";\r\n        return;\r\n    }\r\n\r\n    // load or initalize the article;\r\n    let article = load_local_article();\r\n    if (!article) {\r\n        article = init_empty_article();\r\n    }\r\n\r\n    let controll_buttons = get_controll_buttons();\r\n    if (!controll_buttons) {\r\n        throw new Error(\"controll buttons not initialized\");\r\n    }\r\n\r\n    controll_buttons.log_button.onclick = () => console.log(article);\r\n    // insertion buttons\r\n    controll_buttons.add_paragraph_button.onclick = () => article_add_item(ArticleItemTypeEnum.paragraph);\r\n    controll_buttons.add_image_button.onclick = () => article_add_item(ArticleItemTypeEnum.image);\r\n    controll_buttons.add_heading_button.onclick = () => article_add_item(ArticleItemTypeEnum.heading);\r\n\r\n    render_editor();\r\n}", "import { post_json, get_smallest_res_from_src } from \"./util\";\r\n\r\ntype Media = {\r\n    id: string,\r\n    uploader_user_id: string,\r\n    filename: string,\r\n    file_extention: string,\r\n    file_mimetype: string,\r\n    file_hash: string,\r\n    alt_text: string,\r\n    content_type: string,\r\n    creation_time: number,\r\n    is_unlisted: boolean,\r\n    unlisted_state_update_time: number,\r\n    is_deleted: boolean,\r\n    deleted_state_update_time: number,\r\n}\r\n\r\nfunction get_gallery_elements() {\r\n    let image_preview_template = document.getElementById(\"gallery-image-preview-template\") as HTMLElement | null;\r\n    let image_display = document.getElementById(\"gallery-image-display\") as HTMLElement | null;\r\n\r\n    if (!image_display || !image_preview_template) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        image_preview_template,\r\n        image_display\r\n    }\r\n}\r\n\r\n\r\nasync function get_all_media() {\r\n    let response = await post_json(\"/media/fetch_all_media_metadata\", {})\r\n    if (response.error) {\r\n        throw new Error(response.error);\r\n    }\r\n\r\n    let all_media: Media[] = response;\r\n\r\n    if (all_media.length > 1) {\r\n        all_media.sort((a: Media, b: Media) => b.creation_time - a.creation_time);\r\n    }\r\n    all_media = all_media.filter((m) => m && m.id)\r\n    return all_media as Media[]\r\n}\r\n\r\nexport default async function main() {\r\n    let html_elements = get_gallery_elements();\r\n    if (!html_elements) {\r\n        throw new Error(\"Gallery HTML elements not initialized\");\r\n    }\r\n\r\n    let all_media = await get_all_media();\r\n    let target_url_promises = all_media.map(async (m) => {\r\n        let target = await get_smallest_res_from_src(m.id, html_elements.image_display.clientWidth);\r\n        return { target, media: m };\r\n    })\r\n    let targets = await Promise.all(target_url_promises);\r\n\r\n    let entry_promises = targets.map((t) => {\r\n        let entry = document.createElement(\"li\");\r\n        let clone = html_elements.image_preview_template.cloneNode(true) as HTMLTemplateElement;\r\n        let clone_content = clone.content;\r\n\r\n        entry.appendChild(clone_content);\r\n        let img = entry.querySelector(\"img\") as HTMLImageElement | null;\r\n        if (!img) {\r\n            throw new Error(\"could not find image element, something went wrong\");\r\n        }\r\n        img.src = t.target;\r\n        return { entry, ...t };\r\n    })\r\n    let entries = await Promise.all(entry_promises);\r\n\r\n    entries.forEach((e) => {\r\n        e.entry.onclick = () => {\r\n            window.opener.receive_data(e.media.id);\r\n            window.close();\r\n        }\r\n    })\r\n\r\n    html_elements.image_display.innerHTML = \"\";\r\n    entries.forEach((e) => {\r\n        html_elements.image_display.appendChild(e.entry);\r\n    });\r\n}\r\n", "import editor_main from \"./editor\";\r\nimport user_main from \"./user\";\r\nimport gallery_popup_main from \"./gallery_popup\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        receive_data: (data: string) => void;\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", (event) => {\r\n    if (window.location.pathname === \"/editor\") {\r\n        editor_main();\r\n    }\r\n    if (window.location.pathname === \"/gallery-popup\") {\r\n        gallery_popup_main();\r\n    }\r\n\r\n    user_main();\r\n});"],
  "mappings": "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",
  "names": ["CACHE_KEY", "save_cache_to_local", "cache", "load_local_cache", "local", "cache_get", "key", "index", "time", "cache_add", "value", "lifetime", "c", "post_json", "endpoint", "data", "user_data", "get_local_user_data", "post_formdata", "response", "json_response", "get_smallest_res_from_src", "image_id", "min_width", "cached_value", "image_metadata", "min", "resolutions", "res", "a", "b", "instance_id", "r", "target_url", "USER_LOCAL_TOKEN_STORAGE_KEY", "USER_LOCAL_DATA_STORAGE_KEY", "get_local_user_data", "token_string", "user_string", "token", "user", "clear_local_user_data", "save_user_data_to_local", "userdata", "data", "get_html_elements", "login_template", "profile_template", "details_container", "get_input_fields", "registration_first_name", "registration_last_name", "registration_email", "registration_password", "registration_repeat_password", "registration_submit", "signin_email", "signin_password", "signin_submit", "logout", "post_json", "main", "render_user", "elements", "clone", "firstname_element", "lastname_element", "logout_button", "enable_register_submit_button", "is_valid", "reason", "inputs", "validate_registration_inputs", "valid", "submit_registration", "register_data", "register_response", "login_data", "login_response", "validate_registration_form", "registration_init", "connect_admin_test_button", "admin_creds", "post_json", "admin_data", "save_user_data_to_local", "main", "render_user", "registration_init", "LOCAL_ARTICLE_STORAGE_KEY", "load_local_article", "article_string", "article", "save_article_to_local", "article_dump", "init_empty_article", "user_data", "get_local_user_data", "article", "time", "save_article_to_local", "get_controll_buttons", "log_button", "add_paragraph_button", "add_image_button", "add_heading_button", "get_templates", "paragraph_templte", "image_templte", "heading_templte", "get_editor", "set_image_from_gallery_popup", "index", "popup", "data", "load_local_article", "item", "render_editor", "set_image_from_file_upload", "input", "media_item", "input_files", "file", "formdata", "image_id", "post_formdata", "render_image", "entry", "display", "get_smallest_res_from_src", "insert_template_in_editor", "template", "editor", "clone", "editor_connect_paragraph", "textarea", "text_item", "editor_image_connect", "image_item", "alt_text", "image_select_button", "image_upload_button", "editor_connect_generic", "delete_button", "article_delete_item", "move_up_button", "article_move_item", "move_down_button", "y_pos", "templates", "article_add_item", "item_type", "length", "new_item", "move_by", "target", "item_to_move", "main", "controll_buttons", "get_gallery_elements", "image_preview_template", "image_display", "get_all_media", "response", "post_json", "all_media", "a", "b", "m", "main", "html_elements", "target_url_promises", "get_smallest_res_from_src", "entry_promises", "t", "entry", "clone_content", "img", "entries", "e", "event", "main"]
}
