{
  "version": 3,
  "sources": ["../../ts/src/util.ts", "../../ts/src/editor.ts", "../../ts/src/user.ts", "../../ts/src/main.ts"],
  "sourcesContent": ["// typing\r\ntype CacheItem = {\r\n    key: string,\r\n    item: string,\r\n    expires_at: number\r\n}\r\n\r\n// globals\r\nlet CACHE: Array<CacheItem> = []; // cache for functions\r\nconst CACHE_KEY = \"C_CACHE_KEY\";\r\n\r\n// internal functions\r\nfunction save_cache_to_localstorage() {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(CACHE));\r\n}\r\n\r\nfunction load_cache_from_localstorage() {\r\n    let local = localStorage.getItem(CACHE_KEY);\r\n    if (!local) {\r\n        return;\r\n    }\r\n    let tmp = JSON.parse(local);\r\n    if (!tmp) {\r\n        return;\r\n    }\r\n    CACHE = tmp;\r\n}\r\n\r\nfunction cache_get(key: string) {\r\n    // load up the cache\r\n    load_cache_from_localstorage();\r\n\r\n    // remove stale keys\r\n    for (let index = 0; index < CACHE.length; index++) {\r\n        if (CACHE[index].expires_at < time()) {\r\n            CACHE.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // save any changes\r\n    save_cache_to_localstorage();\r\n\r\n    // find the item\r\n    for (let index = 0; index < CACHE.length; index++) {\r\n        if (CACHE[index].key == key) {\r\n            return CACHE[index].item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction cache_add(key: string, value: string) {\r\n    load_cache_from_localstorage();\r\n    let c: CacheItem = {\r\n        key: key,\r\n        item: value,\r\n        expires_at: time() + 3600, // valid for one hour\r\n    };\r\n\r\n    CACHE.push(c);\r\n    console.log(c);\r\n    save_cache_to_localstorage();\r\n}\r\n\r\n\r\nexport function time() {\r\n    let d = new Date();\r\n    let current_time = d.getTime() / 1000;\r\n    return current_time;\r\n}\r\n\r\n\r\nexport async function post_json(endpoint: string, data: Object) {\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    let response_json = await response.json();\r\n    return response_json;\r\n}\r\n\r\nexport async function post_formdata(endpoint: string, data: FormData) {\r\n    console.log(\"called stuff\")\r\n    let response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        body: data,\r\n    });\r\n    console.log(response)\r\n\r\n    let json_response = await response.json();\r\n    console.log(json_response);\r\n    return json_response;\r\n}\r\n\r\nexport async function get_smallest_res_from_src(image_id: string, min_width: number) {\r\n    console.log(\"getting smallest item from res\")\r\n    // check the cache first\r\n    let key = `util_get_media_src_by_width${image_id}${min_width}`;\r\n    let cached_value = cache_get(key);\r\n    if (cached_value) {\r\n        console.log(\"cache hit\");\r\n        return cached_value;\r\n    }\r\n\r\n    let image_metadata = await post_json(\"/media/fetch_media\", {\r\n        media_ID: image_id,\r\n    });\r\n\r\n\r\n    let min = Math.pow(min_width, 2);\r\n\r\n    let resolutions = await Promise.all(\r\n        image_metadata.instances.map((res: { instance_id: string, x_dimension: number, y_dimension: number }) => {\r\n            return {\r\n                id: res.instance_id,\r\n                resolution: res.x_dimension * res.y_dimension,\r\n            };\r\n        })\r\n    );\r\n\r\n    // by default pick the highest res, then loop over and select the lowest\r\n    // res that is acceptable for the display.\r\n    resolutions = resolutions.sort((a, b) => a.resolution - b.resolution);\r\n    let instance_id = resolutions[resolutions.length - 1].id;\r\n    for (let r of resolutions) {\r\n        if (r.resolution > min) {\r\n            instance_id = r.id;\r\n            break; // break once the first image res satisfies our condition\r\n        }\r\n    }\r\n\r\n    // format target url\r\n    let target_url = `/media/fetch_media_instance?instance_ID=${instance_id}`;\r\n    // populate cache before returning\r\n    cache_add(key, target_url);\r\n    return target_url;\r\n}", "import { time, post_formdata, get_smallest_res_from_src } from \"./util\";\r\n\r\n// types and declerations\r\ndeclare global {\r\n    interface Window {\r\n        receive_data: (data: string) => void;\r\n    }\r\n}\r\n\r\nenum ItemTypeEnum {\r\n    paragraph,\r\n    image,\r\n    heading\r\n}\r\n\r\ntype TextItem = {\r\n    type: ItemTypeEnum.heading | ItemTypeEnum.paragraph,\r\n    text: string,\r\n    index: number,\r\n}\r\n\r\ntype MediaItem = {\r\n    type: ItemTypeEnum.image,\r\n    alt_text: string,\r\n    src_id: string | undefined,\r\n    index: number,\r\n}\r\n\r\ntype Article = {\r\n    id: undefined | number,\r\n    author_id: undefined | number;\r\n    last_changed: undefined | number;\r\n    content: Array<TextItem | MediaItem>;\r\n}\r\n\r\n// global constants\r\nconst ARTICLE: Article = {\r\n    id: undefined,\r\n    author_id: undefined,\r\n    last_changed: undefined,\r\n    content: [],\r\n};\r\n\r\nconst TEMPLATES = {\r\n    paragraph: document.getElementById(\"article-paragraph-template\") as HTMLTemplateElement | null,\r\n    image: document.getElementById(\"article-image-template\") as HTMLTemplateElement | null,\r\n    heading: document.getElementById(\"article-heading-template\") as HTMLTemplateElement | null,\r\n}\r\n\r\nconst EDITOR = document.getElementById(\"editor-container\");\r\n\r\n\r\n// editor image functions\r\nfunction editor_gallery_pop_up_select(index: number) {\r\n    const popup = window.open(\r\n        \"/gallery-popup\",\r\n        \"popupWindow\",\r\n        \"width=600,height=400\"\r\n    );\r\n\r\n    window.receive_data = function (data: string) {\r\n        if (!ARTICLE.content) {\r\n            return;\r\n        }\r\n\r\n        let item = ARTICLE.content[index];\r\n        if (item.type != ItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        item.src_id = data;\r\n        editor_generate_preview();\r\n    };\r\n}\r\n\r\nfunction editor_image_upload(index: number) {\r\n    // select a file\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"png, jpg, jpeg\";\r\n    input.multiple = false;\r\n    input.onchange = async () => {\r\n        if (!ARTICLE.content) {\r\n            return;\r\n        }\r\n        let media_item = ARTICLE.content[index];\r\n        if (media_item.type != ItemTypeEnum.image) {\r\n            return;\r\n        }\r\n        // retrieve the selected file\r\n        let input_files = input.files;\r\n        if (!input_files) {\r\n            return;\r\n        }\r\n        let files = Array.from(input_files);\r\n        let file = files[0];\r\n        input.remove();\r\n\r\n        // upload the file to the gallery\r\n        let formdata = new FormData();\r\n        formdata.append(\"media\", file);\r\n        let image = await post_formdata(\"/media/upload_media\", formdata);\r\n        let image_id = image.data.results[0].key;\r\n        // set the item source\r\n        media_item.src_id = image_id;\r\n        ARTICLE.last_changed = time();\r\n        editor_generate_preview();\r\n    };\r\n    input.click();\r\n}\r\n\r\nfunction editor_image_render(entry: HTMLElement, index: number) {\r\n    let display = entry.querySelector(\".image-display\") as HTMLImageElement | null;\r\n    if (!display) {\r\n        throw new Error(\"media-display not found\");\r\n    }\r\n\r\n    if (!ARTICLE.content) {\r\n        throw new Error(\"article content not initialized\");\r\n    }\r\n\r\n    let media_item = ARTICLE.content[index];\r\n    if (media_item.type != ItemTypeEnum.image) {\r\n        throw new Error(\"item type is not image\");\r\n    }\r\n\r\n    // if src_id is undefined we have not yet chosen an image.\r\n    if (!media_item.src_id) {\r\n        display.classList.toggle(\"hidden\", true);\r\n        return;\r\n    }\r\n\r\n    // else image_id is defined and we render the image\r\n    const load = async () => {\r\n        if (!ARTICLE.content) {\r\n            throw new Error(\"article content not initialized\");\r\n        }\r\n        let media_item = ARTICLE.content[index];\r\n        if (media_item.type != ItemTypeEnum.image) {\r\n            throw new Error(\"item type is not image\");\r\n        }\r\n        if (!media_item.src_id) {\r\n            throw new Error(\"src_id not found\");\r\n        }\r\n        display.src = await get_smallest_res_from_src(\r\n            media_item.src_id,\r\n            entry.clientWidth\r\n        );\r\n        display.classList.toggle(\"hidden\", false);\r\n    };\r\n    load();\r\n}\r\n\r\nfunction editor_insert_template(template: HTMLTemplateElement) {\r\n    console.log(template);\r\n    if (!EDITOR) {\r\n        throw new Error(\"Editor has not been initalized\");\r\n    }\r\n\r\n    let entry = document.createElement(\"li\");\r\n    let clone = template.cloneNode(true) as HTMLTemplateElement | null;\r\n    if (!clone) {\r\n        throw new Error(\"could not clone template\");\r\n    }\r\n    let item = clone.content;\r\n\r\n    entry.appendChild(item);\r\n    EDITOR.appendChild(entry);\r\n    return entry;\r\n}\r\n\r\nfunction editor_connect_paragraph(entry: HTMLElement, index: number) {\r\n    let textarea = entry.querySelector(\".paragraph-input\") as HTMLTextAreaElement | null;\r\n    if (!textarea) {\r\n        throw new Error(\"Could not find textarea\");\r\n    }\r\n    let text_item = ARTICLE.content[index];\r\n    if (text_item.type != ItemTypeEnum.paragraph) {\r\n        throw new Error(\"Article item at index is not a paragraph\");\r\n    }\r\n    textarea.value = text_item.text;\r\n    textarea.onchange = () => {\r\n        text_item.text = textarea.value;\r\n    };\r\n}\r\n\r\nfunction editor_image_connect(entry: HTMLElement, index: number) {\r\n    // connect the alt-text and its relevant update\r\n    let alt_text = entry.querySelector(\".image-alt-text-input\") as HTMLInputElement | null;\r\n    if (!alt_text) {\r\n        throw new Error(\"could not find alt_text element\");\r\n    }\r\n    let image_item = ARTICLE.content[index];\r\n    if (image_item.type != ItemTypeEnum.image) {\r\n        throw new Error(\"Article item at index is not a image\");\r\n    }\r\n    if (image_item.alt_text) {\r\n        alt_text.value = image_item.alt_text;\r\n    }\r\n    alt_text.onchange = () => {\r\n        image_item.alt_text = alt_text.value;\r\n    };\r\n\r\n    // connect the upload buttons\r\n    let image_select_button = entry.querySelector(\".image-gallery-select\") as HTMLElement | null;\r\n    let image_upload_button = entry.querySelector(\".image-gallery-upload\") as HTMLElement | null;\r\n\r\n    if (image_select_button) {\r\n        image_select_button.onclick = () => editor_gallery_pop_up_select(index);\r\n    }\r\n    if (image_upload_button) {\r\n        image_upload_button.onclick = () => editor_image_upload(index);\r\n    }\r\n}\r\n\r\nfunction editor_connect_generic(entry: HTMLElement, index: number) {\r\n    // generic delete\r\n    let delete_button = entry.querySelector(\".delete-button\") as HTMLElement | null;\r\n    if (delete_button) {\r\n        delete_button.onclick = () => {\r\n            remove_item_from_article(index);\r\n            editor_generate_preview();\r\n        };\r\n    }\r\n\r\n    // generic move up\r\n    let move_up_button = entry.querySelector(\".move-up-button\") as HTMLElement | null;\r\n    if (move_up_button) {\r\n        move_up_button.onclick = () => {\r\n            editor_move_item_up(index);\r\n            editor_generate_preview();\r\n        };\r\n    }\r\n\r\n    // generic move down\r\n    let move_down_button = entry.querySelector(\".move-down-button\") as HTMLElement | null;\r\n    if (move_down_button) {\r\n        move_down_button.onclick = () => {\r\n            editor_move_item_down(index);\r\n            editor_generate_preview();\r\n        };\r\n    }\r\n}\r\n\r\n// view functions\r\nfunction editor_generate_preview() {\r\n    let y_pos = window.scrollY;\r\n    if (!EDITOR) {\r\n        throw new Error(\"Editor is not initialized\");\r\n    }\r\n\r\n    if (!ARTICLE) {\r\n        throw new Error(\"Article is not initialized\");\r\n    }\r\n\r\n    EDITOR.innerHTML = \"\";\r\n\r\n    let entry;\r\n\r\n    for (let index = 0; index < ARTICLE.content.length; index++) {\r\n        switch (ARTICLE.content[index].type) {\r\n            case ItemTypeEnum.paragraph:\r\n                if (!TEMPLATES.paragraph) {\r\n                    throw new Error(\"paragraph template not initialized\");\r\n                }\r\n                entry = editor_insert_template(TEMPLATES.paragraph);\r\n                editor_connect_paragraph(entry, index);\r\n                break;\r\n\r\n            case ItemTypeEnum.image:\r\n                if (!TEMPLATES.image) {\r\n                    throw new Error(\"image template not initialized\");\r\n                }\r\n                console.log(\"inserting image\");\r\n                entry = editor_insert_template(TEMPLATES.image);\r\n                editor_image_render(entry, index);\r\n                editor_image_connect(entry, index);\r\n                break;\r\n\r\n            case ItemTypeEnum.heading:\r\n                if (!TEMPLATES.heading) {\r\n                    throw new Error(\"image template not initialized\");\r\n                }\r\n                entry = editor_insert_template(TEMPLATES.heading);\r\n                // editor_heading_connect(entry, index); // TODO fix the editor heading connector\r\n                break;\r\n\r\n            // skip to next item if we dont have a template for the type\r\n            default:\r\n                console.log(\"Item type in editor-render is unknown, skipping\")\r\n                continue;\r\n        }\r\n        editor_connect_generic(entry, index);\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n        window.scrollTo(0, y_pos);\r\n    });\r\n}\r\n\r\n// article functions\r\nfunction editor_add_item(item_type: ItemTypeEnum) {\r\n\r\n    if (!ARTICLE.content) {\r\n        ARTICLE.content = [];\r\n    }\r\n\r\n    let length = ARTICLE.content.length;\r\n    let new_item: TextItem | MediaItem;\r\n\r\n    switch (item_type) {\r\n        case ItemTypeEnum.paragraph:\r\n        case ItemTypeEnum.heading:\r\n            new_item = {\r\n                type: item_type,\r\n                text: \"\",\r\n                index: length\r\n            }\r\n            break;\r\n        case ItemTypeEnum.image:\r\n            new_item = {\r\n                type: item_type,\r\n                alt_text: \"\",\r\n                index: length,\r\n                src_id: undefined,\r\n            }\r\n            break;\r\n    }\r\n\r\n    ARTICLE.content.push(new_item);\r\n    ARTICLE.last_changed = time();\r\n    editor_generate_preview();\r\n}\r\n\r\nfunction remove_item_from_article(index: number) {\r\n    ARTICLE.content?.splice(index, 1);\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_move_item_down(index_to_change: number) {\r\n    if (!ARTICLE.content) {\r\n        return;\r\n    }\r\n\r\n    if (index_to_change >= ARTICLE.content.length - 1) {\r\n        return;\r\n    }\r\n\r\n    let item = ARTICLE.content[index_to_change];\r\n    ARTICLE.content[index_to_change] = ARTICLE.content[index_to_change + 1];\r\n    ARTICLE.content[index_to_change + 1] = item;\r\n    // assign new indexes\r\n    ARTICLE.content[index_to_change].index = index_to_change;\r\n    ARTICLE.content[index_to_change + 1].index = index_to_change + 1;\r\n\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_move_item_up(index_to_change: number) {\r\n    if (!ARTICLE.content) {\r\n        return;\r\n    }\r\n\r\n    if (index_to_change < 1) {\r\n        return;\r\n    }\r\n    let item = ARTICLE.content[index_to_change];\r\n    ARTICLE.content[index_to_change] = ARTICLE.content[index_to_change - 1];\r\n    ARTICLE.content[index_to_change - 1] = item;\r\n    // assign new indexes\r\n    ARTICLE.content[index_to_change].index = index_to_change;\r\n    ARTICLE.content[index_to_change - 1].index = index_to_change - 1;\r\n\r\n    ARTICLE.last_changed = time();\r\n}\r\n\r\nfunction editor_log_article() {\r\n    console.log(ARTICLE.content);\r\n}\r\n\r\nexport default function main() {\r\n    let log_button = document.getElementById(\"log-article\");\r\n    if (log_button) {\r\n        log_button.onclick = () => editor_log_article();\r\n    }\r\n\r\n    let add_paragraph_button = document.getElementById(\"add-paragraph\");\r\n    if (add_paragraph_button) {\r\n        add_paragraph_button.onclick = () => editor_add_item(ItemTypeEnum.paragraph);\r\n    }\r\n\r\n    let add_image_button = document.getElementById(\"add-image\");\r\n    if (add_image_button) {\r\n        add_image_button.onclick = () => editor_add_item(ItemTypeEnum.image);\r\n    }\r\n\r\n    let add_heading_button = document.getElementById(\"add-heading\");\r\n    if (add_heading_button) {\r\n        add_heading_button.onclick = () => editor_add_item(ItemTypeEnum.heading);\r\n    }\r\n}", "import main from \"./editor\";\r\nimport { post_json, time } from \"./util\";\r\n\r\n// types\r\ntype Token = {\r\n    id: string,\r\n    user_id: string,\r\n    created_at: number,\r\n    expires_at: number,\r\n}\r\n\r\ntype User = {\r\n    id: string,\r\n    first_name: string,\r\n    last_name: string,\r\n    email: string,\r\n    last_edited: number,\r\n    created_at: number,\r\n}\r\n\r\ntype UserData = {\r\n    token: Token,\r\n    user: User\r\n}\r\n\r\ntype Inputs = {\r\n    registration: {\r\n        first_name: HTMLInputElement,\r\n        last_name: HTMLInputElement,\r\n        email: HTMLInputElement,\r\n        password: HTMLInputElement,\r\n        repeat_password: HTMLInputElement,\r\n        submit: HTMLButtonElement,\r\n    },\r\n    signin: {\r\n        email: HTMLInputElement,\r\n        password: HTMLInputElement,\r\n        submit: HTMLButtonElement,\r\n    }\r\n}\r\n\r\ntype Elements = {\r\n    login_template: HTMLTemplateElement,\r\n    profile_template: HTMLTemplateElement,\r\n    details_container: HTMLElement,\r\n}\r\n\r\n// global constants\r\nconst USER_LOCAL_TOKEN_STORAGE_KEY = \"userts-local-user-token\";\r\nconst USER_LOCAL_DATA_STORAGE_KEY = \"userts-local-user-data\";\r\n\r\n// internal core functions\r\nfunction get_local_user_data() {\r\n    let token_string = localStorage.getItem(USER_LOCAL_TOKEN_STORAGE_KEY);\r\n    let user_string = localStorage.getItem(USER_LOCAL_DATA_STORAGE_KEY)\r\n    if (!token_string || !user_string) {\r\n        return null;\r\n    }\r\n\r\n    let token = JSON.parse(token_string);\r\n    let user = JSON.parse(user_string);\r\n    if (!token || !user) {\r\n        return null;\r\n    }\r\n\r\n    let userData: UserData = {\r\n        token: token,\r\n        user: user\r\n    }\r\n    return userData;\r\n}\r\n\r\nfunction clear_local_user_data() {\r\n    localStorage.removeItem(USER_LOCAL_DATA_STORAGE_KEY);\r\n    localStorage.removeItem(USER_LOCAL_TOKEN_STORAGE_KEY);\r\n}\r\n\r\nfunction save_user_data_to_local(userdata: UserData) {\r\n    let token = JSON.stringify(userdata.token);\r\n    let data = JSON.stringify(userdata.user);\r\n    localStorage.setItem(USER_LOCAL_TOKEN_STORAGE_KEY, token);\r\n    localStorage.setItem(USER_LOCAL_DATA_STORAGE_KEY, data);\r\n    return true;\r\n}\r\n\r\nfunction get_html_elements() {\r\n    let login_template = document.querySelector(\".user-details-login-template\") as HTMLTemplateElement | null;\r\n    let profile_template = document.querySelector(\".user-details-profile-template\") as HTMLTemplateElement | null;\r\n    let details_container = document.querySelector(\".user-details-container\") as HTMLElement | null;\r\n\r\n    if (\r\n        !login_template ||\r\n        !profile_template ||\r\n        !details_container\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let elements: Elements = {\r\n        login_template: login_template,\r\n        profile_template: profile_template,\r\n        details_container: details_container,\r\n    }\r\n    return elements;\r\n}\r\n\r\nfunction get_input_fields() {\r\n    let registration_first_name = document.querySelector(\"#user-register-first-name-input\") as HTMLInputElement | null;\r\n    let registration_last_name = document.querySelector(\"#user-register-last-name-input\") as HTMLInputElement | null;\r\n    let registration_email = document.querySelector(\"#user-register-email-input\") as HTMLInputElement | null;\r\n    let registration_password = document.querySelector(\"#user-register-password-input\") as HTMLInputElement | null;\r\n    let registration_repeat_password = document.querySelector(\"#user-register-password-repeat-input\") as HTMLInputElement | null;\r\n    let registration_submit = document.querySelector(\"#user-register-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    let signin_email = document.querySelector(\"#user-signin-email-input\") as HTMLInputElement | null;\r\n    let signin_password = document.querySelector(\"#user-signin-password-input\") as HTMLInputElement | null;\r\n    let signin_submit = document.querySelector(\"#user-signin-submitt-button\") as HTMLButtonElement | null;\r\n\r\n    if (\r\n        !registration_first_name ||\r\n        !registration_last_name ||\r\n        !registration_email ||\r\n        !registration_password ||\r\n        !registration_repeat_password ||\r\n        !registration_submit ||\r\n        !signin_email ||\r\n        !signin_password ||\r\n        !signin_submit\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    let inputs: Inputs = {\r\n        registration: {\r\n            email: registration_email,\r\n            first_name: registration_first_name,\r\n            last_name: registration_last_name,\r\n            password: registration_password,\r\n            repeat_password: registration_repeat_password,\r\n            submit: registration_submit\r\n        },\r\n        signin: {\r\n            email: signin_email,\r\n            password: signin_password,\r\n            submit: signin_submit\r\n        }\r\n    }\r\n\r\n    return inputs\r\n}\r\n\r\n// api coms functions - stuff that talks to the server\r\nfunction logout() {\r\n    let userdata = get_local_user_data();\r\n    if (!userdata) {\r\n        throw new Error(\"No local user-data\");\r\n    }\r\n\r\n    // tell the server to clear the token, the clear local data;\r\n    post_json(\"/user/logout\", { user_token: userdata.token.id });\r\n    clear_local_user_data();\r\n\r\n    // reload the user state etc.\r\n    main();\r\n}\r\n\r\nfunction user_render_details() {\r\n    if (!ELEMENTS.details_container) {\r\n        throw new Error(\"details container not initialized\")\r\n    }\r\n\r\n    if (!ELEMENTS.login_template) {\r\n        throw new Error(\"logintemplate not initialized\")\r\n    }\r\n\r\n    if (!ELEMENTS.profile_template) {\r\n        throw new Error(\"profile template not initialized\")\r\n    }\r\n\r\n    if (!USER.user) {\r\n        ELEMENTS.details_container.innerHTML = \"\";\r\n        let clone = ELEMENTS.login_template.cloneNode(true) as HTMLTemplateElement;\r\n        ELEMENTS.details_container.appendChild(clone.content);\r\n        return;\r\n    }\r\n\r\n    ELEMENTS.details_container.innerHTML = \"\";\r\n\r\n    let clone = ELEMENTS.profile_template.cloneNode(true) as HTMLTemplateElement;\r\n    let profile = clone.content;\r\n    let firstname_element = profile.querySelector(\"#user-profile-first-name\") as HTMLElement | null;\r\n    if (!firstname_element) {\r\n        throw new Error(\"fistname_element not found\");\r\n    }\r\n    firstname_element.innerHTML = USER.user.first_name;\r\n\r\n    let lastname_element = profile.querySelector(\"#user-profile-last-name\") as HTMLElement | null;\r\n    if (!lastname_element) {\r\n        throw new Error(\"lastname_element not found\");\r\n    }\r\n    lastname_element.innerHTML = USER.user.last_name;\r\n\r\n    let logout_button = profile.querySelector(\"#user-profile-logout-button\") as HTMLElement | null;\r\n    if (!logout_button) {\r\n        throw new Error(\"logout_button not found\");\r\n    }\r\n    logout_button.onclick = () => {\r\n        logout();\r\n    };\r\n\r\n    ELEMENTS.details_container.appendChild(profile);\r\n    return;\r\n}\r\n\r\nfunction enable_register_submit_button(is_valid: boolean, reason: string | undefined) {\r\n    if (!INPUTS.registration.submit) {\r\n        throw new Error(\"registration-submit button not found\");\r\n    }\r\n    if (!is_valid) {\r\n        INPUTS.registration.submit.innerHTML = reason ?? \"invalid registration_data\";\r\n        INPUTS.registration.submit.classList.toggle(\"bg-green-600\", false);\r\n        INPUTS.registration.submit.classList.toggle(\"bg-gray-600\", true);\r\n    }\r\n    if (is_valid) {\r\n        INPUTS.registration.submit.innerHTML = \"Register\";\r\n        INPUTS.registration.submit.classList.toggle(\"bg-gray-600\", false);\r\n        INPUTS.registration.submit.classList.toggle(\"bg-green-600\", true);\r\n    }\r\n}\r\n\r\nfunction validate_registration_inputs() {\r\n    if (!INPUTS.registration.password) {\r\n        throw new Error(\"registration password field not found\");\r\n    }\r\n    if (!INPUTS.registration.repeat_password) {\r\n        throw new Error(\"repeat_passowrd registration field not found\");\r\n    }\r\n    if (!INPUTS.registration.email) {\r\n        throw new Error(\"email registration field not found\");\r\n    }\r\n    if (!INPUTS.registration.first_name) {\r\n        throw new Error(\"first_name registration field not found\");\r\n    }\r\n    if (!INPUTS.registration.last_name) {\r\n        throw new Error(\"last_name registration field not found\");\r\n    }\r\n\r\n    let valid: boolean = true;\r\n    let reason: string | undefined = undefined;\r\n    if (\r\n        INPUTS.registration.password.value !=\r\n        INPUTS.registration.repeat_password.value\r\n    ) {\r\n        valid = false;\r\n        reason = \"passwords dont match\";\r\n    }\r\n    if (!INPUTS.registration.first_name.value) {\r\n        valid = false;\r\n        reason = \"missing first name\";\r\n    }\r\n    if (!INPUTS.registration.email.value) {\r\n        valid = false;\r\n        reason = \"missing email\";\r\n    }\r\n    if (!INPUTS.registration.last_name.value) {\r\n        valid = false;\r\n        reason = \"missing last name\";\r\n    }\r\n    if (!INPUTS.registration.password.value) {\r\n        valid = false;\r\n        reason = \"missing password\";\r\n    }\r\n\r\n    INPUTS.registration.valid_inputs = valid;\r\n    enable_register_submit_button(valid, reason);\r\n}\r\n\r\nfunction user_register_submit() {\r\n    if (!INPUTS.registration.valid_inputs) {\r\n        return;\r\n    }\r\n\r\n    const signin = async () => {\r\n        if (!INPUTS.registration.email) {\r\n            throw new Error(\"email value not supplied\");\r\n        }\r\n        if (!INPUTS.registration.password) {\r\n            throw new Error(\"password value not supplied\");\r\n        }\r\n        if (!INPUTS.registration.first_name) {\r\n            throw new Error(\"first name value not supplied\");\r\n        }\r\n        if (!INPUTS.registration.last_name) {\r\n            throw new Error(\"last name value not supplied\");\r\n        }\r\n\r\n        const register_data = {\r\n            email: INPUTS.registration.email.value,\r\n            password: INPUTS.registration.password.value,\r\n            firstname: INPUTS.registration.first_name.value,\r\n            lastname: INPUTS.registration.last_name.value,\r\n        };\r\n\r\n        let register_response = await post_json(\r\n            \"/user/register_new_user\",\r\n            register_data\r\n        )\r\n\r\n        if (register_response.error) {\r\n            throw new Error(register_response.error);\r\n        }\r\n        USER.user = register_response;\r\n\r\n        let login_data = {\r\n            email: register_data.email,\r\n            password: register_data.password,\r\n        };\r\n\r\n        let login_response = await post_json(\"/user/login\", login_data);\r\n        if (login_response.error) {\r\n            throw new Error(login_response.error);\r\n        }\r\n        USER.token = login_response;\r\n        user_save_local();\r\n        window.location.href = \"/\";\r\n    };\r\n    signin();\r\n}\r\n\r\nfunction registration_init() {\r\n    if (!INPUTS.registration.email) {\r\n        throw new Error(\"email input for registration not initalized\")\r\n    }\r\n\r\n    if (!INPUTS.registration.first_name) {\r\n        throw new Error(\"first_name input for registration not initalized\")\r\n    }\r\n\r\n    if (!INPUTS.registration.last_name) {\r\n        throw new Error(\"last_name input for registration not initalized\")\r\n    }\r\n\r\n    if (!INPUTS.registration.password) {\r\n        throw new Error(\"password input for registration not initalized\")\r\n    }\r\n\r\n    if (!INPUTS.registration.repeat_password) {\r\n        throw new Error(\"repeate_password input for registration not initalized\")\r\n    }\r\n\r\n    if (!INPUTS.registration.submit) {\r\n        throw new Error(\"submit input for registration not initalized\")\r\n    }\r\n\r\n    // hook up validation for registration form;\r\n    INPUTS.registration.email.oninput = () => {\r\n        validate_registration_inputs();\r\n    };\r\n    INPUTS.registration.first_name.oninput = () => {\r\n        validate_registration_inputs();\r\n    };\r\n    INPUTS.registration.last_name.oninput = () => {\r\n        validate_registration_inputs();\r\n    };\r\n    INPUTS.registration.password.oninput = () => {\r\n        validate_registration_inputs();\r\n    };\r\n    INPUTS.registration.repeat_password.oninput = () => {\r\n        validate_registration_inputs();\r\n    };\r\n    validate_registration_inputs();\r\n\r\n    INPUTS.registration.submit.onclick = () => {\r\n        user_register_submit();\r\n    };\r\n}\r\n\r\nfunction user_function_init() {\r\n    registration_init();\r\n}\r\n\r\nasync function user_revalidate_token() {\r\n    if (!USER.token) {\r\n        return;\r\n    }\r\n\r\n    if (time() > USER.token.expires_at) {\r\n        USER.token = undefined;\r\n        USER.user = undefined;\r\n        user_save_local();\r\n        return;\r\n    }\r\n\r\n    // refresh if less then 10 minutes left of the token\r\n    if (time() + 600 > USER.token.expires_at) {\r\n        let new_token_response = await post_json(\"/user/refresh_token\", {\r\n            user_token: USER.token.id,\r\n        });\r\n        if (new_token_response.error) {\r\n            throw new Error(new_token_response.error)\r\n        }\r\n        USER.token = new_token_response;\r\n    }\r\n\r\n    if (!USER.token) {\r\n        throw new Error(\"user token not found, i dont know how but you fucked up\");\r\n    }\r\n\r\n    // validate the current user token\r\n    let validation_response = await post_json(\"/user/who\", {\r\n        user_token: USER.token.id\r\n    });\r\n\r\n    if (validation_response.error) {\r\n        if (validation_response.error === \"token invalid\") {\r\n            USER.user = undefined;\r\n            USER.token = undefined;\r\n            user_save_local();\r\n            main();\r\n            return;\r\n        }\r\n        else {\r\n            throw new Error(validation_response.error)\r\n        }\r\n    }\r\n\r\n    USER.token = validation_response as Token;\r\n    // revalidate on expiration\r\n    let timeout = USER.token.expires_at - time(); // at expiration\r\n    timeout = timeout - 60; // 1 minute before expiration\r\n    timeout = timeout * 1000; // to milliseconds\r\n    window.setTimeout(() => {\r\n        user_revalidate_token();\r\n    }, timeout);\r\n    user_save_local();\r\n}\r\n\r\nexport default function user_main() {\r\n    user_revalidate_token();\r\n\r\n    if (ELEMENTS.details_container) {\r\n        user_render_details();\r\n    }\r\n\r\n    // if signing call the other init as well for diff html dom stuff\r\n    if (window.location.pathname === \"/signin\") {\r\n        user_function_init();\r\n    }\r\n}\r\n\r\nexport function get_current_user_token_id() {\r\n    user_load_local();\r\n    if (!USER) {\r\n        return undefined;\r\n    }\r\n    if (!USER.token) {\r\n        return undefined;\r\n    }\r\n    if (!USER.token.id) {\r\n        return undefined;\r\n    }\r\n    return USER.token.id;\r\n}\r\n", "import editor_main from \"./editor\";\r\nimport user_main from \"./user\";\r\n\r\nwindow.addEventListener(\"load\", (event) => {\r\n    if (window.location.pathname === \"/editor\") {\r\n        editor_main();\r\n    }\r\n\r\n    user_main();\r\n});"],
  "mappings": "mBAQA,IAAIA,EAA0B,CAAC,EACzBC,EAAY,cAGlB,SAASC,GAA6B,CAClC,aAAa,QAAQD,EAAW,KAAK,UAAUD,CAAK,CAAC,CACzD,CAEA,SAASG,GAA+B,CACpC,IAAIC,EAAQ,aAAa,QAAQH,CAAS,EAC1C,GAAI,CAACG,EACD,OAEJ,IAAIC,EAAM,KAAK,MAAMD,CAAK,EACrBC,IAGLL,EAAQK,EACZ,CAEA,SAASC,EAAUC,EAAa,CAE5BJ,EAA6B,EAG7B,QAASK,EAAQ,EAAGA,EAAQR,EAAM,OAAQQ,IAClCR,EAAMQ,CAAK,EAAE,WAAaC,EAAK,GAC/BT,EAAM,OAAOQ,EAAO,CAAC,EAK7BN,EAA2B,EAG3B,QAASM,EAAQ,EAAGA,EAAQR,EAAM,OAAQQ,IACtC,GAAIR,EAAMQ,CAAK,EAAE,KAAOD,EACpB,OAAOP,EAAMQ,CAAK,EAAE,KAG5B,OAAO,IACX,CAEA,SAASE,EAAUH,EAAaI,EAAe,CAC3CR,EAA6B,EAC7B,IAAIS,EAAe,CACf,IAAKL,EACL,KAAMI,EACN,WAAYF,EAAK,EAAI,IACzB,EAEAT,EAAM,KAAKY,CAAC,EACZ,QAAQ,IAAIA,CAAC,EACbV,EAA2B,CAC/B,CAGO,SAASO,GAAO,CAGnB,OAFQ,IAAI,KAAK,EACI,QAAQ,EAAI,GAErC,CAGA,eAAsBI,EAAUC,EAAkBC,EAAc,CAU5D,OADoB,MARL,MAAM,MAAMD,EAAU,CACjC,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,UAAUC,CAAI,CAC7B,CAAC,GAEkC,KAAK,CAE5C,CAEA,eAAsBC,EAAcF,EAAkBC,EAAgB,CAClE,QAAQ,IAAI,cAAc,EAC1B,IAAIE,EAAW,MAAM,MAAMH,EAAU,CACjC,OAAQ,OACR,KAAMC,CACV,CAAC,EACD,QAAQ,IAAIE,CAAQ,EAEpB,IAAIC,EAAgB,MAAMD,EAAS,KAAK,EACxC,eAAQ,IAAIC,CAAa,EAClBA,CACX,CAEA,eAAsBC,EAA0BC,EAAkBC,EAAmB,CACjF,QAAQ,IAAI,gCAAgC,EAE5C,IAAId,EAAM,8BAA8Ba,CAAQ,GAAGC,CAAS,GACxDC,EAAehB,EAAUC,CAAG,EAChC,GAAIe,EACA,eAAQ,IAAI,WAAW,EAChBA,EAGX,IAAIC,EAAiB,MAAMV,EAAU,qBAAsB,CACvD,SAAUO,CACd,CAAC,EAGGI,EAAM,KAAK,IAAIH,EAAW,CAAC,EAE3BI,EAAc,MAAM,QAAQ,IAC5BF,EAAe,UAAU,IAAKG,IACnB,CACH,GAAIA,EAAI,YACR,WAAYA,EAAI,YAAcA,EAAI,WACtC,EACH,CACL,EAIAD,EAAcA,EAAY,KAAK,CAACE,EAAGC,IAAMD,EAAE,WAAaC,EAAE,UAAU,EACpE,IAAIC,EAAcJ,EAAYA,EAAY,OAAS,CAAC,EAAE,GACtD,QAASK,KAAKL,EACV,GAAIK,EAAE,WAAaN,EAAK,CACpBK,EAAcC,EAAE,GAChB,KACJ,CAIJ,IAAIC,EAAa,2CAA2CF,CAAW,GAEvE,OAAAnB,EAAUH,EAAKwB,CAAU,EAClBA,CACX,CCxGA,IAAMC,EAAmB,CACrB,GAAI,OACJ,UAAW,OACX,aAAc,OACd,QAAS,CAAC,CACd,EAEMC,EAAY,CACd,UAAW,SAAS,eAAe,4BAA4B,EAC/D,MAAO,SAAS,eAAe,wBAAwB,EACvD,QAAS,SAAS,eAAe,0BAA0B,CAC/D,EAEMC,EAAS,SAAS,eAAe,kBAAkB,EAIzD,SAASC,EAA6BC,EAAe,CACjD,IAAMC,EAAQ,OAAO,KACjB,iBACA,cACA,sBACJ,EAEA,OAAO,aAAe,SAAUC,EAAc,CAC1C,GAAI,CAACN,EAAQ,QACT,OAGJ,IAAIO,EAAOP,EAAQ,QAAQI,CAAK,EAC5BG,EAAK,MAAQ,IAGjBA,EAAK,OAASD,EACdE,EAAwB,EAC5B,CACJ,CAEA,SAASC,EAAoBL,EAAe,CAExC,IAAIM,EAAQ,SAAS,cAAc,OAAO,EAC1CA,EAAM,KAAO,OACbA,EAAM,OAAS,iBACfA,EAAM,SAAW,GACjBA,EAAM,SAAW,SAAY,CACzB,GAAI,CAACV,EAAQ,QACT,OAEJ,IAAIW,EAAaX,EAAQ,QAAQI,CAAK,EACtC,GAAIO,EAAW,MAAQ,EACnB,OAGJ,IAAIC,EAAcF,EAAM,MACxB,GAAI,CAACE,EACD,OAGJ,IAAIC,EADQ,MAAM,KAAKD,CAAW,EACjB,CAAC,EAClBF,EAAM,OAAO,EAGb,IAAII,EAAW,IAAI,SACnBA,EAAS,OAAO,QAASD,CAAI,EAE7B,IAAIE,GADQ,MAAMC,EAAc,sBAAuBF,CAAQ,GAC1C,KAAK,QAAQ,CAAC,EAAE,IAErCH,EAAW,OAASI,EACpBf,EAAQ,aAAeiB,EAAK,EAC5BT,EAAwB,CAC5B,EACAE,EAAM,MAAM,CAChB,CAEA,SAASQ,EAAoBC,EAAoBf,EAAe,CAC5D,IAAIgB,EAAUD,EAAM,cAAc,gBAAgB,EAClD,GAAI,CAACC,EACD,MAAM,IAAI,MAAM,yBAAyB,EAG7C,GAAI,CAACpB,EAAQ,QACT,MAAM,IAAI,MAAM,iCAAiC,EAGrD,IAAIW,EAAaX,EAAQ,QAAQI,CAAK,EACtC,GAAIO,EAAW,MAAQ,EACnB,MAAM,IAAI,MAAM,wBAAwB,EAI5C,GAAI,CAACA,EAAW,OAAQ,CACpBS,EAAQ,UAAU,OAAO,SAAU,EAAI,EACvC,MACJ,EAGa,SAAY,CACrB,GAAI,CAACpB,EAAQ,QACT,MAAM,IAAI,MAAM,iCAAiC,EAErD,IAAIW,EAAaX,EAAQ,QAAQI,CAAK,EACtC,GAAIO,EAAW,MAAQ,EACnB,MAAM,IAAI,MAAM,wBAAwB,EAE5C,GAAI,CAACA,EAAW,OACZ,MAAM,IAAI,MAAM,kBAAkB,EAEtCS,EAAQ,IAAM,MAAMC,EAChBV,EAAW,OACXQ,EAAM,WACV,EACAC,EAAQ,UAAU,OAAO,SAAU,EAAK,CAC5C,GACK,CACT,CAEA,SAASE,EAAuBC,EAA+B,CAE3D,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACrB,EACD,MAAM,IAAI,MAAM,gCAAgC,EAGpD,IAAIiB,EAAQ,SAAS,cAAc,IAAI,EACnCK,EAAQD,EAAS,UAAU,EAAI,EACnC,GAAI,CAACC,EACD,MAAM,IAAI,MAAM,0BAA0B,EAE9C,IAAIjB,EAAOiB,EAAM,QAEjB,OAAAL,EAAM,YAAYZ,CAAI,EACtBL,EAAO,YAAYiB,CAAK,EACjBA,CACX,CAEA,SAASM,EAAyBN,EAAoBf,EAAe,CACjE,IAAIsB,EAAWP,EAAM,cAAc,kBAAkB,EACrD,GAAI,CAACO,EACD,MAAM,IAAI,MAAM,yBAAyB,EAE7C,IAAIC,EAAY3B,EAAQ,QAAQI,CAAK,EACrC,GAAIuB,EAAU,MAAQ,EAClB,MAAM,IAAI,MAAM,0CAA0C,EAE9DD,EAAS,MAAQC,EAAU,KAC3BD,EAAS,SAAW,IAAM,CACtBC,EAAU,KAAOD,EAAS,KAC9B,CACJ,CAEA,SAASE,EAAqBT,EAAoBf,EAAe,CAE7D,IAAIyB,EAAWV,EAAM,cAAc,uBAAuB,EAC1D,GAAI,CAACU,EACD,MAAM,IAAI,MAAM,iCAAiC,EAErD,IAAIC,EAAa9B,EAAQ,QAAQI,CAAK,EACtC,GAAI0B,EAAW,MAAQ,EACnB,MAAM,IAAI,MAAM,sCAAsC,EAEtDA,EAAW,WACXD,EAAS,MAAQC,EAAW,UAEhCD,EAAS,SAAW,IAAM,CACtBC,EAAW,SAAWD,EAAS,KACnC,EAGA,IAAIE,EAAsBZ,EAAM,cAAc,uBAAuB,EACjEa,EAAsBb,EAAM,cAAc,uBAAuB,EAEjEY,IACAA,EAAoB,QAAU,IAAM5B,EAA6BC,CAAK,GAEtE4B,IACAA,EAAoB,QAAU,IAAMvB,EAAoBL,CAAK,EAErE,CAEA,SAAS6B,EAAuBd,EAAoBf,EAAe,CAE/D,IAAI8B,EAAgBf,EAAM,cAAc,gBAAgB,EACpDe,IACAA,EAAc,QAAU,IAAM,CAC1BC,EAAyB/B,CAAK,EAC9BI,EAAwB,CAC5B,GAIJ,IAAI4B,EAAiBjB,EAAM,cAAc,iBAAiB,EACtDiB,IACAA,EAAe,QAAU,IAAM,CAC3BC,EAAoBjC,CAAK,EACzBI,EAAwB,CAC5B,GAIJ,IAAI8B,EAAmBnB,EAAM,cAAc,mBAAmB,EAC1DmB,IACAA,EAAiB,QAAU,IAAM,CAC7BC,EAAsBnC,CAAK,EAC3BI,EAAwB,CAC5B,EAER,CAGA,SAASA,GAA0B,CAC/B,IAAIgC,EAAQ,OAAO,QACnB,GAAI,CAACtC,EACD,MAAM,IAAI,MAAM,2BAA2B,EAG/C,GAAI,CAACF,EACD,MAAM,IAAI,MAAM,4BAA4B,EAGhDE,EAAO,UAAY,GAEnB,IAAIiB,EAEJ,QAASf,EAAQ,EAAGA,EAAQJ,EAAQ,QAAQ,OAAQI,IAAS,CACzD,OAAQJ,EAAQ,QAAQI,CAAK,EAAE,KAAM,CACjC,IAAK,GACD,GAAI,CAACH,EAAU,UACX,MAAM,IAAI,MAAM,oCAAoC,EAExDkB,EAAQG,EAAuBrB,EAAU,SAAS,EAClDwB,EAAyBN,EAAOf,CAAK,EACrC,MAEJ,IAAK,GACD,GAAI,CAACH,EAAU,MACX,MAAM,IAAI,MAAM,gCAAgC,EAEpD,QAAQ,IAAI,iBAAiB,EAC7BkB,EAAQG,EAAuBrB,EAAU,KAAK,EAC9CiB,EAAoBC,EAAOf,CAAK,EAChCwB,EAAqBT,EAAOf,CAAK,EACjC,MAEJ,IAAK,GACD,GAAI,CAACH,EAAU,QACX,MAAM,IAAI,MAAM,gCAAgC,EAEpDkB,EAAQG,EAAuBrB,EAAU,OAAO,EAEhD,MAGJ,QACI,QAAQ,IAAI,iDAAiD,EAC7D,QACR,CACAgC,EAAuBd,EAAOf,CAAK,CACvC,CAEA,sBAAsB,IAAM,CACxB,OAAO,SAAS,EAAGoC,CAAK,CAC5B,CAAC,CACL,CAGA,SAASC,EAAgBC,EAAyB,CAEzC1C,EAAQ,UACTA,EAAQ,QAAU,CAAC,GAGvB,IAAI2C,EAAS3C,EAAQ,QAAQ,OACzB4C,EAEJ,OAAQF,EAAW,CACf,IAAK,GACL,IAAK,GACDE,EAAW,CACP,KAAMF,EACN,KAAM,GACN,MAAOC,CACX,EACA,MACJ,IAAK,GACDC,EAAW,CACP,KAAMF,EACN,SAAU,GACV,MAAOC,EACP,OAAQ,MACZ,EACA,KACR,CAEA3C,EAAQ,QAAQ,KAAK4C,CAAQ,EAC7B5C,EAAQ,aAAeiB,EAAK,EAC5BT,EAAwB,CAC5B,CAEA,SAAS2B,EAAyB/B,EAAe,CAC7CJ,EAAQ,SAAS,OAAOI,EAAO,CAAC,EAChCJ,EAAQ,aAAeiB,EAAK,CAChC,CAEA,SAASsB,EAAsBM,EAAyB,CAKpD,GAJI,CAAC7C,EAAQ,SAIT6C,GAAmB7C,EAAQ,QAAQ,OAAS,EAC5C,OAGJ,IAAIO,EAAOP,EAAQ,QAAQ6C,CAAe,EAC1C7C,EAAQ,QAAQ6C,CAAe,EAAI7C,EAAQ,QAAQ6C,EAAkB,CAAC,EACtE7C,EAAQ,QAAQ6C,EAAkB,CAAC,EAAItC,EAEvCP,EAAQ,QAAQ6C,CAAe,EAAE,MAAQA,EACzC7C,EAAQ,QAAQ6C,EAAkB,CAAC,EAAE,MAAQA,EAAkB,EAE/D7C,EAAQ,aAAeiB,EAAK,CAChC,CAEA,SAASoB,EAAoBQ,EAAyB,CAKlD,GAJI,CAAC7C,EAAQ,SAIT6C,EAAkB,EAClB,OAEJ,IAAItC,EAAOP,EAAQ,QAAQ6C,CAAe,EAC1C7C,EAAQ,QAAQ6C,CAAe,EAAI7C,EAAQ,QAAQ6C,EAAkB,CAAC,EACtE7C,EAAQ,QAAQ6C,EAAkB,CAAC,EAAItC,EAEvCP,EAAQ,QAAQ6C,CAAe,EAAE,MAAQA,EACzC7C,EAAQ,QAAQ6C,EAAkB,CAAC,EAAE,MAAQA,EAAkB,EAE/D7C,EAAQ,aAAeiB,EAAK,CAChC,CAEA,SAAS6B,GAAqB,CAC1B,QAAQ,IAAI9C,EAAQ,OAAO,CAC/B,CAEe,SAAR+C,GAAwB,CAC3B,IAAIC,EAAa,SAAS,eAAe,aAAa,EAClDA,IACAA,EAAW,QAAU,IAAMF,EAAmB,GAGlD,IAAIG,EAAuB,SAAS,eAAe,eAAe,EAC9DA,IACAA,EAAqB,QAAU,IAAMR,EAAgB,CAAsB,GAG/E,IAAIS,EAAmB,SAAS,eAAe,WAAW,EACtDA,IACAA,EAAiB,QAAU,IAAMT,EAAgB,CAAkB,GAGvE,IAAIU,EAAqB,SAAS,eAAe,aAAa,EAC1DA,IACAA,EAAmB,QAAU,IAAMV,EAAgB,CAAoB,EAE/E,CC/VA,IAAMW,EAA+B,0BAC/BC,EAA8B,yBAGpC,SAASC,GAAsB,CAC3B,IAAIC,EAAe,aAAa,QAAQH,CAA4B,EAChEI,EAAc,aAAa,QAAQH,CAA2B,EAClE,GAAI,CAACE,GAAgB,CAACC,EAClB,OAAO,KAGX,IAAIC,EAAQ,KAAK,MAAMF,CAAY,EAC/BG,EAAO,KAAK,MAAMF,CAAW,EACjC,MAAI,CAACC,GAAS,CAACC,EACJ,KAGc,CACrB,MAAOD,EACP,KAAMC,CACV,CAEJ,CAEA,SAASC,GAAwB,CAC7B,aAAa,WAAWN,CAA2B,EACnD,aAAa,WAAWD,CAA4B,CACxD,CA6EA,SAASQ,GAAS,CACd,IAAIC,EAAWC,EAAoB,EACnC,GAAI,CAACD,EACD,MAAM,IAAI,MAAM,oBAAoB,EAIxCE,EAAU,eAAgB,CAAE,WAAYF,EAAS,MAAM,EAAG,CAAC,EAC3DG,EAAsB,EAGtBC,EAAK,CACT,CAEA,SAASC,GAAsB,CAC3B,GAAI,CAAC,SAAS,kBACV,MAAM,IAAI,MAAM,mCAAmC,EAGvD,GAAI,CAAC,SAAS,eACV,MAAM,IAAI,MAAM,+BAA+B,EAGnD,GAAI,CAAC,SAAS,iBACV,MAAM,IAAI,MAAM,kCAAkC,EAGtD,GAAI,CAAC,KAAK,KAAM,CACZ,SAAS,kBAAkB,UAAY,GACvC,IAAIC,EAAQ,SAAS,eAAe,UAAU,EAAI,EAClD,SAAS,kBAAkB,YAAYA,EAAM,OAAO,EACpD,MACJ,CAEA,SAAS,kBAAkB,UAAY,GAGvC,IAAIC,EADQ,SAAS,iBAAiB,UAAU,EAAI,EAChC,QAChBC,EAAoBD,EAAQ,cAAc,0BAA0B,EACxE,GAAI,CAACC,EACD,MAAM,IAAI,MAAM,4BAA4B,EAEhDA,EAAkB,UAAY,KAAK,KAAK,WAExC,IAAIC,EAAmBF,EAAQ,cAAc,yBAAyB,EACtE,GAAI,CAACE,EACD,MAAM,IAAI,MAAM,4BAA4B,EAEhDA,EAAiB,UAAY,KAAK,KAAK,UAEvC,IAAIC,EAAgBH,EAAQ,cAAc,6BAA6B,EACvE,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,yBAAyB,EAE7CA,EAAc,QAAU,IAAM,CAC1BX,EAAO,CACX,EAEA,SAAS,kBAAkB,YAAYQ,CAAO,CAElD,CAEA,SAASI,EAA8BC,EAAmBC,EAA4B,CAClF,GAAI,CAAC,OAAO,aAAa,OACrB,MAAM,IAAI,MAAM,sCAAsC,EAErDD,IACD,OAAO,aAAa,OAAO,UAAYC,GAAU,4BACjD,OAAO,aAAa,OAAO,UAAU,OAAO,eAAgB,EAAK,EACjE,OAAO,aAAa,OAAO,UAAU,OAAO,cAAe,EAAI,GAE/DD,IACA,OAAO,aAAa,OAAO,UAAY,WACvC,OAAO,aAAa,OAAO,UAAU,OAAO,cAAe,EAAK,EAChE,OAAO,aAAa,OAAO,UAAU,OAAO,eAAgB,EAAI,EAExE,CAEA,SAASE,GAA+B,CACpC,GAAI,CAAC,OAAO,aAAa,SACrB,MAAM,IAAI,MAAM,uCAAuC,EAE3D,GAAI,CAAC,OAAO,aAAa,gBACrB,MAAM,IAAI,MAAM,8CAA8C,EAElE,GAAI,CAAC,OAAO,aAAa,MACrB,MAAM,IAAI,MAAM,oCAAoC,EAExD,GAAI,CAAC,OAAO,aAAa,WACrB,MAAM,IAAI,MAAM,yCAAyC,EAE7D,GAAI,CAAC,OAAO,aAAa,UACrB,MAAM,IAAI,MAAM,wCAAwC,EAG5D,IAAIC,EAAiB,GACjBF,EAEA,OAAO,aAAa,SAAS,OAC7B,OAAO,aAAa,gBAAgB,QAEpCE,EAAQ,GACRF,EAAS,wBAER,OAAO,aAAa,WAAW,QAChCE,EAAQ,GACRF,EAAS,sBAER,OAAO,aAAa,MAAM,QAC3BE,EAAQ,GACRF,EAAS,iBAER,OAAO,aAAa,UAAU,QAC/BE,EAAQ,GACRF,EAAS,qBAER,OAAO,aAAa,SAAS,QAC9BE,EAAQ,GACRF,EAAS,oBAGb,OAAO,aAAa,aAAeE,EACnCJ,EAA8BI,EAAOF,CAAM,CAC/C,CAEA,SAASG,GAAuB,CAC5B,GAAI,CAAC,OAAO,aAAa,aACrB,QAGW,SAAY,CACvB,GAAI,CAAC,OAAO,aAAa,MACrB,MAAM,IAAI,MAAM,0BAA0B,EAE9C,GAAI,CAAC,OAAO,aAAa,SACrB,MAAM,IAAI,MAAM,6BAA6B,EAEjD,GAAI,CAAC,OAAO,aAAa,WACrB,MAAM,IAAI,MAAM,+BAA+B,EAEnD,GAAI,CAAC,OAAO,aAAa,UACrB,MAAM,IAAI,MAAM,8BAA8B,EAGlD,IAAMC,EAAgB,CAClB,MAAO,OAAO,aAAa,MAAM,MACjC,SAAU,OAAO,aAAa,SAAS,MACvC,UAAW,OAAO,aAAa,WAAW,MAC1C,SAAU,OAAO,aAAa,UAAU,KAC5C,EAEIC,EAAoB,MAAMhB,EAC1B,0BACAe,CACJ,EAEA,GAAIC,EAAkB,MAClB,MAAM,IAAI,MAAMA,EAAkB,KAAK,EAE3C,KAAK,KAAOA,EAEZ,IAAIC,EAAa,CACb,MAAOF,EAAc,MACrB,SAAUA,EAAc,QAC5B,EAEIG,EAAiB,MAAMlB,EAAU,cAAeiB,CAAU,EAC9D,GAAIC,EAAe,MACf,MAAM,IAAI,MAAMA,EAAe,KAAK,EAExC,KAAK,MAAQA,EACb,gBAAgB,EAChB,OAAO,SAAS,KAAO,GAC3B,GACO,CACX,CAEA,SAASC,GAAoB,CACzB,GAAI,CAAC,OAAO,aAAa,MACrB,MAAM,IAAI,MAAM,6CAA6C,EAGjE,GAAI,CAAC,OAAO,aAAa,WACrB,MAAM,IAAI,MAAM,kDAAkD,EAGtE,GAAI,CAAC,OAAO,aAAa,UACrB,MAAM,IAAI,MAAM,iDAAiD,EAGrE,GAAI,CAAC,OAAO,aAAa,SACrB,MAAM,IAAI,MAAM,gDAAgD,EAGpE,GAAI,CAAC,OAAO,aAAa,gBACrB,MAAM,IAAI,MAAM,wDAAwD,EAG5E,GAAI,CAAC,OAAO,aAAa,OACrB,MAAM,IAAI,MAAM,8CAA8C,EAIlE,OAAO,aAAa,MAAM,QAAU,IAAM,CACtCP,EAA6B,CACjC,EACA,OAAO,aAAa,WAAW,QAAU,IAAM,CAC3CA,EAA6B,CACjC,EACA,OAAO,aAAa,UAAU,QAAU,IAAM,CAC1CA,EAA6B,CACjC,EACA,OAAO,aAAa,SAAS,QAAU,IAAM,CACzCA,EAA6B,CACjC,EACA,OAAO,aAAa,gBAAgB,QAAU,IAAM,CAChDA,EAA6B,CACjC,EACAA,EAA6B,EAE7B,OAAO,aAAa,OAAO,QAAU,IAAM,CACvCE,EAAqB,CACzB,CACJ,CAEA,SAASM,GAAqB,CAC1BD,EAAkB,CACtB,CAEA,eAAeE,GAAwB,CACnC,GAAI,CAAC,KAAK,MACN,OAGJ,GAAIC,EAAK,EAAI,KAAK,MAAM,WAAY,CAChC,KAAK,MAAQ,OACb,KAAK,KAAO,OACZ,gBAAgB,EAChB,MACJ,CAGA,GAAIA,EAAK,EAAI,IAAM,KAAK,MAAM,WAAY,CACtC,IAAIC,EAAqB,MAAMvB,EAAU,sBAAuB,CAC5D,WAAY,KAAK,MAAM,EAC3B,CAAC,EACD,GAAIuB,EAAmB,MACnB,MAAM,IAAI,MAAMA,EAAmB,KAAK,EAE5C,KAAK,MAAQA,CACjB,CAEA,GAAI,CAAC,KAAK,MACN,MAAM,IAAI,MAAM,yDAAyD,EAI7E,IAAIC,EAAsB,MAAMxB,EAAU,YAAa,CACnD,WAAY,KAAK,MAAM,EAC3B,CAAC,EAED,GAAIwB,EAAoB,MACpB,GAAIA,EAAoB,QAAU,gBAAiB,CAC/C,KAAK,KAAO,OACZ,KAAK,MAAQ,OACb,gBAAgB,EAChBtB,EAAK,EACL,MACJ,KAEI,OAAM,IAAI,MAAMsB,EAAoB,KAAK,EAIjD,KAAK,MAAQA,EAEb,IAAIC,EAAU,KAAK,MAAM,WAAaH,EAAK,EAC3CG,EAAUA,EAAU,GACpBA,EAAUA,EAAU,IACpB,OAAO,WAAW,IAAM,CACpBJ,EAAsB,CAC1B,EAAGI,CAAO,EACV,gBAAgB,CACpB,CAEe,SAARC,GAA6B,CAChCL,EAAsB,EAElB,SAAS,mBACTlB,EAAoB,EAIpB,OAAO,SAAS,WAAa,WAC7BiB,EAAmB,CAE3B,CC7bA,OAAO,iBAAiB,OAASO,GAAU,CACnC,OAAO,SAAS,WAAa,WAC7BC,EAAY,EAGhBC,EAAU,CACd,CAAC",
  "names": ["CACHE", "CACHE_KEY", "save_cache_to_localstorage", "load_cache_from_localstorage", "local", "tmp", "cache_get", "key", "index", "time", "cache_add", "value", "c", "post_json", "endpoint", "data", "post_formdata", "response", "json_response", "get_smallest_res_from_src", "image_id", "min_width", "cached_value", "image_metadata", "min", "resolutions", "res", "a", "b", "instance_id", "r", "target_url", "ARTICLE", "TEMPLATES", "EDITOR", "editor_gallery_pop_up_select", "index", "popup", "data", "item", "editor_generate_preview", "editor_image_upload", "input", "media_item", "input_files", "file", "formdata", "image_id", "post_formdata", "time", "editor_image_render", "entry", "display", "get_smallest_res_from_src", "editor_insert_template", "template", "clone", "editor_connect_paragraph", "textarea", "text_item", "editor_image_connect", "alt_text", "image_item", "image_select_button", "image_upload_button", "editor_connect_generic", "delete_button", "remove_item_from_article", "move_up_button", "editor_move_item_up", "move_down_button", "editor_move_item_down", "y_pos", "editor_add_item", "item_type", "length", "new_item", "index_to_change", "editor_log_article", "main", "log_button", "add_paragraph_button", "add_image_button", "add_heading_button", "USER_LOCAL_TOKEN_STORAGE_KEY", "USER_LOCAL_DATA_STORAGE_KEY", "get_local_user_data", "token_string", "user_string", "token", "user", "clear_local_user_data", "logout", "userdata", "get_local_user_data", "post_json", "clear_local_user_data", "main", "user_render_details", "clone", "profile", "firstname_element", "lastname_element", "logout_button", "enable_register_submit_button", "is_valid", "reason", "validate_registration_inputs", "valid", "user_register_submit", "register_data", "register_response", "login_data", "login_response", "registration_init", "user_function_init", "user_revalidate_token", "time", "new_token_response", "validation_response", "timeout", "user_main", "event", "main", "user_main"]
}
